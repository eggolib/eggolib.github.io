{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to eggolib's Documentation! This documentation extends the information given by the documentation for the Origins mod . It's recommended that you familiarize yourself with developing a datapack using Origins/Apoli so that you know how exactly stuff works. If you have any questions, feel free to DM me in Discord ( eggohito#9048 ) , mention me in the #addon-support channel of the Origins Discord server , or open up a discussion / issue in the GitHub repository for eggolib. Helpful links Minecraft Fandom Wiki: Data Pack Minecraft Fandom Wiki: Tutorials (Creating a data pack)","title":"Home"},{"location":"#welcome_to_eggolibs_documentation","text":"This documentation extends the information given by the documentation for the Origins mod . It's recommended that you familiarize yourself with developing a datapack using Origins/Apoli so that you know how exactly stuff works. If you have any questions, feel free to DM me in Discord ( eggohito#9048 ) , mention me in the #addon-support channel of the Origins Discord server , or open up a discussion / issue in the GitHub repository for eggolib.","title":"Welcome to eggolib's Documentation!"},{"location":"#helpful_links","text":"Minecraft Fandom Wiki: Data Pack Minecraft Fandom Wiki: Tutorials (Creating a data pack)","title":"Helpful links"},{"location":"misc/class_data_registries/","text":"Class Data Registries Class data registries are objects that are instances of HashMap<String, Class<?>> , meaning that it's a table of key-value pairs where strings are the keys while Java classes are the values for the keys. It can be used to map the string into a Java class using the ClassDataRegistry#mapStringToClass method. List In-Game Screen Class","title":"Class Data Registries"},{"location":"misc/class_data_registries/#class_data_registries","text":"Class data registries are objects that are instances of HashMap<String, Class<?>> , meaning that it's a table of key-value pairs where strings are the keys while Java classes are the values for the keys. It can be used to map the string into a Java class using the ClassDataRegistry#mapStringToClass method.","title":"Class Data Registries"},{"location":"misc/class_data_registries/#list","text":"In-Game Screen Class","title":"List"},{"location":"misc/class_data_registries/in-game_screen_class/","text":"In-Game Screen Class Class Data Registry A registry mapping for client-side screen classes that are used in-game. Reference: io.github.eggohito.eggolib.data.EggolibClassDataClient.java Mapping String Class \"anvil\" AnvilScreen.class \"beacon\" BeaconScreen.class \"blast_furnace\" BlastFurnaceScreen.class \"book_edit\" BookEditScreen.class \"book\" BookScreen.class \"brewing_stand\" BrewingStandScreen.class \"cartography_table\" CartographyTableScreen.class \"chat\" ChatScreen.class \"command_block\" CommandBlockScreen.class \"crafting\" CraftingScreen.class \"creative_inventory\" CreativeInventoryScreen.class \"death\" DeathScreen.class \"enchantment\" EnchantmentScreen.class \"furnace\" FurnaceScreen.class \"game_menu\" GameMenuScreen.class \"game_mode_selection\" GameModeSelectionScreen.class \"generic_3x3_container\" Generic3x3ContainerScreen.class \"generic_container\" GenericContainerScreen.class \"grindstone\" GrindstoneScreen.class \"hopper\" HopperScreen.class \"horse\" HorseScreen.class \"inventory\" InventoryScreen.class \"jigsaw_block\" JigsawBlockScreen.class \"lectern\" LecternScreen.class \"loom\" LoomScreen.class \"merchant\" MerchantScreen.class \"minecart_command_block\" MinecartCommandBlockScreen.class \"shulker_box\" ShulkerBoxScreen.class \"sign_edit\" SignEditScreen.class \"smithing\" SmithingScreen.class \"smoker\" SmokerScreen.class \"stonecutter\" StonecutterScreen.class \"structure_block\" StructureBlockScreen.class Extras (Origins) String Class \"choose_origin\" ChooseOriginScreen.class \"view_origin\" ViewOriginScreen.class","title":"In-Game Screen Class (Class Data Registries)"},{"location":"misc/class_data_registries/in-game_screen_class/#in-game_screen_class","text":"Class Data Registry A registry mapping for client-side screen classes that are used in-game. Reference: io.github.eggohito.eggolib.data.EggolibClassDataClient.java","title":"In-Game Screen Class"},{"location":"misc/class_data_registries/in-game_screen_class/#mapping","text":"String Class \"anvil\" AnvilScreen.class \"beacon\" BeaconScreen.class \"blast_furnace\" BlastFurnaceScreen.class \"book_edit\" BookEditScreen.class \"book\" BookScreen.class \"brewing_stand\" BrewingStandScreen.class \"cartography_table\" CartographyTableScreen.class \"chat\" ChatScreen.class \"command_block\" CommandBlockScreen.class \"crafting\" CraftingScreen.class \"creative_inventory\" CreativeInventoryScreen.class \"death\" DeathScreen.class \"enchantment\" EnchantmentScreen.class \"furnace\" FurnaceScreen.class \"game_menu\" GameMenuScreen.class \"game_mode_selection\" GameModeSelectionScreen.class \"generic_3x3_container\" Generic3x3ContainerScreen.class \"generic_container\" GenericContainerScreen.class \"grindstone\" GrindstoneScreen.class \"hopper\" HopperScreen.class \"horse\" HorseScreen.class \"inventory\" InventoryScreen.class \"jigsaw_block\" JigsawBlockScreen.class \"lectern\" LecternScreen.class \"loom\" LoomScreen.class \"merchant\" MerchantScreen.class \"minecart_command_block\" MinecartCommandBlockScreen.class \"shulker_box\" ShulkerBoxScreen.class \"sign_edit\" SignEditScreen.class \"smithing\" SmithingScreen.class \"smoker\" SmokerScreen.class \"stonecutter\" StonecutterScreen.class \"structure_block\" StructureBlockScreen.class","title":"Mapping"},{"location":"misc/class_data_registries/in-game_screen_class/#extras_origins","text":"String Class \"choose_origin\" ChooseOriginScreen.class \"view_origin\" ViewOriginScreen.class","title":"Extras (Origins)"},{"boost":1,"location":"types/bientity_action_types/","text":"Bi-entity Action Types Bi-entity action types operate on a Pair<Entity, Entity> or in simpler terms: an ' actor ' and a ' target '. The ' actor ' and the ' target ' is determined by the used power type and can be swapped. These are available to power/action types that provides a bientity_action object field. As a rule of thumb, the ' actor ' is usually the entity that invoked the action (e.g: uses or attacks an entity) while the ' target ' is the entity being targeted (e.g: the entity being used or attacked). Note See the documentation for Origins/Apoli's bi-entity action types for a list of bi-entity action types added by Origins/Apoli. List Damage","title":"Bi-entity Action Types"},{"location":"types/bientity_action_types/#bi-entity_action_types","text":"Bi-entity action types operate on a Pair<Entity, Entity> or in simpler terms: an ' actor ' and a ' target '. The ' actor ' and the ' target ' is determined by the used power type and can be swapped. These are available to power/action types that provides a bientity_action object field. As a rule of thumb, the ' actor ' is usually the entity that invoked the action (e.g: uses or attacks an entity) while the ' target ' is the entity being targeted (e.g: the entity being used or attacked). Note See the documentation for Origins/Apoli's bi-entity action types for a list of bi-entity action types added by Origins/Apoli.","title":"Bi-entity Action Types"},{"location":"types/bientity_action_types/#list","text":"Damage","title":"List"},{"boost":1,"location":"types/bientity_condition_types/","text":"Bi-entity Condition Types Bi-entity condition types operate on a Pair<Entity, Entity> or in simpler terms: an ' actor ' and a ' target '. The ' actor ' and the ' target ' is determined by the used power type and can be swapped. These are available to power/action/condition types that provides a bientity_condition object field. Note See the documentation for Origins/Apoli's bi-entity condition types for a list of bi-entity condition types added by Origins/Apoli. List Colliding Compare Score Equal Has Matching Tag Owner","title":"Bi-entity Condition Types"},{"location":"types/bientity_condition_types/#bi-entity_condition_types","text":"Bi-entity condition types operate on a Pair<Entity, Entity> or in simpler terms: an ' actor ' and a ' target '. The ' actor ' and the ' target ' is determined by the used power type and can be swapped. These are available to power/action/condition types that provides a bientity_condition object field. Note See the documentation for Origins/Apoli's bi-entity condition types for a list of bi-entity condition types added by Origins/Apoli.","title":"Bi-entity Condition Types"},{"location":"types/bientity_condition_types/#list","text":"Colliding Compare Score Equal Has Matching Tag Owner","title":"List"},{"boost":1,"location":"types/block_action_types/","text":"Block Action Types Block action types operate on a Triple<World, BlockPos, Direction> , which allows for modifying a block at a certain World and/or BlockPos . These are available to power/action/condition types that provides a block_action object field. Note See the documentation for Origins/Apoli's block action types for a list of block action types added by Origins/Apoli. List Area of Effect","title":"Block Action Types"},{"location":"types/block_action_types/#block_action_types","text":"Block action types operate on a Triple<World, BlockPos, Direction> , which allows for modifying a block at a certain World and/or BlockPos . These are available to power/action/condition types that provides a block_action object field. Note See the documentation for Origins/Apoli's block action types for a list of block action types added by Origins/Apoli.","title":"Block Action Types"},{"location":"types/block_action_types/#list","text":"Area of Effect","title":"List"},{"boost":1,"location":"types/block_condition_types/","text":"Block Condition Types Block condition types operate on a CachedBlockPosition , essentially a combination of World and BlockPos , which allows retrieving all necessary information about a certain block. These are available to power/action/condition types that provide a block_condition object field. Note See the documentation for Origins/Apoli's block condition types for a list of block condition types added by Origins/Apoli. List Air Command","title":"Block Condition Types"},{"location":"types/block_condition_types/#block_condition_types","text":"Block condition types operate on a CachedBlockPosition , essentially a combination of World and BlockPos , which allows retrieving all necessary information about a certain block. These are available to power/action/condition types that provide a block_condition object field. Note See the documentation for Origins/Apoli's block condition types for a list of block condition types added by Origins/Apoli.","title":"Block Condition Types"},{"location":"types/block_condition_types/#list","text":"Air Command","title":"List"},{"boost":1,"location":"types/damage_condition_types/","text":"Damage Condition Types Damage condition types operate on a Pair<DamageSource, Float> , allowing to check not only the source of the damage dealt but also how much damage was dealt. These are available to power/condition types that provides a damage_condition object field. Note See the documentation for Origins/Apoli's damage condition types for a list of damage condition types added by Origins/Apoli. List NBT Projectile","title":"Damage Condition Types"},{"location":"types/damage_condition_types/#damage_condition_types","text":"Damage condition types operate on a Pair<DamageSource, Float> , allowing to check not only the source of the damage dealt but also how much damage was dealt. These are available to power/condition types that provides a damage_condition object field. Note See the documentation for Origins/Apoli's damage condition types for a list of damage condition types added by Origins/Apoli.","title":"Damage Condition Types"},{"location":"types/damage_condition_types/#list","text":"NBT Projectile","title":"List"},{"boost":1,"location":"types/data_types/","text":"Data Types Data types are used everywhere in JSON files. Every field in a JSON file have a specific type. For example, a page about a specific power type tells you which fields are supported and which data type they need to have. Note See the documentation for Origins/Apoli's data types for a list of data types added by Origins/Apoli. List Abstract Team Collision Rule Entity Offset Functional Key Generalized Positioned Item Stack Key Math Operation Moon Phase Perspective Positive Integer Precipitation Render Mode Scoreboard Sound Category Visibility Rule","title":"Data Types"},{"location":"types/data_types/#data_types","text":"Data types are used everywhere in JSON files. Every field in a JSON file have a specific type. For example, a page about a specific power type tells you which fields are supported and which data type they need to have. Note See the documentation for Origins/Apoli's data types for a list of data types added by Origins/Apoli.","title":"Data Types"},{"location":"types/data_types/#list","text":"Abstract Team Collision Rule Entity Offset Functional Key Generalized Positioned Item Stack Key Math Operation Moon Phase Perspective Positive Integer Precipitation Render Mode Scoreboard Sound Category Visibility Rule","title":"List"},{"boost":1,"location":"types/dimension_type_condition_types/","text":"Dimension Type Condition Types Dimension type condition types operate on a RegistryEntry<DimensionType> , allowing to check the dimension type properties of a certain dimension. These are available to power/condition types that provides a dimension_type_condition object field. List Ambient Light Bed Works Coordinate Scale Effects Fixed Time Has Ceiling Has Raids Has Skylight Height Infiniburn Is Natural Is Piglin Safe Is Ultrawarm Logical Height Min Y Monster Spawn Block Light Limit Respawn Anchor Works","title":"Dimension Type Condition Types"},{"location":"types/dimension_type_condition_types/#dimension_type_condition_types","text":"Dimension type condition types operate on a RegistryEntry<DimensionType> , allowing to check the dimension type properties of a certain dimension. These are available to power/condition types that provides a dimension_type_condition object field.","title":"Dimension Type Condition Types"},{"location":"types/dimension_type_condition_types/#list","text":"Ambient Light Bed Works Coordinate Scale Effects Fixed Time Has Ceiling Has Raids Has Skylight Height Infiniburn Is Natural Is Piglin Safe Is Ultrawarm Logical Height Min Y Monster Spawn Block Light Limit Respawn Anchor Works","title":"List"},{"boost":1,"location":"types/entity_action_types/","text":"Entity Action Types Entity action types operate on an Entity . Some entity action types only affect certain entity types. These are available to power/action types that provides an entity_action object field. Note See the documentation for Origins/Apoli's entity action types for a list of entity action types added by Origins/Apoli. List Calculate Resource Change Health Change Insomnia Ticks Close Screen Damage Drop Inventory Fire Projectile Modify Health Modify Inventory Modify Key Sequence Open Inventory Play Sound Remove Power Replace Inventory Selector Action Set Perspective Spawn Entity","title":"Entity Action Types"},{"location":"types/entity_action_types/#entity_action_types","text":"Entity action types operate on an Entity . Some entity action types only affect certain entity types. These are available to power/action types that provides an entity_action object field. Note See the documentation for Origins/Apoli's entity action types for a list of entity action types added by Origins/Apoli.","title":"Entity Action Types"},{"location":"types/entity_action_types/#list","text":"Calculate Resource Change Health Change Insomnia Ticks Close Screen Damage Drop Inventory Fire Projectile Modify Health Modify Inventory Modify Key Sequence Open Inventory Play Sound Remove Power Replace Inventory Selector Action Set Perspective Spawn Entity","title":"List"},{"boost":1,"location":"types/entity_condition_types/","text":"Entity Condition Types Entity condition types operate on an Entity , which allows access to the World . These are used in most powers in the condition (or entity_condition , for other power/action/condition types) object field, which restricts when a power is active. Note See the documentation for Origins/Apoli's entity condition types for a list of entity condition types added by Origins/Apoli. List Block Collision Breaking Block Crawling Exposed to Weather Has Spawn Point Has Tag In Block In Screen In Snow In Team In Thunderstorm Inventory Moon Phase Permission Level Perspective Scoreboard","title":"Entity Condition Types"},{"location":"types/entity_condition_types/#entity_condition_types","text":"Entity condition types operate on an Entity , which allows access to the World . These are used in most powers in the condition (or entity_condition , for other power/action/condition types) object field, which restricts when a power is active. Note See the documentation for Origins/Apoli's entity condition types for a list of entity condition types added by Origins/Apoli.","title":"Entity Condition Types"},{"location":"types/entity_condition_types/#list","text":"Block Collision Breaking Block Crawling Exposed to Weather Has Spawn Point Has Tag In Block In Screen In Snow In Team In Thunderstorm Inventory Moon Phase Permission Level Perspective Scoreboard","title":"List"},{"boost":1,"location":"types/item_action_types/","text":"Item Action Types Item action types operate on a Pair , which allows for modification of the item stack and accessing data from the world. These are available to power/action types that provide an item_action object field. Note See the documentation for Origins/Apoli's item action types for a list of item action types added by Origins/Apoli. List Modify","title":"Item Action Types"},{"location":"types/item_action_types/#item_action_types","text":"Item action types operate on a Pair , which allows for modification of the item stack and accessing data from the world. These are available to power/action types that provide an item_action object field. Note See the documentation for Origins/Apoli's item action types for a list of item action types added by Origins/Apoli.","title":"Item Action Types"},{"location":"types/item_action_types/#list","text":"Modify","title":"List"},{"boost":1,"location":"types/item_condition_types/","text":"Item Condition Types Item condition types operate on an ItemStack . These are available to power/action/condition types that provides an item_condition object field. Note See the documentation for Origins/Apoli's item condition types for a list of item condition types added by Origins/Apoli. List Block Item Enchantment Fuel Tool","title":"Item Condition Types"},{"location":"types/item_condition_types/#item_condition_types","text":"Item condition types operate on an ItemStack . These are available to power/action/condition types that provides an item_condition object field. Note See the documentation for Origins/Apoli's item condition types for a list of item condition types added by Origins/Apoli.","title":"Item Condition Types"},{"location":"types/item_condition_types/#list","text":"Block Item Enchantment Fuel Tool","title":"List"},{"boost":1,"location":"types/meta_action_types/","text":"Meta Action Types Meta action types are independent of the type they operate on, essentially combining or modifying other action types. The actions which are modified have to be of the type the field of the meta action type requires. For example, if you have a field which requires an entity action type and you plan to use the And (Meta Action Type) , the action type provided inside the aforementioned meta action type has to be an entity action type . Note See the documentation for Origins/Apoli's meta action types for a list of meta action types added by Origins/Apoli. List Loop","title":"Meta Action Types"},{"location":"types/meta_action_types/#meta_action_types","text":"Meta action types are independent of the type they operate on, essentially combining or modifying other action types. The actions which are modified have to be of the type the field of the meta action type requires. For example, if you have a field which requires an entity action type and you plan to use the And (Meta Action Type) , the action type provided inside the aforementioned meta action type has to be an entity action type . Note See the documentation for Origins/Apoli's meta action types for a list of meta action types added by Origins/Apoli.","title":"Meta Action Types"},{"location":"types/meta_action_types/#list","text":"Loop","title":"List"},{"boost":1,"location":"types/meta_condition_types/","text":"Meta Condition Types Meta condition types are independent of the type they operate on, essentially combining or modifying other condition types. The conditions which are modified have to be of the type the field of the meta condition type requires. For example, if you have a field that requires an entity condition type and you plan to use the And (Meta Condition Type) , the condition type provided inside the aforementioned meta condition type has to be an entity condition type . Note See the documentation for Origins/Apoli's meta condition types for a list of meta condition types added by Origins/Apoli. List Chance","title":"Meta Condition Types"},{"location":"types/meta_condition_types/#meta_condition_types","text":"Meta condition types are independent of the type they operate on, essentially combining or modifying other condition types. The conditions which are modified have to be of the type the field of the meta condition type requires. For example, if you have a field that requires an entity condition type and you plan to use the And (Meta Condition Type) , the condition type provided inside the aforementioned meta condition type has to be an entity condition type . Note See the documentation for Origins/Apoli's meta condition types for a list of meta condition types added by Origins/Apoli.","title":"Meta Condition Types"},{"location":"types/meta_condition_types/#list","text":"Chance","title":"List"},{"boost":1,"location":"types/power_types/","text":"Power Types Power types are what grants functionality to powers. Each power has a type, specified with a type field in the JSON file. Which type a power is defines which other fields it requires and supports. Unless stated otherwise, each power type supports a condition object field that can check for entity condition types . See Power (JSON Format) for more details. Note See the documentation for Origins/Apoli's power types for a list of power types added by Origins/Apoli. Regular types Crawling Inventory Invisibility Model Flip Starting Equipment Stat Action-related Action on Block Place Action on Critical Hit Action on Item Pickup Action on Key Sequence Game Event Listener Modifying types Modify Bounciness Modify Breathing Modify FOV Modify Hurt Ticks Modify Label Render Modify Mouse Sensitivity Preventing types Prevent Block Place Prevent Critical Hit Prevent Item Pickup Prevent Key Use","title":"Power Types"},{"location":"types/power_types/#power_types","text":"Power types are what grants functionality to powers. Each power has a type, specified with a type field in the JSON file. Which type a power is defines which other fields it requires and supports. Unless stated otherwise, each power type supports a condition object field that can check for entity condition types . See Power (JSON Format) for more details. Note See the documentation for Origins/Apoli's power types for a list of power types added by Origins/Apoli.","title":"Power Types"},{"location":"types/power_types/#regular_types","text":"Crawling Inventory Invisibility Model Flip Starting Equipment Stat","title":"Regular types"},{"location":"types/power_types/#action-related","text":"Action on Block Place Action on Critical Hit Action on Item Pickup Action on Key Sequence Game Event Listener","title":"Action-related"},{"location":"types/power_types/#modifying_types","text":"Modify Bounciness Modify Breathing Modify FOV Modify Hurt Ticks Modify Label Render Modify Mouse Sensitivity","title":"Modifying types"},{"location":"types/power_types/#preventing_types","text":"Prevent Block Place Prevent Critical Hit Prevent Item Pickup Prevent Key Use","title":"Preventing types"},{"boost":2,"location":"types/bientity_action_types/damage/","text":"Damage Bi-entity Action Type Deals damage to the target entity as if the actor entity attacked it. Type ID: eggolib:damage Note If the modifier or modifiers field is specified, the max health of the entity will be used as the base value for the modifier(s). Fields Field Type Default Description amount Float optional If specified, this amount of damage will be dealt to the target entity. source Damage Source Determines the source for the damage to be used. Controls the death message, invulnerabilities or whether armor should be taken into account. modifier Attribute Modifier optional If specified, this modifier will be applied to the damage dealt to the target entity. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the damage dealt to the target entity. Examples Example #1 Example #2 \"bientity_action\" : { \"type\" : \"eggolib:damage\" , \"amount\" : 2 , \"source\" : { \"name\" : \"generic\" } } This example will deal 2 (or 1 heart of) generic damage to the target entity. \"bientity_action\" : { \"type\" : \"eggolib:damage\" , \"source\" : { \"name\" : \"onFire\" , \"fire\" : true }, \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : 0.25 } } This example wil deal 25% onFire damage to the target entity. If the max health of the target entity is 20, this example will deal 5 (2 and a half hearts of) onFire damage.","title":"Damage (Bi-entity Action Type)"},{"location":"types/bientity_action_types/damage/#damage","text":"Bi-entity Action Type Deals damage to the target entity as if the actor entity attacked it. Type ID: eggolib:damage Note If the modifier or modifiers field is specified, the max health of the entity will be used as the base value for the modifier(s).","title":"Damage"},{"location":"types/bientity_action_types/damage/#fields","text":"Field Type Default Description amount Float optional If specified, this amount of damage will be dealt to the target entity. source Damage Source Determines the source for the damage to be used. Controls the death message, invulnerabilities or whether armor should be taken into account. modifier Attribute Modifier optional If specified, this modifier will be applied to the damage dealt to the target entity. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the damage dealt to the target entity.","title":"Fields"},{"location":"types/bientity_action_types/damage/#examples","text":"Example #1 Example #2 \"bientity_action\" : { \"type\" : \"eggolib:damage\" , \"amount\" : 2 , \"source\" : { \"name\" : \"generic\" } } This example will deal 2 (or 1 heart of) generic damage to the target entity. \"bientity_action\" : { \"type\" : \"eggolib:damage\" , \"source\" : { \"name\" : \"onFire\" , \"fire\" : true }, \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : 0.25 } } This example wil deal 25% onFire damage to the target entity. If the max health of the target entity is 20, this example will deal 5 (2 and a half hearts of) onFire damage.","title":"Examples"},{"boost":2,"location":"types/bientity_condition_types/colliding/","text":"Colliding Bi-entity Condition Type Checks if the actor entity is colliding with the target entity. Type ID: eggolib:colliding Fields Field Type Default Description offset Vector optional If specified, this offset will be applied to the actor entity's bounding box. Examples Example #1 Example #2 \"bientity_condition\" : { \"type\" : \"eggolib:colliding\" } \"bientity_condition\" : { \"type\" : \"apoli:or\" , \"conditions\" : [ { \"type\" : \"eggolib:colliding\" , \"offset\" : { \"x\" : 0.5 , \"y\" : 0.0 , \"z\" : 0.5 } }, { \"type\" : \"eggolib:colliding\" , \"offset\" : { \"x\" : -0.5 , \"y\" : 0.0 , \"z\" : -0.5 } } ] }","title":"Colliding (Bi-entity Condition Type)"},{"location":"types/bientity_condition_types/colliding/#colliding","text":"Bi-entity Condition Type Checks if the actor entity is colliding with the target entity. Type ID: eggolib:colliding","title":"Colliding"},{"location":"types/bientity_condition_types/colliding/#fields","text":"Field Type Default Description offset Vector optional If specified, this offset will be applied to the actor entity's bounding box.","title":"Fields"},{"location":"types/bientity_condition_types/colliding/#examples","text":"Example #1 Example #2 \"bientity_condition\" : { \"type\" : \"eggolib:colliding\" } \"bientity_condition\" : { \"type\" : \"apoli:or\" , \"conditions\" : [ { \"type\" : \"eggolib:colliding\" , \"offset\" : { \"x\" : 0.5 , \"y\" : 0.0 , \"z\" : 0.5 } }, { \"type\" : \"eggolib:colliding\" , \"offset\" : { \"x\" : -0.5 , \"y\" : 0.0 , \"z\" : -0.5 } } ] }","title":"Examples"},{"boost":2,"location":"types/bientity_condition_types/compare_score/","text":"Compare Score Bi-entity Condition Type Compares the score of the actor from a scoreboard objective to the score of the target from another scoreboard objective. Type ID: eggolib:compare_score Fields Field Type Default Description actor_objective String The name of the scoreboard objective that stores the score of the actor. target_objective String The name of the scoreboard objective that stores the score of the target. comparison Comparison \"==\" Determines how the scores of the actor and target are compared. Examples Example #1 \"bientity_condition\" : { \"type\" : \"eggolib:compare_score\" , \"actor_objective\" : \"a.id\" , \"target_objective\" : \"t.id\" , \"comparison\" : \"==\" } This example will check if the score of the actor in the a.id scoreboard objective is equal to the score of the target in the t.id scoreboard objective.","title":"Compare Score (Bi-entity Condition Type)"},{"location":"types/bientity_condition_types/compare_score/#compare_score","text":"Bi-entity Condition Type Compares the score of the actor from a scoreboard objective to the score of the target from another scoreboard objective. Type ID: eggolib:compare_score","title":"Compare Score"},{"location":"types/bientity_condition_types/compare_score/#fields","text":"Field Type Default Description actor_objective String The name of the scoreboard objective that stores the score of the actor. target_objective String The name of the scoreboard objective that stores the score of the target. comparison Comparison \"==\" Determines how the scores of the actor and target are compared.","title":"Fields"},{"location":"types/bientity_condition_types/compare_score/#examples","text":"Example #1 \"bientity_condition\" : { \"type\" : \"eggolib:compare_score\" , \"actor_objective\" : \"a.id\" , \"target_objective\" : \"t.id\" , \"comparison\" : \"==\" } This example will check if the score of the actor in the a.id scoreboard objective is equal to the score of the target in the t.id scoreboard objective.","title":"Examples"},{"boost":2,"location":"types/bientity_condition_types/equal/","text":"Equal Bi-entity Condition Type Checks if the actor entity is the target entity. Type ID: eggolib:equal Fields None. Examples \"bientity_condition\" : { \"type\" : \"eggolib:equal\" }","title":"Equal (Bi-entity Condition Type)"},{"location":"types/bientity_condition_types/equal/#equal","text":"Bi-entity Condition Type Checks if the actor entity is the target entity. Type ID: eggolib:equal","title":"Equal"},{"location":"types/bientity_condition_types/equal/#fields","text":"None.","title":"Fields"},{"location":"types/bientity_condition_types/equal/#examples","text":"\"bientity_condition\" : { \"type\" : \"eggolib:equal\" }","title":"Examples"},{"boost":2,"location":"types/bientity_condition_types/has_matching_tag/","text":"Has Matching Tag Bi-entity Condition Type Checks whether the actor entity and the target entity has matching scoreboard tag(s) (added via the /tag command). Type ID: eggolib:has_matching_tag Fields None. Examples Example #1 \"bientity_condition\" : { \"type\" : \"eggolib:has_matching_tag\" }","title":"Has Matching Tag (Bi-entity Condition Type)"},{"location":"types/bientity_condition_types/has_matching_tag/#has_matching_tag","text":"Bi-entity Condition Type Checks whether the actor entity and the target entity has matching scoreboard tag(s) (added via the /tag command). Type ID: eggolib:has_matching_tag","title":"Has Matching Tag"},{"location":"types/bientity_condition_types/has_matching_tag/#fields","text":"None.","title":"Fields"},{"location":"types/bientity_condition_types/has_matching_tag/#examples","text":"Example #1 \"bientity_condition\" : { \"type\" : \"eggolib:has_matching_tag\" }","title":"Examples"},{"boost":2,"location":"types/bientity_condition_types/owner/","text":"Owner Bi-entity Condition Type Checks if the actor entity is the owner of the tamable or ownable target entity. Type ID: eggolib:owner Fields None. Examples Example #1 \"bientity_condition\" : { \"type\" : \"eggolib:owner\" }","title":"Owner (Bi-entity Condition Type)"},{"location":"types/bientity_condition_types/owner/#owner","text":"Bi-entity Condition Type Checks if the actor entity is the owner of the tamable or ownable target entity. Type ID: eggolib:owner","title":"Owner"},{"location":"types/bientity_condition_types/owner/#fields","text":"None.","title":"Fields"},{"location":"types/bientity_condition_types/owner/#examples","text":"Example #1 \"bientity_condition\" : { \"type\" : \"eggolib:owner\" }","title":"Examples"},{"boost":2,"location":"types/block_action_types/area_of_effect/","text":"Area of Effect Block Action Type Executes an action on blocks that are within the specified radius. Type ID: eggolib:area_of_effect Fields Field Type Default Description radius Integer Determines the radius of the area to execute the action on. shape String \"cube\" Determines the shape of the area to execute the action on. Accepts one of \"cube\" , \"star\" or \"sphere\" . block_action Block Action The action to execute on the block(s) within the specified radius. block_condition [ Block Condition ][5] optional If specified, only execute the specified action on the block(s) that fulfills this condition. Examples Example #1 Example #2 \"block_action\" : { \"type\" : \"eggolib:area_of_effect\" , \"radius\" : 16 , \"shape\" : \"cube\" , \"block_action\" : { \"type\" : \"apoli:modify_block_state\" , \"property\" : \"waterlogged\" , \"value\" : false } } This example will make all waterloggable blocks not waterlogged within 16 blocks radius with a shape of a cube. \"block_action\" : { \"type\" : \"eggolib:area_of_effect\" , \"radius\" : 4 , \"shape\" : \"star\" , \"block_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:air\" }, \"block_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:dragon_immune\" , \"inverted\" : true } } This example will replace all blocks that aren't included in the #minecraft:dragon_immune block tag with Air within a 4 blocks radius with a shape of a star.","title":"Area of Effect (Block Action Type)"},{"location":"types/block_action_types/area_of_effect/#area_of_effect","text":"Block Action Type Executes an action on blocks that are within the specified radius. Type ID: eggolib:area_of_effect","title":"Area of Effect"},{"location":"types/block_action_types/area_of_effect/#fields","text":"Field Type Default Description radius Integer Determines the radius of the area to execute the action on. shape String \"cube\" Determines the shape of the area to execute the action on. Accepts one of \"cube\" , \"star\" or \"sphere\" . block_action Block Action The action to execute on the block(s) within the specified radius. block_condition [ Block Condition ][5] optional If specified, only execute the specified action on the block(s) that fulfills this condition.","title":"Fields"},{"location":"types/block_action_types/area_of_effect/#examples","text":"Example #1 Example #2 \"block_action\" : { \"type\" : \"eggolib:area_of_effect\" , \"radius\" : 16 , \"shape\" : \"cube\" , \"block_action\" : { \"type\" : \"apoli:modify_block_state\" , \"property\" : \"waterlogged\" , \"value\" : false } } This example will make all waterloggable blocks not waterlogged within 16 blocks radius with a shape of a cube. \"block_action\" : { \"type\" : \"eggolib:area_of_effect\" , \"radius\" : 4 , \"shape\" : \"star\" , \"block_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:air\" }, \"block_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:dragon_immune\" , \"inverted\" : true } } This example will replace all blocks that aren't included in the #minecraft:dragon_immune block tag with Air within a 4 blocks radius with a shape of a star.","title":"Examples"},{"boost":2,"location":"types/block_condition_types/air/","text":"Air Block Condition Type Checks if the block is air/void air/cave air. Type ID: eggolib:air Fields None. Examples \"block_condition\" : { \"type\" : \"eggolib:air\" }","title":"Air (Block Condition Type)"},{"location":"types/block_condition_types/air/#air","text":"Block Condition Type Checks if the block is air/void air/cave air. Type ID: eggolib:air","title":"Air"},{"location":"types/block_condition_types/air/#fields","text":"None.","title":"Fields"},{"location":"types/block_condition_types/air/#examples","text":"\"block_condition\" : { \"type\" : \"eggolib:air\" }","title":"Examples"},{"boost":2,"location":"types/block_condition_types/command/","text":"Command Block Condition Type Compares the result of the specified command to the specified value. Type ID: eggolib:command Caution This block condition type is only effective server-side. This means that client-side power types won't be able to evaluate this properly. Fields Field Type Default Description command String The command to execute. comparison Comparison \">=\" Determines how the result of the command is compared to a value. compare_to Integer 1 The value to compare the result of the command to. Examples Example #1 \"block_condition\" : { \"type\" : \"eggolib:command\" , \"command\" : \"execute if entity @e[type = minecraft:creeper, distance = ..4]\" } This example will check if there are 1 or more Creepers at the position of the block the block condition type is evaluated on.","title":"Command (Block Condition Type)"},{"location":"types/block_condition_types/command/#command","text":"Block Condition Type Compares the result of the specified command to the specified value. Type ID: eggolib:command Caution This block condition type is only effective server-side. This means that client-side power types won't be able to evaluate this properly.","title":"Command"},{"location":"types/block_condition_types/command/#fields","text":"Field Type Default Description command String The command to execute. comparison Comparison \">=\" Determines how the result of the command is compared to a value. compare_to Integer 1 The value to compare the result of the command to.","title":"Fields"},{"location":"types/block_condition_types/command/#examples","text":"Example #1 \"block_condition\" : { \"type\" : \"eggolib:command\" , \"command\" : \"execute if entity @e[type = minecraft:creeper, distance = ..4]\" } This example will check if there are 1 or more Creepers at the position of the block the block condition type is evaluated on.","title":"Examples"},{"boost":2,"location":"types/damage_condition_types/nbt/","text":"NBT Damage Condition Type Checks the NBT of the entity of the damage source. Type ID: eggolib:nbt Warning If the damage source does not originate from an entity, then this condition type will evaluate to false. Fields Field Type Default Description nbt String The NBT data to check for. Examples Example #1 Example #2 \"damage_condition\" : { \"type\" : \"eggolib:nbt\" , \"nbt\" : \"{Tags: [\\\"hitter\\\"]}\" } This example will check if the entity of the damage source has a hitter tag added via the /tag command. \"damage_condition\" : { \"type\" : \"apoli:and\" , \"conditions\" : [ { \"type\" : \"apoli:projectile\" , \"projectile\" : \"minecraft:snowball\" }, { \"type\" : \"eggolib:nbt\" , \"nbt\" : \"{Item: {tag: {customProjectile: 1b}}}\" } ] } This example will check if the damage source originated from a Snowball projectile that has a customProjectile item NBT with a value of 1b .","title":"NBT (Damage Condition Type)"},{"location":"types/damage_condition_types/nbt/#nbt","text":"Damage Condition Type Checks the NBT of the entity of the damage source. Type ID: eggolib:nbt Warning If the damage source does not originate from an entity, then this condition type will evaluate to false.","title":"NBT"},{"location":"types/damage_condition_types/nbt/#fields","text":"Field Type Default Description nbt String The NBT data to check for.","title":"Fields"},{"location":"types/damage_condition_types/nbt/#examples","text":"Example #1 Example #2 \"damage_condition\" : { \"type\" : \"eggolib:nbt\" , \"nbt\" : \"{Tags: [\\\"hitter\\\"]}\" } This example will check if the entity of the damage source has a hitter tag added via the /tag command. \"damage_condition\" : { \"type\" : \"apoli:and\" , \"conditions\" : [ { \"type\" : \"apoli:projectile\" , \"projectile\" : \"minecraft:snowball\" }, { \"type\" : \"eggolib:nbt\" , \"nbt\" : \"{Item: {tag: {customProjectile: 1b}}}\" } ] } This example will check if the damage source originated from a Snowball projectile that has a customProjectile item NBT with a value of 1b .","title":"Examples"},{"boost":2,"location":"types/damage_condition_types/projectile/","text":"Projectile Damage Condition Type Checks whether the damage source is projectile damage; can also optionally check the type(s) of projectile or its NBT. Type ID: eggolib:projectile Fields Field Type Default Description projectile Identifier optional If specified, the condition will evaluate to true if the projectile matches this entity type identifier. projectiles Array of Identifiers optional If specified, the condition will evaluate to true if the projectile matches any of these entity type identifiers. nbt String optional If specified, the condition will evaluate to true if the projectile has this NBT data. Examples Example #1 Example #2 \"damage_condition\" : { \"type\" : \"eggolib:projectile\" , \"nbt\" : \"{Item: {tag: {heavyProjectile: 1b}}}\" } This example will check if the damage source is of a projectile that has the {Item: {tag: {heavyProjectile: 1b}}} NBT. \"damage_condition\" : { \"type\" : \"eggolib:projectile\" , \"projectiles\" : [ \"minecraft:arrow\" , \"minecraft:spectral_arrow\" , \"minecraft:snowball\" , \"minecraft:llama_spit\" ] } This example will check if the damage source is of a projectile that's either an Arrow, a Spectral Arrow, a Snowball or a Llama Spit.","title":"Projectile (Damage Condition Type)"},{"location":"types/damage_condition_types/projectile/#projectile","text":"Damage Condition Type Checks whether the damage source is projectile damage; can also optionally check the type(s) of projectile or its NBT. Type ID: eggolib:projectile","title":"Projectile"},{"location":"types/damage_condition_types/projectile/#fields","text":"Field Type Default Description projectile Identifier optional If specified, the condition will evaluate to true if the projectile matches this entity type identifier. projectiles Array of Identifiers optional If specified, the condition will evaluate to true if the projectile matches any of these entity type identifiers. nbt String optional If specified, the condition will evaluate to true if the projectile has this NBT data.","title":"Fields"},{"location":"types/damage_condition_types/projectile/#examples","text":"Example #1 Example #2 \"damage_condition\" : { \"type\" : \"eggolib:projectile\" , \"nbt\" : \"{Item: {tag: {heavyProjectile: 1b}}}\" } This example will check if the damage source is of a projectile that has the {Item: {tag: {heavyProjectile: 1b}}} NBT. \"damage_condition\" : { \"type\" : \"eggolib:projectile\" , \"projectiles\" : [ \"minecraft:arrow\" , \"minecraft:spectral_arrow\" , \"minecraft:snowball\" , \"minecraft:llama_spit\" ] } This example will check if the damage source is of a projectile that's either an Arrow, a Spectral Arrow, a Snowball or a Llama Spit.","title":"Examples"},{"boost":2,"location":"types/data_types/abstract_team/","text":"Abstract Team Data Type An object used for abstractly representing a team. Fields Field Type Default Description name String optional The name of the team. friendly_fire Boolean optional Determines whether the team should allow friendly fire or not. show_friendly_invisibles Boolean optional Determines whether the team should show teammates that are invisible. nametag_visibility Visibility Rule optional Determines the visibility for the nametag of the entities within the team. death_message_visibility Visibility Rule optional Determines the visibility for the death message of the entities within the team. collision_rule Collision Rule optional Determines how entity collision behaves for the entities within the team. Examples Example #1 Example #2 \"team\" : { \"name\" : \"epicGamers\" } This example abstractly represents a team with the name \"epicGamers\". \"team\" : { \"nametag_visibility\" : \"never\" } This example abstractly represents a team with the nametagVisibility option set to never .","title":"Abstract Team (Data Type)"},{"location":"types/data_types/abstract_team/#abstract_team","text":"Data Type An object used for abstractly representing a team.","title":"Abstract Team"},{"location":"types/data_types/abstract_team/#fields","text":"Field Type Default Description name String optional The name of the team. friendly_fire Boolean optional Determines whether the team should allow friendly fire or not. show_friendly_invisibles Boolean optional Determines whether the team should show teammates that are invisible. nametag_visibility Visibility Rule optional Determines the visibility for the nametag of the entities within the team. death_message_visibility Visibility Rule optional Determines the visibility for the death message of the entities within the team. collision_rule Collision Rule optional Determines how entity collision behaves for the entities within the team.","title":"Fields"},{"location":"types/data_types/abstract_team/#examples","text":"Example #1 Example #2 \"team\" : { \"name\" : \"epicGamers\" } This example abstractly represents a team with the name \"epicGamers\". \"team\" : { \"nametag_visibility\" : \"never\" } This example abstractly represents a team with the nametagVisibility option set to never .","title":"Examples"},{"boost":2,"location":"types/data_types/collision_rule/","text":"Collision Rule Data Type A string used to determine how collision works in a team. Caution Currently, the pushOtherTeams and pushOwnTeam collision rules have the opposite effect due to MC-87984 . Values Value Description always The default behavior. never No entities can push entities in the team. pushOtherTeams Only entities from another team can push the entities in the team. pushOwnTeam Only entities in the team can push each other.","title":"Collision Rule (Data Types)"},{"location":"types/data_types/collision_rule/#collision_rule","text":"Data Type A string used to determine how collision works in a team. Caution Currently, the pushOtherTeams and pushOwnTeam collision rules have the opposite effect due to MC-87984 .","title":"Collision Rule"},{"location":"types/data_types/collision_rule/#values","text":"Value Description always The default behavior. never No entities can push entities in the team. pushOtherTeams Only entities from another team can push the entities in the team. pushOwnTeam Only entities in the team can push each other.","title":"Values"},{"boost":2,"location":"types/data_types/entity_offset/","text":"Entity Offset Data Type A string used to determine the offset reference position point of an entity. Values \"eyes\" \"feet\"","title":"Entity Offset (Data Type)"},{"location":"types/data_types/entity_offset/#entity_offset","text":"Data Type A string used to determine the offset reference position point of an entity.","title":"Entity Offset"},{"location":"types/data_types/entity_offset/#values","text":"\"eyes\" \"feet\"","title":"Values"},{"boost":2,"location":"types/data_types/functional_key/","text":"Functional Key Data Type An object or string used for representing a keybind. If formatted as an object , this data type can execute an Entity Action Type . Fields Field Type Default Description key String The name of the keybind. continuous Boolean false Determines if the keybind can be pressed continuously if held. action Entity Action optional If specified, this action will be executed on the player upon pressing the specified keybind. Examples Example #1 Example #2 \"keys\" : [ \"key.forward\" ] This example represents the key.forward keybind, with its continuous and action fields having its default values: false and null respectively. \"keys\" : [ { \"key\" : \"key.jump\" , \"continuous\" : false , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me jumped!\" } } ] This example represents the key.jump keybind. Upon pressing the specified keybind, this will execute a /me jumped! command.","title":"Functional Key (Data Type)"},{"location":"types/data_types/functional_key/#functional_key","text":"Data Type An object or string used for representing a keybind. If formatted as an object , this data type can execute an Entity Action Type .","title":"Functional Key"},{"location":"types/data_types/functional_key/#fields","text":"Field Type Default Description key String The name of the keybind. continuous Boolean false Determines if the keybind can be pressed continuously if held. action Entity Action optional If specified, this action will be executed on the player upon pressing the specified keybind.","title":"Fields"},{"location":"types/data_types/functional_key/#examples","text":"Example #1 Example #2 \"keys\" : [ \"key.forward\" ] This example represents the key.forward keybind, with its continuous and action fields having its default values: false and null respectively. \"keys\" : [ { \"key\" : \"key.jump\" , \"continuous\" : false , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me jumped!\" } } ] This example represents the key.jump keybind. Upon pressing the specified keybind, this will execute a /me jumped! command.","title":"Examples"},{"boost":2,"location":"types/data_types/generalized_positioned_item_stack/","text":"Generalized Positioned Item Stack Data Type An object that defines an item stack alongside a position in an inventory; generalized to all entities that may have a stack reference. Note Refer to Minecraft Fandom: Slot (Command argument) for the string values you can use in the slot field of this data type. Fields Field Type Default Description item Identifier The namespace and ID of the item. amount Integer 1 The size of the item. tag String optional The NBT data of the item. slot String optional The position for the item in the inventory of an entity. Examples Example #1 Example #2 \"stack\" : { \"item\" : \"minecraft:diamond\" , \"amount\" : 16 } This example will define a new Diamond item stack with a size of 16. \"stacks\" : [ { \"item\" : \"minecraft:shield\" , \"slot\" : \"weapon.offhand\" }, { \"item\" : \"minecraft:iron_sword\" , \"slot\" : \"weapon.mainhand\" } ] This example will define two new item stacks: a Shield that will be placed in the offhand equipment slot of the entity and an Iron Sword that will be placed in the mainhand equipment slot of the entity.","title":"Generalized Positioned Item Stack (Data Type)"},{"location":"types/data_types/generalized_positioned_item_stack/#generalized_positioned_item_stack","text":"Data Type An object that defines an item stack alongside a position in an inventory; generalized to all entities that may have a stack reference. Note Refer to Minecraft Fandom: Slot (Command argument) for the string values you can use in the slot field of this data type.","title":"Generalized Positioned Item Stack"},{"location":"types/data_types/generalized_positioned_item_stack/#fields","text":"Field Type Default Description item Identifier The namespace and ID of the item. amount Integer 1 The size of the item. tag String optional The NBT data of the item. slot String optional The position for the item in the inventory of an entity.","title":"Fields"},{"location":"types/data_types/generalized_positioned_item_stack/#examples","text":"Example #1 Example #2 \"stack\" : { \"item\" : \"minecraft:diamond\" , \"amount\" : 16 } This example will define a new Diamond item stack with a size of 16. \"stacks\" : [ { \"item\" : \"minecraft:shield\" , \"slot\" : \"weapon.offhand\" }, { \"item\" : \"minecraft:iron_sword\" , \"slot\" : \"weapon.mainhand\" } ] This example will define two new item stacks: a Shield that will be placed in the offhand equipment slot of the entity and an Iron Sword that will be placed in the mainhand equipment slot of the entity.","title":"Examples"},{"boost":2,"location":"types/data_types/key/","text":"Key Data Type An object or string used for representing a keybind. This data type is only a placeholder. Fields Fields Type Default Description key String The name of the keybind. Examples Example #1 Example #2 \"keys\" : [ \"key.attack\" ] This example represents the key.attack keybind. \"keys\" : [ { \"key\" : \"key.jump\" } ] This example represents the key.jump keybind.","title":"Key (Data Type)"},{"location":"types/data_types/key/#key","text":"Data Type An object or string used for representing a keybind. This data type is only a placeholder.","title":"Key"},{"location":"types/data_types/key/#fields","text":"Fields Type Default Description key String The name of the keybind.","title":"Fields"},{"location":"types/data_types/key/#examples","text":"Example #1 Example #2 \"keys\" : [ \"key.attack\" ] This example represents the key.attack keybind. \"keys\" : [ { \"key\" : \"key.jump\" } ] This example represents the key.jump keybind.","title":"Examples"},{"boost":2,"location":"types/data_types/math_operation/","text":"Math Operation Data Type A string used to determine how an integer should be operated with another integer . Values Value Description add Adds the integer to another integer. divide Divides the integer by another integer. max Returns the greater of the two integer values. min Returns the smaller of the two integer values. modulo Returns the floored remainder by dividing the integer by another integer. multiply Multiply the integer to another integer. set Replace the integer with another integer. subtract Subtract the integer from another integer.","title":"Math Operation (Data Type)"},{"location":"types/data_types/math_operation/#math_operation","text":"Data Type A string used to determine how an integer should be operated with another integer .","title":"Math Operation"},{"location":"types/data_types/math_operation/#values","text":"Value Description add Adds the integer to another integer. divide Divides the integer by another integer. max Returns the greater of the two integer values. min Returns the smaller of the two integer values. modulo Returns the floored remainder by dividing the integer by another integer. multiply Multiply the integer to another integer. set Replace the integer with another integer. subtract Subtract the integer from another integer.","title":"Values"},{"boost":2,"location":"types/data_types/moon_phase/","text":"Moon Phase Data Type A string used to determine the moon phase of a world. Note See Minecraft Fandom Wiki: Moon (Phases) for more information about moon phases. Values Value Index \"full_moon\" 0 \"waning_gibbus\" 1 \"last_quarter\" 2 \"waning_crescent\" 3 \"new_moon\" 4 \"waxing_crescent\" 5 \"first_quarter\" 6 \"new_moon\" 7","title":"Moon Phase (Data Type)"},{"location":"types/data_types/moon_phase/#moon_phase","text":"Data Type A string used to determine the moon phase of a world. Note See Minecraft Fandom Wiki: Moon (Phases) for more information about moon phases.","title":"Moon Phase"},{"location":"types/data_types/moon_phase/#values","text":"Value Index \"full_moon\" 0 \"waning_gibbus\" 1 \"last_quarter\" 2 \"waning_crescent\" 3 \"new_moon\" 4 \"waxing_crescent\" 5 \"first_quarter\" 6 \"new_moon\" 7","title":"Values"},{"boost":2,"location":"types/data_types/perspective/","text":"Perspective Data Type A string used to determine the perspective (e.g: the angle of the camera) of player. Values first_person third_person_back third_person_front","title":"Perspective (Data Type)"},{"location":"types/data_types/perspective/#perspective","text":"Data Type A string used to determine the perspective (e.g: the angle of the camera) of player.","title":"Perspective"},{"location":"types/data_types/perspective/#values","text":"first_person third_person_back third_person_front","title":"Values"},{"boost":2,"location":"types/data_types/positive_integer/","text":"Positive Integer Data Type A whole number, like 3 or 10, that cannot be negative. Examples Example #1 { \"type\" : \"eggolib:game_event_listener\" , \"range\" : 16 } This example is a power that uses the Game Event Listener (Power Type) with a range value of 16 , which is a positive integer.","title":"Positive Integer"},{"location":"types/data_types/positive_integer/#positive_integer","text":"Data Type A whole number, like 3 or 10, that cannot be negative.","title":"Positive Integer"},{"location":"types/data_types/positive_integer/#examples","text":"Example #1 { \"type\" : \"eggolib:game_event_listener\" , \"range\" : 16 } This example is a power that uses the Game Event Listener (Power Type) with a range value of 16 , which is a positive integer.","title":"Examples"},{"boost":2,"location":"types/data_types/precipitation/","text":"Precipitation Data Type A string that determines the weather of a biome. Values Value Description none The biome has no weather. rain The biome has rainy weather. snow The biome has snowy weather.","title":"Precipitation"},{"location":"types/data_types/precipitation/#precipitation","text":"Data Type A string that determines the weather of a biome.","title":"Precipitation"},{"location":"types/data_types/precipitation/#values","text":"Value Description none The biome has no weather. rain The biome has rainy weather. snow The biome has snowy weather.","title":"Values"},{"boost":2,"location":"types/data_types/render_mode/","text":"Render Mode Data Type A string used to determine how a component is rendered. Values Value Description default Renders the component as is. hide_partially Renders the component semi-transparently. hide_completely Does not render the component at all.","title":"Render Mode (Data Type)"},{"location":"types/data_types/render_mode/#render_mode","text":"Data Type A string used to determine how a component is rendered.","title":"Render Mode"},{"location":"types/data_types/render_mode/#values","text":"Value Description default Renders the component as is. hide_partially Renders the component semi-transparently. hide_completely Does not render the component at all.","title":"Values"},{"boost":2,"location":"types/data_types/scoreboard/","text":"Scoreboard Data Type An object used for getting the score of a score holder from a scoreboard objective. Note If the score holder referenced in the name field does not exist, the data type will return a value of 0. Fields Field Type Default Description name String The name of the score holder or a target selector. objective String The name of the scoreboard objective. Examples Example #1 Example #2 Example #3 \"score\" : { \"name\" : \"aTestScoreHolder\" , \"objective\" : \"example\" } This example will get the score of the aTestScoreHolder score holder from the example scoreboard objective. \"score\" : { \"name\" : \"#hiddenScoreHolder\" , \"objective\" : \"example\" } This example will get the score of the #hiddenScoreHolder score holder from the example scoreboard objective. \"score\" : { \"name\" : \"@e[tag = test, limit = 1]\" , \"objective\" : \"example\" } This example will get the score of the entity that has the test tag from the example scoreboard objective.","title":"Scoreboard (Data Type)"},{"location":"types/data_types/scoreboard/#scoreboard","text":"Data Type An object used for getting the score of a score holder from a scoreboard objective. Note If the score holder referenced in the name field does not exist, the data type will return a value of 0.","title":"Scoreboard"},{"location":"types/data_types/scoreboard/#fields","text":"Field Type Default Description name String The name of the score holder or a target selector. objective String The name of the scoreboard objective.","title":"Fields"},{"location":"types/data_types/scoreboard/#examples","text":"Example #1 Example #2 Example #3 \"score\" : { \"name\" : \"aTestScoreHolder\" , \"objective\" : \"example\" } This example will get the score of the aTestScoreHolder score holder from the example scoreboard objective. \"score\" : { \"name\" : \"#hiddenScoreHolder\" , \"objective\" : \"example\" } This example will get the score of the #hiddenScoreHolder score holder from the example scoreboard objective. \"score\" : { \"name\" : \"@e[tag = test, limit = 1]\" , \"objective\" : \"example\" } This example will get the score of the entity that has the test tag from the example scoreboard objective.","title":"Examples"},{"boost":2,"location":"types/data_types/sound_category/","text":"Sound Category [ Data Type ][1] A [ string ][2] used for grouping sound events together. Values ambient blocks hostile master music neutral players records voice weather","title":"Sound Category (Data Type)"},{"location":"types/data_types/sound_category/#sound_category","text":"[ Data Type ][1] A [ string ][2] used for grouping sound events together.","title":"Sound Category"},{"location":"types/data_types/sound_category/#values","text":"ambient blocks hostile master music neutral players records voice weather","title":"Values"},{"boost":2,"location":"types/data_types/visibility_rule/","text":"Visibility Rule Data Type A string used to determine how visibility of certain components works in a team. Values Value Description always The default behavior. never No entities can see the component. hideForOtherTeams Only entities in the team can see the component. hideForOwnTeam Only entities from another team can see the component.","title":"Visibility Rule (Data Type)"},{"location":"types/data_types/visibility_rule/#visibility_rule","text":"Data Type A string used to determine how visibility of certain components works in a team.","title":"Visibility Rule"},{"location":"types/data_types/visibility_rule/#values","text":"Value Description always The default behavior. never No entities can see the component. hideForOtherTeams Only entities in the team can see the component. hideForOwnTeam Only entities from another team can see the component.","title":"Values"},{"boost":2,"location":"types/dimension_type_condition_types/ambient_light/","text":"Ambient Light Dimension Type Condition Type Compares the ambient light property of the dimension to the specified value. Type ID: eggolib:ambient_light Fields Field Type Default Description comparison Comparison Determines how the ambient light property of the dimension is compared to the specified value. compare_to Float The value which the ambient light property of the dimension is compared to. Examples Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:ambient_light\" , \"comparison\" : \"==\" , \"compare_to\" : 0.0 } This example will check if the dimension has no ambient light. For instance, the Overworld and The End dimensions fulfill this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:ambient_light\" , \"comparison\" : \">=\" , \"compare_to\" : 0.1 } This example will check if the dimension has an ambient light of 0.1 or higher. For instance, The Nether dimension fulfills this condition.","title":"Ambient Light (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/ambient_light/#ambient_light","text":"Dimension Type Condition Type Compares the ambient light property of the dimension to the specified value. Type ID: eggolib:ambient_light","title":"Ambient Light"},{"location":"types/dimension_type_condition_types/ambient_light/#fields","text":"Field Type Default Description comparison Comparison Determines how the ambient light property of the dimension is compared to the specified value. compare_to Float The value which the ambient light property of the dimension is compared to.","title":"Fields"},{"location":"types/dimension_type_condition_types/ambient_light/#examples","text":"Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:ambient_light\" , \"comparison\" : \"==\" , \"compare_to\" : 0.0 } This example will check if the dimension has no ambient light. For instance, the Overworld and The End dimensions fulfill this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:ambient_light\" , \"comparison\" : \">=\" , \"compare_to\" : 0.1 } This example will check if the dimension has an ambient light of 0.1 or higher. For instance, The Nether dimension fulfills this condition.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/bed_works/","text":"Bed Works Dimension Type Condition Type Checks if beds work in the dimension. Type ID: eggolib:bed_works Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:bed_works\" }","title":"Bed Works (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/bed_works/#bed_works","text":"Dimension Type Condition Type Checks if beds work in the dimension. Type ID: eggolib:bed_works","title":"Bed Works"},{"location":"types/dimension_type_condition_types/bed_works/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/bed_works/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:bed_works\" }","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/coordinate_scale/","text":"Coordinate Scale Dimension Type Condition Type Compares the value used for scaling the coordinates of an entity when entering/leaving the dimension to the specified value. Type ID: eggolib:coordinate_scale Fields Field Type Default Description comparison Comparison Determines how the coordinate scale property of the dimension is compared to the specified value. compare_to Float The value which the coordinate scale property of the dimension is compared to. Examples Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:coordinate_scale\" , \"comparison\" : \"==\" , \"compare_to\" : 1 } This example will check if the scaling coordinate value of the dimension is 1. For instance, the Overworld and The End dimensions will fulfill this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:coordinate_scale\" , \"comparison\" : \">=\" , \"compare_to\" : 8 } This example will check if the scaling coordinate value of the dimension is 8. For instance, The Nether fulfills this condition.","title":"Coordinate Scale (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/coordinate_scale/#coordinate_scale","text":"Dimension Type Condition Type Compares the value used for scaling the coordinates of an entity when entering/leaving the dimension to the specified value. Type ID: eggolib:coordinate_scale","title":"Coordinate Scale"},{"location":"types/dimension_type_condition_types/coordinate_scale/#fields","text":"Field Type Default Description comparison Comparison Determines how the coordinate scale property of the dimension is compared to the specified value. compare_to Float The value which the coordinate scale property of the dimension is compared to.","title":"Fields"},{"location":"types/dimension_type_condition_types/coordinate_scale/#examples","text":"Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:coordinate_scale\" , \"comparison\" : \"==\" , \"compare_to\" : 1 } This example will check if the scaling coordinate value of the dimension is 1. For instance, the Overworld and The End dimensions will fulfill this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:coordinate_scale\" , \"comparison\" : \">=\" , \"compare_to\" : 8 } This example will check if the scaling coordinate value of the dimension is 8. For instance, The Nether fulfills this condition.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/effects/","text":"Effects Dimension Type Condition Type Checks if the identifier of the effects of the dimension matches the specified identifier. Type ID: eggolib:effects Note See Minecraft Fandom Wiki: Effect (dimension) for more information about dimension effects. Fields Field Type Default Description id Identifier The identifier of the dimension effects property to check for. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:effects\" , \"id\" : \"minecraft:the_end\" } This example will check if the dimension has The End dimension's effects.","title":"Effects (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/effects/#effects","text":"Dimension Type Condition Type Checks if the identifier of the effects of the dimension matches the specified identifier. Type ID: eggolib:effects Note See Minecraft Fandom Wiki: Effect (dimension) for more information about dimension effects.","title":"Effects"},{"location":"types/dimension_type_condition_types/effects/#fields","text":"Field Type Default Description id Identifier The identifier of the dimension effects property to check for.","title":"Fields"},{"location":"types/dimension_type_condition_types/effects/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:effects\" , \"id\" : \"minecraft:the_end\" } This example will check if the dimension has The End dimension's effects.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/fixed_time/","text":"Fixed Time Dimension Type Condition Type Compares the fixed time property of the dimension to the specified value. Type ID: eggolib:fixed_time Note If neither the comparison and compare_to is present, this dimension type condition type will check if the dimension has a fixed time. Fields Field Type Default Description comparison Comparison optional Determines how the fixed time property of the dimension is compared to the specified value. compare_to Integer optional The value which the fixed time property of the dimension is compared to. Examples Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:fixed_time\" } This example will check if the dimension has a fixed time. \"dimension_type_condition\" : { \"type\" : \"eggolib:fixed_time\" , \"comparison\" : \"==\" , \"compare_to\" : 18000 } This example will check if the dimension has its time fixed at midnight.","title":"Fixed Time (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/fixed_time/#fixed_time","text":"Dimension Type Condition Type Compares the fixed time property of the dimension to the specified value. Type ID: eggolib:fixed_time Note If neither the comparison and compare_to is present, this dimension type condition type will check if the dimension has a fixed time.","title":"Fixed Time"},{"location":"types/dimension_type_condition_types/fixed_time/#fields","text":"Field Type Default Description comparison Comparison optional Determines how the fixed time property of the dimension is compared to the specified value. compare_to Integer optional The value which the fixed time property of the dimension is compared to.","title":"Fields"},{"location":"types/dimension_type_condition_types/fixed_time/#examples","text":"Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:fixed_time\" } This example will check if the dimension has a fixed time. \"dimension_type_condition\" : { \"type\" : \"eggolib:fixed_time\" , \"comparison\" : \"==\" , \"compare_to\" : 18000 } This example will check if the dimension has its time fixed at midnight.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/has_ceiling/","text":"Has Ceiling Dimension Type Condition Type Checks if the dimension has a Bedrock ceiling. Type ID: eggolib:has_ceiling Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:has_ceiling\" }","title":"Has Ceiling (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/has_ceiling/#has_ceiling","text":"Dimension Type Condition Type Checks if the dimension has a Bedrock ceiling. Type ID: eggolib:has_ceiling","title":"Has Ceiling"},{"location":"types/dimension_type_condition_types/has_ceiling/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/has_ceiling/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:has_ceiling\" }","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/has_raids/","text":"Has Raids Dimension Type Condition Type Checks if the dimension can initiate raids. Type ID: eggolib:has_raids Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:has_raids\" }","title":"Has Raids (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/has_raids/#has_raids","text":"Dimension Type Condition Type Checks if the dimension can initiate raids. Type ID: eggolib:has_raids","title":"Has Raids"},{"location":"types/dimension_type_condition_types/has_raids/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/has_raids/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:has_raids\" }","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/has_skylight/","text":"Has Skylight Dimension Type Condition Type Checks if the dimension has skylight. Type ID: eggolib:has_skylight Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:has_skylight\" }","title":"Has Skylight (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/has_skylight/#has_skylight","text":"Dimension Type Condition Type Checks if the dimension has skylight. Type ID: eggolib:has_skylight","title":"Has Skylight"},{"location":"types/dimension_type_condition_types/has_skylight/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/has_skylight/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:has_skylight\" }","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/height/","text":"Height Dimension Type Condition Type Compares the maximum height in which blocks can exist of the dimension to the specified value. Type ID: eggolib:height Fields Field Type Default Description comparison Comparison Determines how the maximum height in which blocks can exist of the dimension is compared to the specified value. compare_to Integer The value which the maximum height in which blocks can exist of the dimension is compared to. Examples Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:height\" , \"comparison\" : \"==\" , \"compare_to\" : 384 } This example will check if the maximum height of the dimension is 384. For instance, the Overworld dimension fulfills this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:height\" , \"comparison\" : \"<=\" , \"compare_to\" : 256 } This example will check if the maximum height of the dimension is equal to or less than 256. For instance, The Nether dimension fulfills this condition.","title":"Height (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/height/#height","text":"Dimension Type Condition Type Compares the maximum height in which blocks can exist of the dimension to the specified value. Type ID: eggolib:height","title":"Height"},{"location":"types/dimension_type_condition_types/height/#fields","text":"Field Type Default Description comparison Comparison Determines how the maximum height in which blocks can exist of the dimension is compared to the specified value. compare_to Integer The value which the maximum height in which blocks can exist of the dimension is compared to.","title":"Fields"},{"location":"types/dimension_type_condition_types/height/#examples","text":"Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:height\" , \"comparison\" : \"==\" , \"compare_to\" : 384 } This example will check if the maximum height of the dimension is 384. For instance, the Overworld dimension fulfills this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:height\" , \"comparison\" : \"<=\" , \"compare_to\" : 256 } This example will check if the maximum height of the dimension is equal to or less than 256. For instance, The Nether dimension fulfills this condition.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/infiniburn/","text":"Infiniburn Dimension Type Condition Type Checks if the dimension is using the specified block tag for setting blocks on fire forever until extinguished manually. Type ID: eggolib:infiniburn Fields Field Type Default Description tag Identifier The identifier of the block tag to check for. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:infiniburn\" , \"tag\" : \"minecraft:infiniburn_overworld\" } This example will check if the dimension is using the #minecraft:infiniburn_overworld block tag for blocks that burn forever.","title":"Infiniburn (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/infiniburn/#infiniburn","text":"Dimension Type Condition Type Checks if the dimension is using the specified block tag for setting blocks on fire forever until extinguished manually. Type ID: eggolib:infiniburn","title":"Infiniburn"},{"location":"types/dimension_type_condition_types/infiniburn/#fields","text":"Field Type Default Description tag Identifier The identifier of the block tag to check for.","title":"Fields"},{"location":"types/dimension_type_condition_types/infiniburn/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:infiniburn\" , \"tag\" : \"minecraft:infiniburn_overworld\" } This example will check if the dimension is using the #minecraft:infiniburn_overworld block tag for blocks that burn forever.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/is_natural/","text":"Is Natural Dimension Type Condition Type Checks if the dimension is considered \"natural\". Type ID: eggolib:is_natural Note A dimension may be considered \"unnatural\" if a Compass spin randomly, if beds cannot be used for sleeping/setting the spawnpoint and if Zombified Piglins do not spawn from Nether portals. Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:is_natural\" }","title":"Is Natural (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/is_natural/#is_natural","text":"Dimension Type Condition Type Checks if the dimension is considered \"natural\". Type ID: eggolib:is_natural Note A dimension may be considered \"unnatural\" if a Compass spin randomly, if beds cannot be used for sleeping/setting the spawnpoint and if Zombified Piglins do not spawn from Nether portals.","title":"Is Natural"},{"location":"types/dimension_type_condition_types/is_natural/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/is_natural/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:is_natural\" }","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/is_piglin_safe/","text":"Is Piglin Safe Dimension Type Condition Type Checks if the dimension do not zombify and shake Piglins and Hoglins. Type ID: eggolib:is_piglin_safe Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:is_piglin_safe\" }","title":"Is Piglin Safe (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/is_piglin_safe/#is_piglin_safe","text":"Dimension Type Condition Type Checks if the dimension do not zombify and shake Piglins and Hoglins. Type ID: eggolib:is_piglin_safe","title":"Is Piglin Safe"},{"location":"types/dimension_type_condition_types/is_piglin_safe/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/is_piglin_safe/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:is_piglin_safe\" }","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/is_ultrawarm/","text":"Is Ultrawarm Dimension Type Condition Type Checks if the dimension behaves like The Nether, where sponges and water dry and lava moves faster. Type ID: eggolib:is_ultrawarm Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:is_ultrawarm\" }","title":"Is Ultrawarm (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/is_ultrawarm/#is_ultrawarm","text":"Dimension Type Condition Type Checks if the dimension behaves like The Nether, where sponges and water dry and lava moves faster. Type ID: eggolib:is_ultrawarm","title":"Is Ultrawarm"},{"location":"types/dimension_type_condition_types/is_ultrawarm/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/is_ultrawarm/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:is_ultrawarm\" }","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/logical_height/","text":"Logical Height Dimension Type Condition Type Compares the maximum logical height (for Nether portals and Chorus Fruits) of the dimension to the specified value. Type ID: eggolib:logical_height Fields Field Type Default Description comparison Comparison Determines how the maximum logical height of the dimension is compared to the value. compare_to Integer The value which the maximum logical height of the dimension is compared to. Examples Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:logical_height\" , \"comparison\" : \"==\" , \"compare_to\" : 384 } This example will check if the maximum logical height of the dimension is 384. For instance, the Overworld dimension fulfills this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:logical_height\" , \"comparison\" : \"<=\" , \"compare_to\" : 256 } This example will check if the maximum logical height of the dimension is 384 or less. For instance, The Nether dimension fulfills this condition.","title":"Logical Height (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/logical_height/#logical_height","text":"Dimension Type Condition Type Compares the maximum logical height (for Nether portals and Chorus Fruits) of the dimension to the specified value. Type ID: eggolib:logical_height","title":"Logical Height"},{"location":"types/dimension_type_condition_types/logical_height/#fields","text":"Field Type Default Description comparison Comparison Determines how the maximum logical height of the dimension is compared to the value. compare_to Integer The value which the maximum logical height of the dimension is compared to.","title":"Fields"},{"location":"types/dimension_type_condition_types/logical_height/#examples","text":"Example #1 Example #2 \"dimension_type_condition\" : { \"type\" : \"eggolib:logical_height\" , \"comparison\" : \"==\" , \"compare_to\" : 384 } This example will check if the maximum logical height of the dimension is 384. For instance, the Overworld dimension fulfills this condition. \"dimension_type_condition\" : { \"type\" : \"eggolib:logical_height\" , \"comparison\" : \"<=\" , \"compare_to\" : 256 } This example will check if the maximum logical height of the dimension is 384 or less. For instance, The Nether dimension fulfills this condition.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/min_y/","text":"Min Y Dimension Type Condition Type Compares the minimum height in which blocks can exist of the dimension to the specified value. Type ID: eggolib:min_y Fields Field Type Default Description comparison Comparison Determines how the minimum height of the dimension is compared to the specified value. compare_to Integer The value which the minimum height of the dimension is compared to. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:min_y\" , \"comparison\" : \"<\" , \"compare_to\" : 0 } This example will check if the minimum height of the dimension is less than 0. For instance, the Overworld dimension fulfills this condition.","title":"Min Y (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/min_y/#min_y","text":"Dimension Type Condition Type Compares the minimum height in which blocks can exist of the dimension to the specified value. Type ID: eggolib:min_y","title":"Min Y"},{"location":"types/dimension_type_condition_types/min_y/#fields","text":"Field Type Default Description comparison Comparison Determines how the minimum height of the dimension is compared to the specified value. compare_to Integer The value which the minimum height of the dimension is compared to.","title":"Fields"},{"location":"types/dimension_type_condition_types/min_y/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:min_y\" , \"comparison\" : \"<\" , \"compare_to\" : 0 } This example will check if the minimum height of the dimension is less than 0. For instance, the Overworld dimension fulfills this condition.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/monster_spawn_block_light_limit/","text":"Monster Spawn Block Light Limit Dimension Type Condition Type Compares the maximum required block light for spawning mobs of the dimension to the specified value. Type ID: eggolib:monster_spawn_block_light_limit Fields Field Type Default Description comparison Comparison Determines how the maximum required block light for spawning mobs of the dimension is compared to the specified value. compare_to Integer The value which the maximum required block light for spawning mobs of the dimension is compared to. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:monster_spawn_block_light_limit\" , \"comparison\" : \"==\" , \"compare_to\" : 0 } This example will check if the maximum required block light for spawning mobs in the dimension is 0. For instance, the Overworld dimension fulfills this condition.","title":"Monster Spawn Block Light Limit (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/monster_spawn_block_light_limit/#monster_spawn_block_light_limit","text":"Dimension Type Condition Type Compares the maximum required block light for spawning mobs of the dimension to the specified value. Type ID: eggolib:monster_spawn_block_light_limit","title":"Monster Spawn Block Light Limit"},{"location":"types/dimension_type_condition_types/monster_spawn_block_light_limit/#fields","text":"Field Type Default Description comparison Comparison Determines how the maximum required block light for spawning mobs of the dimension is compared to the specified value. compare_to Integer The value which the maximum required block light for spawning mobs of the dimension is compared to.","title":"Fields"},{"location":"types/dimension_type_condition_types/monster_spawn_block_light_limit/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:monster_spawn_block_light_limit\" , \"comparison\" : \"==\" , \"compare_to\" : 0 } This example will check if the maximum required block light for spawning mobs in the dimension is 0. For instance, the Overworld dimension fulfills this condition.","title":"Examples"},{"boost":2,"location":"types/dimension_type_condition_types/respawn_anchor_works/","text":"Respawn Anchor Works Dimension Type Condition Type Checks if Respawn Anchor works in the dimension. Type ID: eggolib:respawn_anchor_works Fields None. Examples Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:respawn_anchor_works\" }","title":"Respawn Anchor Works (Dimension Type Condition Type)"},{"location":"types/dimension_type_condition_types/respawn_anchor_works/#respawn_anchor_works","text":"Dimension Type Condition Type Checks if Respawn Anchor works in the dimension. Type ID: eggolib:respawn_anchor_works","title":"Respawn Anchor Works"},{"location":"types/dimension_type_condition_types/respawn_anchor_works/#fields","text":"None.","title":"Fields"},{"location":"types/dimension_type_condition_types/respawn_anchor_works/#examples","text":"Example #1 \"dimension_type_condition\" : { \"type\" : \"eggolib:respawn_anchor_works\" }","title":"Examples"},{"boost":2,"location":"types/entity_action_types/calculate_resource/","text":"Calculate Resource Entity Action Type Calculates the value of a power that uses the Resource (Power Type) from the value of another power that uses the Resource (Power Type) . Type ID: eggolib:calculate_resource Fields Field Type Default Description target Identifier The namespace, path and ID of the power to calculate the value of. operation Math Operation \"add\" Determines how the value of the source power will be calculated to the value of the target power. source Identifier The namespace, path and ID of the power to use the value of. Examples \"entity_action\" : { \"type\" : \"eggolib:calculate_resource\" , \"target\" : \"example:resource_a\" , \"operation\" : \"multiply\" , \"source\" : \"example:resource_b\" } This example will multiply the value of the example:resource_a ( data/example/powers/resource_a.json ) power by the value of the example:resource_b ( data/example/powers/resource_b.json ) power.","title":"Calculate Resource (Entity Action Type)"},{"location":"types/entity_action_types/calculate_resource/#calculate_resource","text":"Entity Action Type Calculates the value of a power that uses the Resource (Power Type) from the value of another power that uses the Resource (Power Type) . Type ID: eggolib:calculate_resource","title":"Calculate Resource"},{"location":"types/entity_action_types/calculate_resource/#fields","text":"Field Type Default Description target Identifier The namespace, path and ID of the power to calculate the value of. operation Math Operation \"add\" Determines how the value of the source power will be calculated to the value of the target power. source Identifier The namespace, path and ID of the power to use the value of.","title":"Fields"},{"location":"types/entity_action_types/calculate_resource/#examples","text":"\"entity_action\" : { \"type\" : \"eggolib:calculate_resource\" , \"target\" : \"example:resource_a\" , \"operation\" : \"multiply\" , \"source\" : \"example:resource_b\" } This example will multiply the value of the example:resource_a ( data/example/powers/resource_a.json ) power by the value of the example:resource_b ( data/example/powers/resource_b.json ) power.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/change_health/","text":"Change Health Entity Action Type Changes the health of the entity. Type ID: eggolib:change_health Fields Field Type Default Description change Float The value to be used for modifying the entity's health. operation String ] \"add\" Determines how the specified value will be operated on the entity's health. Accepts one of \"add\" and \"set\" . Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:change_health\" , \"change\" : 1 , \"operation\" : \"add\" } This example will add 1 to the entity's health. \"entity_action\" : { \"type\" : \"eggolib:change_health\" , \"change\" : 10 , \"operation\" : \"set\" } This example will set the entity's health to 10.","title":"Change Health (Entity Action Type)"},{"location":"types/entity_action_types/change_health/#change_health","text":"Entity Action Type Changes the health of the entity. Type ID: eggolib:change_health","title":"Change Health"},{"location":"types/entity_action_types/change_health/#fields","text":"Field Type Default Description change Float The value to be used for modifying the entity's health. operation String ] \"add\" Determines how the specified value will be operated on the entity's health. Accepts one of \"add\" and \"set\" .","title":"Fields"},{"location":"types/entity_action_types/change_health/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:change_health\" , \"change\" : 1 , \"operation\" : \"add\" } This example will add 1 to the entity's health. \"entity_action\" : { \"type\" : \"eggolib:change_health\" , \"change\" : 10 , \"operation\" : \"set\" } This example will set the entity's health to 10.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/change_insomnia_ticks/","text":"Change Insomnia Ticks Entity Action Type Changes the value of the minecraft.custom:minecraft.time_since_rest statistic of the player. Type ID: eggolib:change_insomnia_ticks Fields Field Type Default Description change Integer The value to be used for changing the value of the player's minecraft.custom:minecraft.time_since_rest statistic. operation String \"add\" Determines how the specified value will be operated on the value of the player's minecraft.custom:minecraft.time_since_rest statistic. Accepts one of \"add\" and \"set\" . Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:change_insomnia_ticks\" , \"change\" : 24000 , \"operation\" : \"add\" } This example will add 24000 to the the value of the player's minecraft.custom:minecraft.time_since_rest statistic, essentially adding 1 day. \"entity_action\" : { \"type\" : \"eggolib:change_insomnia_ticks\" , \"change\" : 0 , \"operation\" : \"set\" } This example will set the the value of the player's minecraft.custom:minecraft.time_since_rest statistic to 0.","title":"Change Insomnia Ticks (Entity Action Type)"},{"location":"types/entity_action_types/change_insomnia_ticks/#change_insomnia_ticks","text":"Entity Action Type Changes the value of the minecraft.custom:minecraft.time_since_rest statistic of the player. Type ID: eggolib:change_insomnia_ticks","title":"Change Insomnia Ticks"},{"location":"types/entity_action_types/change_insomnia_ticks/#fields","text":"Field Type Default Description change Integer The value to be used for changing the value of the player's minecraft.custom:minecraft.time_since_rest statistic. operation String \"add\" Determines how the specified value will be operated on the value of the player's minecraft.custom:minecraft.time_since_rest statistic. Accepts one of \"add\" and \"set\" .","title":"Fields"},{"location":"types/entity_action_types/change_insomnia_ticks/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:change_insomnia_ticks\" , \"change\" : 24000 , \"operation\" : \"add\" } This example will add 24000 to the the value of the player's minecraft.custom:minecraft.time_since_rest statistic, essentially adding 1 day. \"entity_action\" : { \"type\" : \"eggolib:change_insomnia_ticks\" , \"change\" : 0 , \"operation\" : \"set\" } This example will set the the value of the player's minecraft.custom:minecraft.time_since_rest statistic to 0.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/close_screen/","text":"Close Screen Entity Action Type Closes the current screen of the player. Type ID: eggolib:close_screen Fields None. Examples \"entity_action\" : { \"type\" : \"eggolib:close_screen\" }","title":"Close Screen (Entity Action Type)"},{"location":"types/entity_action_types/close_screen/#close_screen","text":"Entity Action Type Closes the current screen of the player. Type ID: eggolib:close_screen","title":"Close Screen"},{"location":"types/entity_action_types/close_screen/#fields","text":"None.","title":"Fields"},{"location":"types/entity_action_types/close_screen/#examples","text":"\"entity_action\" : { \"type\" : \"eggolib:close_screen\" }","title":"Examples"},{"boost":2,"location":"types/entity_action_types/damage/","text":"Damage Entity Action Type Deals damage to the entity. Type ID: eggolib:damage Note If the modifier or modifiers field is specified, the max health of the entity will be used as the base value for the modifier(s). Fields Field Type Default Description amount Float optional If specified, this amount of damage will be dealt to the entity. source Damage Source Determines the source for the damage to be used. Controls the death message, invulnerabilities or whether the armor should be taken into account. modifier Attribute Modifier optional If specified, this modifier will be applied to the damage dealt to the entity. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the damage dealt to the entity. Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:damage\" , \"amount\" : 2 , \"source\" : { \"name\" : \"generic\" } } This example will deal 2 (or 1 heart of) generic damage to the entity. \"entity_action\" : { \"type\" : \"eggolib:damage\" , \"source\" : { \"name\" : \"onFire\" , \"fire\" : true }, \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : 0.25 } } This example will deal 25% onFire damage to the entity. If the max health of the entity is 20, this example will deal 5 (2 and a half hearts of) onFire damage.","title":"Damage (Entity Action Type)"},{"location":"types/entity_action_types/damage/#damage","text":"Entity Action Type Deals damage to the entity. Type ID: eggolib:damage Note If the modifier or modifiers field is specified, the max health of the entity will be used as the base value for the modifier(s).","title":"Damage"},{"location":"types/entity_action_types/damage/#fields","text":"Field Type Default Description amount Float optional If specified, this amount of damage will be dealt to the entity. source Damage Source Determines the source for the damage to be used. Controls the death message, invulnerabilities or whether the armor should be taken into account. modifier Attribute Modifier optional If specified, this modifier will be applied to the damage dealt to the entity. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the damage dealt to the entity.","title":"Fields"},{"location":"types/entity_action_types/damage/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:damage\" , \"amount\" : 2 , \"source\" : { \"name\" : \"generic\" } } This example will deal 2 (or 1 heart of) generic damage to the entity. \"entity_action\" : { \"type\" : \"eggolib:damage\" , \"source\" : { \"name\" : \"onFire\" , \"fire\" : true }, \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : 0.25 } } This example will deal 25% onFire damage to the entity. If the max health of the entity is 20, this example will deal 5 (2 and a half hearts of) onFire damage.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/drop_inventory/","text":"Drop Inventory Entity Action Type Drops the item(s) from either the entity's inventory or a power that uses the Inventory (Power Type) or Origins/Apoli's Inventory (Power Type) . Type ID: eggolib:drop_inventory Fields Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to drop the items from the inventory of the entity or the inventory of a power present in the entity. entity_action Entity Action ] optional If specified, this action will be executed on the entity before the items are dropped. item_action Item Action ] optional If specified, this action will be executed on the affected items before the said items are dropped item_condition Item Condition optional If specified, only items which fulfill this condition will be dropped. slot Identifier optional If specified, only items in the designated slot will be dropped. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the designated slots will be dropped. See Positioned Item Stack Slots for possible values. power Identifier optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be dropped instead of the items in the entity's inventory. amount Integer optional If specified, the affected items will be split by this amount. Examples Example #1 Example #2 Example #3 \"entity_action\" : { \"type\" : \"eggolib:drop_inventory\" } This example will drop the entire inventory of the entity. \"entity_action\" : { \"type\" : \"eggolib:drop_inventory\" , \"item_condition\" : { \"type\" : \"apoli:amount\" , \"comparison\" : \">=\" , \"compare_to\" : 10 } } This example will drop items from the inventory of the entity only if those items have an amount of 10 or greater. \"entity_action\" : { \"type\" : \"eggolib:drop_inventory\" , \"slot\" : \"weapon.mainhand\" , \"amount\" : 16 } This example will split the item from the entity's mainhand slot by 16 and drop it. For a further explanation, if the item from the entity's mainhand slot has a count of 64, only 16 of it will be dropped, making the item have a remainder of 48. (64 - 16 = 48)","title":"Drop Inventory (Entity Action Type)"},{"location":"types/entity_action_types/drop_inventory/#drop_inventory","text":"Entity Action Type Drops the item(s) from either the entity's inventory or a power that uses the Inventory (Power Type) or Origins/Apoli's Inventory (Power Type) . Type ID: eggolib:drop_inventory","title":"Drop Inventory"},{"location":"types/entity_action_types/drop_inventory/#fields","text":"Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to drop the items from the inventory of the entity or the inventory of a power present in the entity. entity_action Entity Action ] optional If specified, this action will be executed on the entity before the items are dropped. item_action Item Action ] optional If specified, this action will be executed on the affected items before the said items are dropped item_condition Item Condition optional If specified, only items which fulfill this condition will be dropped. slot Identifier optional If specified, only items in the designated slot will be dropped. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the designated slots will be dropped. See Positioned Item Stack Slots for possible values. power Identifier optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be dropped instead of the items in the entity's inventory. amount Integer optional If specified, the affected items will be split by this amount.","title":"Fields"},{"location":"types/entity_action_types/drop_inventory/#examples","text":"Example #1 Example #2 Example #3 \"entity_action\" : { \"type\" : \"eggolib:drop_inventory\" } This example will drop the entire inventory of the entity. \"entity_action\" : { \"type\" : \"eggolib:drop_inventory\" , \"item_condition\" : { \"type\" : \"apoli:amount\" , \"comparison\" : \">=\" , \"compare_to\" : 10 } } This example will drop items from the inventory of the entity only if those items have an amount of 10 or greater. \"entity_action\" : { \"type\" : \"eggolib:drop_inventory\" , \"slot\" : \"weapon.mainhand\" , \"amount\" : 16 } This example will split the item from the entity's mainhand slot by 16 and drop it. For a further explanation, if the item from the entity's mainhand slot has a count of 64, only 16 of it will be dropped, making the item have a remainder of 48. (64 - 16 = 48)","title":"Examples"},{"boost":2,"location":"types/entity_action_types/fire_projectile/","text":"Fire Projectile Entity Action Type Fires one or more projectiles or entities. Type ID: eggolib:fire_projectile Note This action type can spawn in entities with passengers. Fields Field Type Default Description entity_type Identifier The identifier of the projectile or entity that will be launched. divergence Float 1.0 Determines how much the projectile or entity that will be launched is affected by random spread. speed Float 1.0 Determines the speed of the projectile or entity that will be launched. count Integer 1 Determines the amount of projectiles or entities that will be launched. tag String optional If specified, this NBT data will be added to the projectile or entity that will be launched. entity_action Entity Action Type optional If specified, this action will be executed on the projectile or entity that will be launched. Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:fire_projectile\" , \"entity_type\" : \"minecraft:fireball\" } This example will launch a Fireball in the direction the entity is facing. \"entity_action\" : { \"type\" : \"eggolib:fire_projectile\" , \"entity_type\" : \"minecraft:pig\" , \"tag\" : \"{Passengers: [{id: \\\"minecraft:armor_stand\\\"}]}\" } This example will launch a Pig with an Armor Stand passenger.","title":"Fire Projectile (Entity Action Type)"},{"location":"types/entity_action_types/fire_projectile/#fire_projectile","text":"Entity Action Type Fires one or more projectiles or entities. Type ID: eggolib:fire_projectile Note This action type can spawn in entities with passengers.","title":"Fire Projectile"},{"location":"types/entity_action_types/fire_projectile/#fields","text":"Field Type Default Description entity_type Identifier The identifier of the projectile or entity that will be launched. divergence Float 1.0 Determines how much the projectile or entity that will be launched is affected by random spread. speed Float 1.0 Determines the speed of the projectile or entity that will be launched. count Integer 1 Determines the amount of projectiles or entities that will be launched. tag String optional If specified, this NBT data will be added to the projectile or entity that will be launched. entity_action Entity Action Type optional If specified, this action will be executed on the projectile or entity that will be launched.","title":"Fields"},{"location":"types/entity_action_types/fire_projectile/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:fire_projectile\" , \"entity_type\" : \"minecraft:fireball\" } This example will launch a Fireball in the direction the entity is facing. \"entity_action\" : { \"type\" : \"eggolib:fire_projectile\" , \"entity_type\" : \"minecraft:pig\" , \"tag\" : \"{Passengers: [{id: \\\"minecraft:armor_stand\\\"}]}\" } This example will launch a Pig with an Armor Stand passenger.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/modify_health/","text":"Modify Health Entity Action Type Modifies the current health of the entity. Type ID: eggolib:modify_health Note The max health of the entity will be used as the base value for the modifier. Fields Field Type Default Description modifier Attribute Modifier The modifier to use for modifying the current health of the entity. Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:modify_health\" , \"modifier\" : { \"operation\" : \"add_base_early\" , \"value\" : -2 } } This example will subtract 2 (or 1 heart) from the entity's current health. \"entity_action\" : { \"type\" : \"eggolib:modify_health\" , \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : -0.25 } } This example will subtract 25% from the entity's current health. If the max health of the entity is 20, this example will subtract 5 (or 2 and a half hearts) from the entity's current health.","title":"Modify Health (Entity Action Type)"},{"location":"types/entity_action_types/modify_health/#modify_health","text":"Entity Action Type Modifies the current health of the entity. Type ID: eggolib:modify_health Note The max health of the entity will be used as the base value for the modifier.","title":"Modify Health"},{"location":"types/entity_action_types/modify_health/#fields","text":"Field Type Default Description modifier Attribute Modifier The modifier to use for modifying the current health of the entity.","title":"Fields"},{"location":"types/entity_action_types/modify_health/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:modify_health\" , \"modifier\" : { \"operation\" : \"add_base_early\" , \"value\" : -2 } } This example will subtract 2 (or 1 heart) from the entity's current health. \"entity_action\" : { \"type\" : \"eggolib:modify_health\" , \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : -0.25 } } This example will subtract 25% from the entity's current health. If the max health of the entity is 20, this example will subtract 5 (or 2 and a half hearts) from the entity's current health.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/modify_inventory/","text":"Modify Inventory Entity Action Type Modifies the item(s) from either the entity's inventory or a power that uses the Inventory (Power Type) or Origins/Apoli's Inventory (Power Type) . Type ID: eggolib:modify_inventory Fields Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to modify the items in the inventory of the entity or the inventory of a power present in the entity. entity_action Entity Action optional If specified, this action will be executed on the entity before the items are modified. item_action Item Action The action to execute on the affected items. item_condition Item Condition optional If specified, only items which fulfill this condition will be affected by the specified action. slot Identifier optional If specified, only items in the designated slot will be modified. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the designated slots will be modified. See Positioned Item Stack Slots for possible values. power Identifier optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be modified instead of the items in the entity's inventory. Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:modify_inventory\" , \"item_action\" : { \"type\" : \"apoli:consume\" , \"amount\" : 1 } } This example will \"consume\" all items from the entity's inventory. \"entity_action\" : { \"type\" : \"eggolib:modify_inventory\" , \"item_action\" : { \"type\" : \"apoli:damage\" , \"amount\" : 5 }, \"item_condition\" : { \"type\" : \"apoli:armor_value\" , \"comparison\" : \">\" , \"compare_to\" : 0 }, \"slots\" : [ \"armor.head\" , \"armor.chest\" , \"armor.legs\" , \"armor.feet\" ] } This example will damage armor items from the entity's equipment armor slots.","title":"Modify Inventory (Entity Action Type)"},{"location":"types/entity_action_types/modify_inventory/#modify_inventory","text":"Entity Action Type Modifies the item(s) from either the entity's inventory or a power that uses the Inventory (Power Type) or Origins/Apoli's Inventory (Power Type) . Type ID: eggolib:modify_inventory","title":"Modify Inventory"},{"location":"types/entity_action_types/modify_inventory/#fields","text":"Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to modify the items in the inventory of the entity or the inventory of a power present in the entity. entity_action Entity Action optional If specified, this action will be executed on the entity before the items are modified. item_action Item Action The action to execute on the affected items. item_condition Item Condition optional If specified, only items which fulfill this condition will be affected by the specified action. slot Identifier optional If specified, only items in the designated slot will be modified. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the designated slots will be modified. See Positioned Item Stack Slots for possible values. power Identifier optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be modified instead of the items in the entity's inventory.","title":"Fields"},{"location":"types/entity_action_types/modify_inventory/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:modify_inventory\" , \"item_action\" : { \"type\" : \"apoli:consume\" , \"amount\" : 1 } } This example will \"consume\" all items from the entity's inventory. \"entity_action\" : { \"type\" : \"eggolib:modify_inventory\" , \"item_action\" : { \"type\" : \"apoli:damage\" , \"amount\" : 5 }, \"item_condition\" : { \"type\" : \"apoli:armor_value\" , \"comparison\" : \">\" , \"compare_to\" : 0 }, \"slots\" : [ \"armor.head\" , \"armor.chest\" , \"armor.legs\" , \"armor.feet\" ] } This example will damage armor items from the entity's equipment armor slots.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/modify_key_sequence/","text":"Modify Key Sequence Entity Action Type Modifies the current key sequence of a power that uses the Action on Key Sequence (Power Type) present on the entity that invoked the action. Type ID: eggolib:modify_key_sequence Note If index is less than or equal to -1 , then it would refer to the last index of the current key sequence. Otherwise, if it's 0 , then it would refer to the first index of the current key sequence. Note Here's an explanation on how each operation works: \"append\" - Adds the specified keys to the last index of the current key sequence. \"insert\" - Inserts the specified keys to the specified index of the current key sequence. \"prepend\" - Adds the specified keys to the first index of the current key sequence. \"remove\" - Removes the specified keys from the current key sequence. If there are no keys specified, remove the key from the specified index instead. \"set\" - Replace the current key sequence with the specified key sequence. Fields Field Type Default Description power Identifier The namespace and ID of the power to modify its current key sequence of. operation String \"append\" Determines how the specified keys are operated on the current key sequence of the specified power. Accepts \"append\" , \"insert\" , \"prepend\" , \"remove\" or \"set\" . keys Array of Keys optional If specified, these keys will be used to modify the current key sequence of the specified power. index Integer -1 The integer to use as the index when modifying the current key sequence of the specified power. Only used by the \"insert\" and \"remove\" operations. Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:modify_key_sequence\" , \"power\" : \"example:power\" , \"operation\" : \"set\" , \"keys\" : [] } This example will essentially clear the current key sequence of the example:power power. \"entity_action\" : { \"type\" : \"eggolib:modify_key_sequence\" , \"power\" : \"example:power\" , \"operation\" : \"remove\" } This example will remove the key from the last index of the current key sequence of the example:power power.","title":"Modify Key Sequence (Entity Action Type)"},{"location":"types/entity_action_types/modify_key_sequence/#modify_key_sequence","text":"Entity Action Type Modifies the current key sequence of a power that uses the Action on Key Sequence (Power Type) present on the entity that invoked the action. Type ID: eggolib:modify_key_sequence Note If index is less than or equal to -1 , then it would refer to the last index of the current key sequence. Otherwise, if it's 0 , then it would refer to the first index of the current key sequence. Note Here's an explanation on how each operation works: \"append\" - Adds the specified keys to the last index of the current key sequence. \"insert\" - Inserts the specified keys to the specified index of the current key sequence. \"prepend\" - Adds the specified keys to the first index of the current key sequence. \"remove\" - Removes the specified keys from the current key sequence. If there are no keys specified, remove the key from the specified index instead. \"set\" - Replace the current key sequence with the specified key sequence.","title":"Modify Key Sequence"},{"location":"types/entity_action_types/modify_key_sequence/#fields","text":"Field Type Default Description power Identifier The namespace and ID of the power to modify its current key sequence of. operation String \"append\" Determines how the specified keys are operated on the current key sequence of the specified power. Accepts \"append\" , \"insert\" , \"prepend\" , \"remove\" or \"set\" . keys Array of Keys optional If specified, these keys will be used to modify the current key sequence of the specified power. index Integer -1 The integer to use as the index when modifying the current key sequence of the specified power. Only used by the \"insert\" and \"remove\" operations.","title":"Fields"},{"location":"types/entity_action_types/modify_key_sequence/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:modify_key_sequence\" , \"power\" : \"example:power\" , \"operation\" : \"set\" , \"keys\" : [] } This example will essentially clear the current key sequence of the example:power power. \"entity_action\" : { \"type\" : \"eggolib:modify_key_sequence\" , \"power\" : \"example:power\" , \"operation\" : \"remove\" } This example will remove the key from the last index of the current key sequence of the example:power power.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/open_inventory/","text":"Open Inventory Entity Action Type Opens an inventory. Type ID: eggolib:open_inventory Caution Currently, this entity action type cannot open the inventory of the player that invoked the action. Fields Field Type Default Description power Identifier optional If specified, the inventory of this power will be opened instead. Examples \"entity_action\" : { \"type\" : \"eggolib:open_inventory\" , \"power\" : \"example:extra_inventory\" } This example will open the inventory of the example:extra_inventory ( data/example/powers/extra_inventory.json ) as long as that power uses the inventory power type.","title":"Open Inventory (Entity Action Type)"},{"location":"types/entity_action_types/open_inventory/#open_inventory","text":"Entity Action Type Opens an inventory. Type ID: eggolib:open_inventory Caution Currently, this entity action type cannot open the inventory of the player that invoked the action.","title":"Open Inventory"},{"location":"types/entity_action_types/open_inventory/#fields","text":"Field Type Default Description power Identifier optional If specified, the inventory of this power will be opened instead.","title":"Fields"},{"location":"types/entity_action_types/open_inventory/#examples","text":"\"entity_action\" : { \"type\" : \"eggolib:open_inventory\" , \"power\" : \"example:extra_inventory\" } This example will open the inventory of the example:extra_inventory ( data/example/powers/extra_inventory.json ) as long as that power uses the inventory power type.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/play_sound/","text":"Play Sound Entity Action Type Plays a sound event at the position of the entity. Type ID: eggolib:play_sound Note The value of the volume field is used to multiply the base distance of the sound event, which is 16 blocks. Fields Field Type Default Description sound Identifier The identifier of the sound event to play. category Sound Category optional If specified, use this sound category instead of the sound category defined in the entity. volume Float 1.0 The volume of the sound event. pitch Float 1.0 The pitch of the sound event. Examples Example #1 \"entity_action\" : { \"type\" : \"eggolib:play_sound\" , \"sound\" : \"minecraft:entity.creeper.ignite\" , \"category\" : \"hostile\" } This example will play the minecraft:entity.creeper.ignite sound event in the hostile sound category.","title":"Play Sound (Entity Action Type)"},{"location":"types/entity_action_types/play_sound/#play_sound","text":"Entity Action Type Plays a sound event at the position of the entity. Type ID: eggolib:play_sound Note The value of the volume field is used to multiply the base distance of the sound event, which is 16 blocks.","title":"Play Sound"},{"location":"types/entity_action_types/play_sound/#fields","text":"Field Type Default Description sound Identifier The identifier of the sound event to play. category Sound Category optional If specified, use this sound category instead of the sound category defined in the entity. volume Float 1.0 The volume of the sound event. pitch Float 1.0 The pitch of the sound event.","title":"Fields"},{"location":"types/entity_action_types/play_sound/#examples","text":"Example #1 \"entity_action\" : { \"type\" : \"eggolib:play_sound\" , \"sound\" : \"minecraft:entity.creeper.ignite\" , \"category\" : \"hostile\" } This example will play the minecraft:entity.creeper.ignite sound event in the hostile sound category.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/remove_power/","text":"Remove Power Entity Action Type Removes a power from the entity. Type ID: eggolib:remove_power Fields Field Type Default Description power Identifier The namespace, path and ID of the power to be removed. Examples \"entity_action\" : { \"type\" : \"eggolib:remove_power\" , \"power\" : \"example:phasing\" } This example will remove the example:phasing ( data/example/powers/phasing.json ) power from the entity that invoked the action.","title":"Remove Power (Entity Action Type)"},{"location":"types/entity_action_types/remove_power/#remove_power","text":"Entity Action Type Removes a power from the entity. Type ID: eggolib:remove_power","title":"Remove Power"},{"location":"types/entity_action_types/remove_power/#fields","text":"Field Type Default Description power Identifier The namespace, path and ID of the power to be removed.","title":"Fields"},{"location":"types/entity_action_types/remove_power/#examples","text":"\"entity_action\" : { \"type\" : \"eggolib:remove_power\" , \"power\" : \"example:phasing\" } This example will remove the example:phasing ( data/example/powers/phasing.json ) power from the entity that invoked the action.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/replace_inventory/","text":"Replace Inventory Entity Action Type Replaces the item(s) from either the entity's inventory or a power that uses the Inventory (Power Type) or Origins/Apoli's Inventory (Power Type) . Type ID: eggolib:replace_inventory Fields Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to replace the items from the inventory of the entity or the inventory of a power present in the entity. entity_action Entity Action optional If specified, this action will be executed on the entity before the items are replaced. item_action Item Action optional If specified, this action will be executed on the affected items after the said items are replaced. item_condition Item Condition optional If specified, only items which fulfill this condition will be replaced. slot Identifier optional If specified, only items in the designated slot will be replaced. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the designated slots will be replaced. See Positioned Item Stack Slots for possible values. power Identifer optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be replaced instead of the items in the entity's inventory. stack Item Stack The item to use as a replacement for the affected items. merge_nbt Boolean false Determines whether to merge the NBTs of the item that will be replaced and the NBTs of the item that will be used as a replacement. Examples Example #1 Example #2 Example #3 \"entity_action\" : { \"type\" : \"eggolib:replace_inventory\" , \"stack\" : { \"item\" : \"minecraft:egg\" } } This example will fill the entire inventory of the entity with Eggs. \"entity_action\" : { \"type\" : \"eggolib:replace_inventory\" , \"slots\" : [ \"weapon.mainhand\" , \"weapon.offhand\" ], \"stack\" : { \"item\" : \"minecraft:air\" } } This example will remove the items from the entity's off and main hands. \"entity_action\" : { \"type\" : \"eggolib:replace_inventory\" , \"slot\" : \"weapon.mainhand\" , \"stack\" : { \"item\" : \"minecraft:wooden_sword\" , \"tag\" : \"{Enchantments: [{id: \\\"minecraft:mending\\\", lvl: 1s}]}\" }, \"merge_nbt\" : true } This example will replace the item from the entity's mainhand slot with a Wooden Sword enchanted with the Mending enchantment. If the previous item from the entity's mainhand slot had NBTs, those NBTs will be merged to the NBTs of the item used as a replacement.","title":"Replace Inventory (Entity Action Type)"},{"location":"types/entity_action_types/replace_inventory/#replace_inventory","text":"Entity Action Type Replaces the item(s) from either the entity's inventory or a power that uses the Inventory (Power Type) or Origins/Apoli's Inventory (Power Type) . Type ID: eggolib:replace_inventory","title":"Replace Inventory"},{"location":"types/entity_action_types/replace_inventory/#fields","text":"Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to replace the items from the inventory of the entity or the inventory of a power present in the entity. entity_action Entity Action optional If specified, this action will be executed on the entity before the items are replaced. item_action Item Action optional If specified, this action will be executed on the affected items after the said items are replaced. item_condition Item Condition optional If specified, only items which fulfill this condition will be replaced. slot Identifier optional If specified, only items in the designated slot will be replaced. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the designated slots will be replaced. See Positioned Item Stack Slots for possible values. power Identifer optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be replaced instead of the items in the entity's inventory. stack Item Stack The item to use as a replacement for the affected items. merge_nbt Boolean false Determines whether to merge the NBTs of the item that will be replaced and the NBTs of the item that will be used as a replacement.","title":"Fields"},{"location":"types/entity_action_types/replace_inventory/#examples","text":"Example #1 Example #2 Example #3 \"entity_action\" : { \"type\" : \"eggolib:replace_inventory\" , \"stack\" : { \"item\" : \"minecraft:egg\" } } This example will fill the entire inventory of the entity with Eggs. \"entity_action\" : { \"type\" : \"eggolib:replace_inventory\" , \"slots\" : [ \"weapon.mainhand\" , \"weapon.offhand\" ], \"stack\" : { \"item\" : \"minecraft:air\" } } This example will remove the items from the entity's off and main hands. \"entity_action\" : { \"type\" : \"eggolib:replace_inventory\" , \"slot\" : \"weapon.mainhand\" , \"stack\" : { \"item\" : \"minecraft:wooden_sword\" , \"tag\" : \"{Enchantments: [{id: \\\"minecraft:mending\\\", lvl: 1s}]}\" }, \"merge_nbt\" : true } This example will replace the item from the entity's mainhand slot with a Wooden Sword enchanted with the Mending enchantment. If the previous item from the entity's mainhand slot had NBTs, those NBTs will be merged to the NBTs of the item used as a replacement.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/selector_action/","text":"Selector Action Entity Action Type Executes an action on entities selected by a target selector. Type ID: eggolib:selector_action Note See Minecraft Fandom Wiki: Target selectors for more information about target selectors. Note In the context of this action type, the actor entity will be the entity that invoked the action while the target entity/entities will be the entities selected by the specified target selector. Fields Field Type Default Description selector String The selector to use for selecting entities. It can be the username of a player, the UUID of the entity or a target selector. bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the actor and target entities. bientity_condition Bi-entity Condition Type optional If specified, the specified action will only be executed if this condition is fulfilled by either or both the actor and target entities. Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:selector_action\" , \"selector\" : \"Steve\" , \"bientity_action\" : { \"type\" : \"apoli:damage\" , \"amount\" : 5 , \"source\" : { \"name\" : \"generic\" } } } This example will deal 2 and a half hearts of damage to the player named Steve. \"entity_action\" : { \"type\" : \"eggolib:selector_action\" , \"selector\" : \"@e[type = minecraft:armor_stand, tag = some_tag]\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"kill @s\" } } } This example will kill Armor Stands that have the some_tag tag (added via the /tag command)","title":"Selector Action (Entity Action Type)"},{"location":"types/entity_action_types/selector_action/#selector_action","text":"Entity Action Type Executes an action on entities selected by a target selector. Type ID: eggolib:selector_action Note See Minecraft Fandom Wiki: Target selectors for more information about target selectors. Note In the context of this action type, the actor entity will be the entity that invoked the action while the target entity/entities will be the entities selected by the specified target selector.","title":"Selector Action"},{"location":"types/entity_action_types/selector_action/#fields","text":"Field Type Default Description selector String The selector to use for selecting entities. It can be the username of a player, the UUID of the entity or a target selector. bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the actor and target entities. bientity_condition Bi-entity Condition Type optional If specified, the specified action will only be executed if this condition is fulfilled by either or both the actor and target entities.","title":"Fields"},{"location":"types/entity_action_types/selector_action/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:selector_action\" , \"selector\" : \"Steve\" , \"bientity_action\" : { \"type\" : \"apoli:damage\" , \"amount\" : 5 , \"source\" : { \"name\" : \"generic\" } } } This example will deal 2 and a half hearts of damage to the player named Steve. \"entity_action\" : { \"type\" : \"eggolib:selector_action\" , \"selector\" : \"@e[type = minecraft:armor_stand, tag = some_tag]\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"kill @s\" } } } This example will kill Armor Stands that have the some_tag tag (added via the /tag command)","title":"Examples"},{"boost":2,"location":"types/entity_action_types/set_perspective/","text":"Set Perspective Entity Action Type Sets the perspective of the player. Type ID: eggolib:set_perspective Fields Field Type Default Description perspective Perspective The perspective to use. Examples \"entity_action\" : { \"type\" : \"eggolib:set_perspective\" , \"perspective\" : \"first_person\" } This example will set the perspective of the player to first person.","title":"Set Perspective (Entity Action Type)"},{"location":"types/entity_action_types/set_perspective/#set_perspective","text":"Entity Action Type Sets the perspective of the player. Type ID: eggolib:set_perspective","title":"Set Perspective"},{"location":"types/entity_action_types/set_perspective/#fields","text":"Field Type Default Description perspective Perspective The perspective to use.","title":"Fields"},{"location":"types/entity_action_types/set_perspective/#examples","text":"\"entity_action\" : { \"type\" : \"eggolib:set_perspective\" , \"perspective\" : \"first_person\" } This example will set the perspective of the player to first person.","title":"Examples"},{"boost":2,"location":"types/entity_action_types/spawn_entity/","text":"Spawn Entity Entity Action Type Spawns an entity. Type ID: eggolib:spawn_entity Note This action type can spawn in entities with passengers. Field Field Type Default Description entity_type Identifier The identifier of the entity that will be spawned. tag String optional If specified, this NBT data will be added to the entity that will be spawned. entity_action Entity Action Type optional If specified, this action will be executed on the entity that will be spawned. Examples Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:spawn_entity\" , \"entity_type\" : \"minecraft:skeleton\" , \"tag\" : \"{ArmorItems: [{}, {}, {}, {id: \\\"minecraft:iron_helmet\\\", Count: 1b}]}\" } This example will spawn a Skeleton with an Iron Helmet. \"entity_action\" : { \"type\" : \"eggolib:spawn_entity\" , \"entity_type\" : \"minecraft:skeleton_horse\" , \"tag\" : \"{Passengers: [{id: \\\"minecraft:skeleton\\\", ArmorItems: [{}, {}, {}, {id: \\\"minecraft:golden_helmet\\\", Count: 1b}]}]}\" } This example will spawn a Skeleton Horse with a Skeleton passenger equipped with a Golden Helmet.","title":"Spawn Entity"},{"location":"types/entity_action_types/spawn_entity/#spawn_entity","text":"Entity Action Type Spawns an entity. Type ID: eggolib:spawn_entity Note This action type can spawn in entities with passengers.","title":"Spawn Entity"},{"location":"types/entity_action_types/spawn_entity/#field","text":"Field Type Default Description entity_type Identifier The identifier of the entity that will be spawned. tag String optional If specified, this NBT data will be added to the entity that will be spawned. entity_action Entity Action Type optional If specified, this action will be executed on the entity that will be spawned.","title":"Field"},{"location":"types/entity_action_types/spawn_entity/#examples","text":"Example #1 Example #2 \"entity_action\" : { \"type\" : \"eggolib:spawn_entity\" , \"entity_type\" : \"minecraft:skeleton\" , \"tag\" : \"{ArmorItems: [{}, {}, {}, {id: \\\"minecraft:iron_helmet\\\", Count: 1b}]}\" } This example will spawn a Skeleton with an Iron Helmet. \"entity_action\" : { \"type\" : \"eggolib:spawn_entity\" , \"entity_type\" : \"minecraft:skeleton_horse\" , \"tag\" : \"{Passengers: [{id: \\\"minecraft:skeleton\\\", ArmorItems: [{}, {}, {}, {id: \\\"minecraft:golden_helmet\\\", Count: 1b}]}]}\" } This example will spawn a Skeleton Horse with a Skeleton passenger equipped with a Golden Helmet.","title":"Examples"},{"location":"types/entity_condition_types/block_collision/","text":"Block Collision Entity Condition Type Checks whether the bounding box of the entity is colliding with a block. Type ID: eggolib:block_collision Fields Field Type Default Description block_condition Block Condition optional If specified, the condition will only evaluate to true if this condition is fulfilled by the block colliding with the bounding box of the entity. offset_x Float 0 Determines the offset for the bounding box of the entity in the X axis. offset_y Float 0 Determines the offset for the bounding box of the entity in the Y axis. offset_z Float 0 Determines the offset for the bounding box of the entity in the Z axis. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:block_collision\" , \"offset_x\" : 0.1 , \"offset_z\" : 0.1 } This example will check if the bounding box of the entity is colliding with the east and south faces of a block. \"condition\" : { \"type\" : \"apoli:or\" , \"conditions\" : [ { \"type\" : \"eggolib:block_collision\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:white_wool\" }, \"offset_x\" : 0.01 , \"offset_z\" : 0.01 }, { \"type\" : \"eggolib:block_collision\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:white_wool\" }, \"offset_x\" : -0.01 , \"offset_z\" : -0.01 } ] } This example will check if the bounding box of the entity is colliding with the north, south, east or west faces of a White Wool block.","title":"Block collision"},{"location":"types/entity_condition_types/block_collision/#block_collision","text":"Entity Condition Type Checks whether the bounding box of the entity is colliding with a block. Type ID: eggolib:block_collision","title":"Block Collision"},{"location":"types/entity_condition_types/block_collision/#fields","text":"Field Type Default Description block_condition Block Condition optional If specified, the condition will only evaluate to true if this condition is fulfilled by the block colliding with the bounding box of the entity. offset_x Float 0 Determines the offset for the bounding box of the entity in the X axis. offset_y Float 0 Determines the offset for the bounding box of the entity in the Y axis. offset_z Float 0 Determines the offset for the bounding box of the entity in the Z axis.","title":"Fields"},{"location":"types/entity_condition_types/block_collision/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:block_collision\" , \"offset_x\" : 0.1 , \"offset_z\" : 0.1 } This example will check if the bounding box of the entity is colliding with the east and south faces of a block. \"condition\" : { \"type\" : \"apoli:or\" , \"conditions\" : [ { \"type\" : \"eggolib:block_collision\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:white_wool\" }, \"offset_x\" : 0.01 , \"offset_z\" : 0.01 }, { \"type\" : \"eggolib:block_collision\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:white_wool\" }, \"offset_x\" : -0.01 , \"offset_z\" : -0.01 } ] } This example will check if the bounding box of the entity is colliding with the north, south, east or west faces of a White Wool block.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/breaking_block/","text":"Breaking Block Entity Condition Type Checks if the player is currently breaking a block. Type ID: eggolib:breaking_block Fields Field Type Default Description block_condition Block Condition Type optional If specified, the condition will only evaluate to true if this condition is fulfilled by the block being broken. using_effective_tool Boolean false Determines if the condition should check if the player is using the effective tool for the block being broken. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:breaking_block\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:diamond_block\" } } This example will check if the player is currently mining a Diamond Block. \"condition\" : { \"type\" : \"eggolib:breaking_block\" , \"using_effective_tool\" : true } This example will check if the player is currently mining a block using its effective tool.","title":"Breaking Block (Entity Condition Type)"},{"location":"types/entity_condition_types/breaking_block/#breaking_block","text":"Entity Condition Type Checks if the player is currently breaking a block. Type ID: eggolib:breaking_block","title":"Breaking Block"},{"location":"types/entity_condition_types/breaking_block/#fields","text":"Field Type Default Description block_condition Block Condition Type optional If specified, the condition will only evaluate to true if this condition is fulfilled by the block being broken. using_effective_tool Boolean false Determines if the condition should check if the player is using the effective tool for the block being broken.","title":"Fields"},{"location":"types/entity_condition_types/breaking_block/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:breaking_block\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:diamond_block\" } } This example will check if the player is currently mining a Diamond Block. \"condition\" : { \"type\" : \"eggolib:breaking_block\" , \"using_effective_tool\" : true } This example will check if the player is currently mining a block using its effective tool.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/crawling/","text":"Crawling Entity Condition Type Checks if the entity that has the power is crawling (e.g: in swimming pose and not submerged in water). Type ID: eggolib:crawling Fields None. Examples \"condition\" : { \"type\" : \"eggolib:crawling\" }","title":"Crawling (Entity Condition Type)"},{"location":"types/entity_condition_types/crawling/#crawling","text":"Entity Condition Type Checks if the entity that has the power is crawling (e.g: in swimming pose and not submerged in water). Type ID: eggolib:crawling","title":"Crawling"},{"location":"types/entity_condition_types/crawling/#fields","text":"None.","title":"Fields"},{"location":"types/entity_condition_types/crawling/#examples","text":"\"condition\" : { \"type\" : \"eggolib:crawling\" }","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/exposed_to_weather/","text":"Exposed to Weather Entity Condition Type Checks if the entity is exposed to the sky and certain weather. Type ID: eggolib:exposed_to_weather Fields Field Type Default Description weather Precipitation optional If specified, the condition will check if the entity is exposed to the specified weather. thundering Boolean optional If specified, the condition will check if there is a thunderstorm. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:exposed_to_weather\" , \"weather\" : \"snow\" } This example will check if the entity is exposed to the sky and snowy weather. \"condition\" : { \"type\" : \"eggolib:exposed_to_weather\" , \"weather\" : \"rain\" , \"thundering\" : true } This example will check if the entity is exposed to sky and stormy weather.","title":"Exposed to Weather (Entity Condition Type)"},{"location":"types/entity_condition_types/exposed_to_weather/#exposed_to_weather","text":"Entity Condition Type Checks if the entity is exposed to the sky and certain weather. Type ID: eggolib:exposed_to_weather","title":"Exposed to Weather"},{"location":"types/entity_condition_types/exposed_to_weather/#fields","text":"Field Type Default Description weather Precipitation optional If specified, the condition will check if the entity is exposed to the specified weather. thundering Boolean optional If specified, the condition will check if there is a thunderstorm.","title":"Fields"},{"location":"types/entity_condition_types/exposed_to_weather/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:exposed_to_weather\" , \"weather\" : \"snow\" } This example will check if the entity is exposed to the sky and snowy weather. \"condition\" : { \"type\" : \"eggolib:exposed_to_weather\" , \"weather\" : \"rain\" , \"thundering\" : true } This example will check if the entity is exposed to sky and stormy weather.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/has_spawn_point/","text":"Has Spawn Point Entity Condition Type Checks if the entity has a spawnpoint. Type ID: eggolib:has_spawn_point Note This entity condition type will only work for players. Fields None. Examples Example #1 \"condition\" : { \"type\" : \"eggolib:has_spawn_point\" }","title":"Has Spawn Point (Entity Condition Type)"},{"location":"types/entity_condition_types/has_spawn_point/#has_spawn_point","text":"Entity Condition Type Checks if the entity has a spawnpoint. Type ID: eggolib:has_spawn_point Note This entity condition type will only work for players.","title":"Has Spawn Point"},{"location":"types/entity_condition_types/has_spawn_point/#fields","text":"None.","title":"Fields"},{"location":"types/entity_condition_types/has_spawn_point/#examples","text":"Example #1 \"condition\" : { \"type\" : \"eggolib:has_spawn_point\" }","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/has_tag/","text":"Has Tag Entity Condition Type Checks if the entity has a scoreboard tag (added via the /tag command). Type ID: eggolib:has_tag Note If neither the tag or tags fields are specified, this entity condition type will check if the entity has any scoreboard tags. Fields Field Type Default Description tag String optional If specified, checks if the entity has this scoreboard tag. tags Array of Strings optional If specified, checks if the entity has these scoreboard tags. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:has_tag\" , \"tag\" : \"example.tag\" } This example will check if the entity has the example.tag scoreboard tag. \"condition\" : { \"type\" : \"eggolib:has_tag\" , \"tags\" : [ \"tag_with_numbers123\" , \"tagWithUppercasedLetters\" ] } This example will check if the entity has the tag_with_numbers123 or the tagWithUppercasedLetters scoreboard tags.","title":"Has Tag (Entity Condition Type)"},{"location":"types/entity_condition_types/has_tag/#has_tag","text":"Entity Condition Type Checks if the entity has a scoreboard tag (added via the /tag command). Type ID: eggolib:has_tag Note If neither the tag or tags fields are specified, this entity condition type will check if the entity has any scoreboard tags.","title":"Has Tag"},{"location":"types/entity_condition_types/has_tag/#fields","text":"Field Type Default Description tag String optional If specified, checks if the entity has this scoreboard tag. tags Array of Strings optional If specified, checks if the entity has these scoreboard tags.","title":"Fields"},{"location":"types/entity_condition_types/has_tag/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:has_tag\" , \"tag\" : \"example.tag\" } This example will check if the entity has the example.tag scoreboard tag. \"condition\" : { \"type\" : \"eggolib:has_tag\" , \"tags\" : [ \"tag_with_numbers123\" , \"tagWithUppercasedLetters\" ] } This example will check if the entity has the tag_with_numbers123 or the tagWithUppercasedLetters scoreboard tags.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/in_block/","text":"In Block Entity Condition Type Checks if the entity's feet or eyes is in a block. Type ID: eggolib:in_block Fields Field Type Default Description block_condition Block Condition Type The condition to test on the block at the entity's specified offset. offset Entity Offset \"feet\" Determines the offset of where the condition should check for the block. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:in_block\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:water\" } } This example will check if the entity's feet is in water. \"condition\" : { \"type\" : \"eggolib:in_block\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:lava\" }, \"offset\" : \"eyes\" } This example will check if the entity's eyes is in lava.","title":"In Block (Entity Condition Type)"},{"location":"types/entity_condition_types/in_block/#in_block","text":"Entity Condition Type Checks if the entity's feet or eyes is in a block. Type ID: eggolib:in_block","title":"In Block"},{"location":"types/entity_condition_types/in_block/#fields","text":"Field Type Default Description block_condition Block Condition Type The condition to test on the block at the entity's specified offset. offset Entity Offset \"feet\" Determines the offset of where the condition should check for the block.","title":"Fields"},{"location":"types/entity_condition_types/in_block/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:in_block\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:water\" } } This example will check if the entity's feet is in water. \"condition\" : { \"type\" : \"eggolib:in_block\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:lava\" }, \"offset\" : \"eyes\" } This example will check if the entity's eyes is in lava.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/in_screen/","text":"In Screen Entity Condition Type Checks if the player has any or specific screen open. Type ID: eggolib:in_screen Fields Field Type Default Description screen String optional If specified, the condition will evaluate to true if the player's current screen matches this screen. See In-Game Screen Class (Class Data Registry) for possible values. screens Array of Strings optional If specified, the condition will evaluate to true if the player's current screen matches any of these screens. See In-Game Screen Class (Class Data Registry) for possible values. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:in_screen\" } This example will check if the player has a screen open. \"condition\" : { \"type\" : \"eggolib:in_screen\" , \"screens\" : [ \"inventory\" , \"creative_inventory\" ] } This example will check if the player has the inventory or creative inventory screen open.","title":"In Screen (Entity Condition Type)"},{"location":"types/entity_condition_types/in_screen/#in_screen","text":"Entity Condition Type Checks if the player has any or specific screen open. Type ID: eggolib:in_screen","title":"In Screen"},{"location":"types/entity_condition_types/in_screen/#fields","text":"Field Type Default Description screen String optional If specified, the condition will evaluate to true if the player's current screen matches this screen. See In-Game Screen Class (Class Data Registry) for possible values. screens Array of Strings optional If specified, the condition will evaluate to true if the player's current screen matches any of these screens. See In-Game Screen Class (Class Data Registry) for possible values.","title":"Fields"},{"location":"types/entity_condition_types/in_screen/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:in_screen\" } This example will check if the player has a screen open. \"condition\" : { \"type\" : \"eggolib:in_screen\" , \"screens\" : [ \"inventory\" , \"creative_inventory\" ] } This example will check if the player has the inventory or creative inventory screen open.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/in_snow/","text":"In Snow Entity Condition Type Checks if it's snowing at the entity's position. Type ID: eggolib:in_snow Fields None. Examples Example #1 \"condition\" : { \"type\" : \"eggolib:in_snow\" }","title":"In Snow (Entity Condition Type)"},{"location":"types/entity_condition_types/in_snow/#in_snow","text":"Entity Condition Type Checks if it's snowing at the entity's position. Type ID: eggolib:in_snow","title":"In Snow"},{"location":"types/entity_condition_types/in_snow/#fields","text":"None.","title":"Fields"},{"location":"types/entity_condition_types/in_snow/#examples","text":"Example #1 \"condition\" : { \"type\" : \"eggolib:in_snow\" }","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/in_team/","text":"In Team Entity Condition Type Checks if the entity is in the specified team(s). Type ID: eggolib:in_team Note If neither the team or teams field is present, this entity condition type will check if the entity is in any team. Fields Field Type Default Description team Abstract Team optional If specified, check if the entity is in this team. teams Array of Abstract Teams optional If specified, check if the entity is in any of these teams. Examples Example #1 Example #2 Example #3 \"condition\" : { \"type\" : \"eggolib:in_team\" } This example will check if the entity is in any team. \"condition\" : { \"type\" : \"eggolib:in_team\" , \"team\" : { \"name\" : \"epicGamers\" } } This example will check if the entity is in a team with the name \"epicGamers\". \"condition\" : { \"type\" : \"eggolib:in_team\" , \"teams\" : [ { \"name\" : \"epicGamers\" }, { \"nametag_visibility\" : \"never\" } ] } This example will check if the entity is in a team with the name \"epicGamers\" or a team that has the nametagVisibility option set to never .","title":"In Team (Entity Condition Type)"},{"location":"types/entity_condition_types/in_team/#in_team","text":"Entity Condition Type Checks if the entity is in the specified team(s). Type ID: eggolib:in_team Note If neither the team or teams field is present, this entity condition type will check if the entity is in any team.","title":"In Team"},{"location":"types/entity_condition_types/in_team/#fields","text":"Field Type Default Description team Abstract Team optional If specified, check if the entity is in this team. teams Array of Abstract Teams optional If specified, check if the entity is in any of these teams.","title":"Fields"},{"location":"types/entity_condition_types/in_team/#examples","text":"Example #1 Example #2 Example #3 \"condition\" : { \"type\" : \"eggolib:in_team\" } This example will check if the entity is in any team. \"condition\" : { \"type\" : \"eggolib:in_team\" , \"team\" : { \"name\" : \"epicGamers\" } } This example will check if the entity is in a team with the name \"epicGamers\". \"condition\" : { \"type\" : \"eggolib:in_team\" , \"teams\" : [ { \"name\" : \"epicGamers\" }, { \"nametag_visibility\" : \"never\" } ] } This example will check if the entity is in a team with the name \"epicGamers\" or a team that has the nametagVisibility option set to never .","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/in_thunderstorm/","text":"In Thunderstorm Entity Condition Type Checks if it's thundering at the entity's position. Type ID: eggolib:in_thunderstorm Fields None. Examples Example #1 \"condition\" : { \"type\" : \"eggolib:in_thunderstorm\" }","title":"In Thunderstorm (Entity Condition Type)"},{"location":"types/entity_condition_types/in_thunderstorm/#in_thunderstorm","text":"Entity Condition Type Checks if it's thundering at the entity's position. Type ID: eggolib:in_thunderstorm","title":"In Thunderstorm"},{"location":"types/entity_condition_types/in_thunderstorm/#fields","text":"None.","title":"Fields"},{"location":"types/entity_condition_types/in_thunderstorm/#examples","text":"Example #1 \"condition\" : { \"type\" : \"eggolib:in_thunderstorm\" }","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/inventory/","text":"Inventory Entity Condition Type Checks if the inventory of the entity is occupied. Type ID: eggolib:inventory Fields Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to check for items in the inventory of the entity or the inventory of a power present in the entity. item_condition Item Condition optional If specified, only evaluate the condition to true if any of the items in the specified inventory fulfills this condition. comparison Comparison \">\" Determines the amount of items that were found is compared to the specified value. compare_to Integer 0 The value which the amount of items that were found is compared to. slot Identifier optional If specified, only items in the specified slot will be checked. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the specified slots will be checked. See Positioned Item Stack Slots for possible values. power Identifier optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be checked instead of the items in the entity's inventory. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:inventory\" , \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:egg\" } } } This example will check if the entity has an Egg item in their inventory. \"condition\" : { \"type\" : \"eggolib:inventory\" , \"inventory_type\" : \"power\" , \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:nether_star\" } }, \"slot\" : \"container.4\" , \"power\" : \"origins:shulker_inventory\" } This example will check if the entity has a Nether Star in the middle slot of the inventory of the origins:shulker_inventory power.","title":"Inventory (Entity Condition Type)"},{"location":"types/entity_condition_types/inventory/#inventory","text":"Entity Condition Type Checks if the inventory of the entity is occupied. Type ID: eggolib:inventory","title":"Inventory"},{"location":"types/entity_condition_types/inventory/#fields","text":"Field Type Default Description inventory_type Inventory Type \"inventory\" Determines whether to check for items in the inventory of the entity or the inventory of a power present in the entity. item_condition Item Condition optional If specified, only evaluate the condition to true if any of the items in the specified inventory fulfills this condition. comparison Comparison \">\" Determines the amount of items that were found is compared to the specified value. compare_to Integer 0 The value which the amount of items that were found is compared to. slot Identifier optional If specified, only items in the specified slot will be checked. See Positioned Item Stack Slots for possible values. slots Array of Identifiers optional If specified, only items in the specified slots will be checked. See Positioned Item Stack Slots for possible values. power Identifier optional If specified and if inventory_type is set to \"power\" , the items in the inventory of this power will be checked instead of the items in the entity's inventory.","title":"Fields"},{"location":"types/entity_condition_types/inventory/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:inventory\" , \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:egg\" } } } This example will check if the entity has an Egg item in their inventory. \"condition\" : { \"type\" : \"eggolib:inventory\" , \"inventory_type\" : \"power\" , \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:nether_star\" } }, \"slot\" : \"container.4\" , \"power\" : \"origins:shulker_inventory\" } This example will check if the entity has a Nether Star in the middle slot of the inventory of the origins:shulker_inventory power.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/moon_phase/","text":"Moon Phase Entity Condition Type Checks the current moon phase of the world. Type ID: eggolib:moon_phase Fields Field Type Default Description phase Moon Phase optional If specified, checks if the current moon phase of the world matches this moon phase. phases Array of Moon Phases optional If specified, checks if the current moon phase of the world matches any of these moon phases. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:moon_phase\" , \"phase\" : \"full_moon\" } This example will check if the current moon phase of the world is Full Moon. \"condition\" : { \"type\" : \"eggolib:moon_phase\" , \"phases\" : [ \"full_moon\" , \"new_moon\" ] } This example will check if the current moon phase of the world is either Full Moon or New Moon.","title":"Moon Phase (Entity Condition Type)"},{"location":"types/entity_condition_types/moon_phase/#moon_phase","text":"Entity Condition Type Checks the current moon phase of the world. Type ID: eggolib:moon_phase","title":"Moon Phase"},{"location":"types/entity_condition_types/moon_phase/#fields","text":"Field Type Default Description phase Moon Phase optional If specified, checks if the current moon phase of the world matches this moon phase. phases Array of Moon Phases optional If specified, checks if the current moon phase of the world matches any of these moon phases.","title":"Fields"},{"location":"types/entity_condition_types/moon_phase/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:moon_phase\" , \"phase\" : \"full_moon\" } This example will check if the current moon phase of the world is Full Moon. \"condition\" : { \"type\" : \"eggolib:moon_phase\" , \"phases\" : [ \"full_moon\" , \"new_moon\" ] } This example will check if the current moon phase of the world is either Full Moon or New Moon.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/permission_level/","text":"Permission Level Entity Condition Type Checks if the entity has the specified permission level. Type ID: eggolib:permission_level Caution This may not work properly in singleplayer. Fields Field Type Default Description comparison Comparison \">=\" Determines how the permission level of the entity should be compared to the specified value. compare_to Integer 2 The value which the permission level of the entity should be compared to. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:permission_level\" , \"comparison\" : \">=\" , \"compare_to\" : 1 } This example will check if the entity is opped in general. \"condition\" : { \"type\" : \"eggolib:permission_level\" , \"comparison\" : \"==\" , \"compare_to\" : 4 } This example will check if the entity has a permission level of 4, which is the highest permission level.","title":"Permission Level (Entity Condition Type)"},{"location":"types/entity_condition_types/permission_level/#permission_level","text":"Entity Condition Type Checks if the entity has the specified permission level. Type ID: eggolib:permission_level Caution This may not work properly in singleplayer.","title":"Permission Level"},{"location":"types/entity_condition_types/permission_level/#fields","text":"Field Type Default Description comparison Comparison \">=\" Determines how the permission level of the entity should be compared to the specified value. compare_to Integer 2 The value which the permission level of the entity should be compared to.","title":"Fields"},{"location":"types/entity_condition_types/permission_level/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:permission_level\" , \"comparison\" : \">=\" , \"compare_to\" : 1 } This example will check if the entity is opped in general. \"condition\" : { \"type\" : \"eggolib:permission_level\" , \"comparison\" : \"==\" , \"compare_to\" : 4 } This example will check if the entity has a permission level of 4, which is the highest permission level.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/perspective/","text":"Perspective Entity Condition Type Checks the current perspective of the player. Type ID: eggolib:perspective Fields Field Type Default Description perspective Perspective optional If specified, the condition will evaluate to true if the player has this set as their perspective. perspectives Array of Perspectives optional If specified, the condition will evaluate to true if the player has one of these set as their perspective. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:perspective\" , \"perspective\" : \"first_person\" } This example will check if the player is in first person perspective. \"condition\" : { \"type\" : \"eggolib:perspective\" , \"perspectives\" : [ \"third_person_back\" , \"third_person_front\" ] } This example will check if the player is in either third person (back) or third person (front) perspectives.","title":"Perspective (Entity Condition Type)"},{"location":"types/entity_condition_types/perspective/#perspective","text":"Entity Condition Type Checks the current perspective of the player. Type ID: eggolib:perspective","title":"Perspective"},{"location":"types/entity_condition_types/perspective/#fields","text":"Field Type Default Description perspective Perspective optional If specified, the condition will evaluate to true if the player has this set as their perspective. perspectives Array of Perspectives optional If specified, the condition will evaluate to true if the player has one of these set as their perspective.","title":"Fields"},{"location":"types/entity_condition_types/perspective/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:perspective\" , \"perspective\" : \"first_person\" } This example will check if the player is in first person perspective. \"condition\" : { \"type\" : \"eggolib:perspective\" , \"perspectives\" : [ \"third_person_back\" , \"third_person_front\" ] } This example will check if the player is in either third person (back) or third person (front) perspectives.","title":"Examples"},{"boost":2,"location":"types/entity_condition_types/scoreboard/","text":"Scoreboard Entity Condition Type Compares the score of the entity (or score holder) from a specified scoreboard objective to the specified value. Note If the entity or score holder does not have a score from the specified scoreboard objective, this condition would return false even if the \"!=\" comparison is used. You can use the \"!=\" comparison in combination with the \"==\" comparison to test if the entity or score holder does not have a score in the specified scoreboard objective. Caution This condition is only effective server-side, meaning that using the condition in client-sided power types will not work properly. Fields Field Type Default Description name String optional If specified, the condition will check for the score of this score holder instead of the entity. objective String The name of the scoreobard objective to retrieve the score of the entity or score holder from. comparison Comparison Determines how the score of the entity or score holder should be compared to the specified value. compare_to Integer The value which the score of the entity or score holder should be compared to. Examples Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:scoreboard\" , \"objective\" : \"example\" , \"comparison\" : \">=\" , \"compare_to\" : 1 } This example will check if the entity has a score of 1 or greater in the example scoreboard objective. \"condition\" : { \"type\" : \"eggolib:scoreboard\" , \"name\" : \"testScoreHolder\" , \"objective\" : \"example\" , \"comparison\" : \"==\" , \"compare_to\" : 10 } This example will check if the testScoreHolder score holder from the example scoreboard objective has a score of 10.","title":"Scoreboard (Entity Condition Type)"},{"location":"types/entity_condition_types/scoreboard/#scoreboard","text":"Entity Condition Type Compares the score of the entity (or score holder) from a specified scoreboard objective to the specified value. Note If the entity or score holder does not have a score from the specified scoreboard objective, this condition would return false even if the \"!=\" comparison is used. You can use the \"!=\" comparison in combination with the \"==\" comparison to test if the entity or score holder does not have a score in the specified scoreboard objective. Caution This condition is only effective server-side, meaning that using the condition in client-sided power types will not work properly.","title":"Scoreboard"},{"location":"types/entity_condition_types/scoreboard/#fields","text":"Field Type Default Description name String optional If specified, the condition will check for the score of this score holder instead of the entity. objective String The name of the scoreobard objective to retrieve the score of the entity or score holder from. comparison Comparison Determines how the score of the entity or score holder should be compared to the specified value. compare_to Integer The value which the score of the entity or score holder should be compared to.","title":"Fields"},{"location":"types/entity_condition_types/scoreboard/#examples","text":"Example #1 Example #2 \"condition\" : { \"type\" : \"eggolib:scoreboard\" , \"objective\" : \"example\" , \"comparison\" : \">=\" , \"compare_to\" : 1 } This example will check if the entity has a score of 1 or greater in the example scoreboard objective. \"condition\" : { \"type\" : \"eggolib:scoreboard\" , \"name\" : \"testScoreHolder\" , \"objective\" : \"example\" , \"comparison\" : \"==\" , \"compare_to\" : 10 } This example will check if the testScoreHolder score holder from the example scoreboard objective has a score of 10.","title":"Examples"},{"boost":2,"location":"types/item_action_types/modify/","text":"Modify Item Action Type Applies an item modifier to the item stack. Type ID: eggolib:modify Note This item action type has the following loot context: The origin position of the item modifier; X: 0, Y: 0 and Z: 0 by default. this entity; the holder of the item stack. The block of the item modifier; at the origin position of the item modifier. The block entity of the item modifier; at the origin position of the item modifier. Fields Field Type Default Description modifier Identifier The item modifier to apply to the item stack. position Vector {\"x\": 0, \"y\": 0, \"z\": 0} If specified, this position will be used for the origin position of the item modifier. dimension Identifier minecraft:overworld If specified, this dimension will be used for the origin position of the item modifier. Examples Example #1 Example #2 \"item_action\" : { \"type\" : \"eggolib:modify\" , \"modifier\" : \"example:smelt\" } data/example/item_modifiers/smelt.json { \"function\" : \"minecraft:furnace_smelt\" } This example will apply the example:smelt item modifier to the item stack, smelting the item stack as if it was smelted in a Furnace. \"item_action\" : { \"type\" : \"eggolib:modify\" , \"modifier\" : \"example:copy_from_block\" , \"position\" : { \"x\" : -30000000 , \"y\" : 0 , \"z\" : 1602 } } data/example/item_modifiers/copy_from_block.json { \"function\" : \"minecraft:copy_nbt\" , \"source\" : \"block_entity\" , \"ops\" : [ { \"source\" : \"Items\" , \"target\" : \"BlockEntityTag.Items\" , \"op\" : \"replace\" } ] } This example will copy the items from the block container at -30000000 0 1602 in the Overworld to the item stack.","title":"Modify (Item Action Type)"},{"location":"types/item_action_types/modify/#modify","text":"Item Action Type Applies an item modifier to the item stack. Type ID: eggolib:modify Note This item action type has the following loot context: The origin position of the item modifier; X: 0, Y: 0 and Z: 0 by default. this entity; the holder of the item stack. The block of the item modifier; at the origin position of the item modifier. The block entity of the item modifier; at the origin position of the item modifier.","title":"Modify"},{"location":"types/item_action_types/modify/#fields","text":"Field Type Default Description modifier Identifier The item modifier to apply to the item stack. position Vector {\"x\": 0, \"y\": 0, \"z\": 0} If specified, this position will be used for the origin position of the item modifier. dimension Identifier minecraft:overworld If specified, this dimension will be used for the origin position of the item modifier.","title":"Fields"},{"location":"types/item_action_types/modify/#examples","text":"Example #1 Example #2 \"item_action\" : { \"type\" : \"eggolib:modify\" , \"modifier\" : \"example:smelt\" } data/example/item_modifiers/smelt.json { \"function\" : \"minecraft:furnace_smelt\" } This example will apply the example:smelt item modifier to the item stack, smelting the item stack as if it was smelted in a Furnace. \"item_action\" : { \"type\" : \"eggolib:modify\" , \"modifier\" : \"example:copy_from_block\" , \"position\" : { \"x\" : -30000000 , \"y\" : 0 , \"z\" : 1602 } } data/example/item_modifiers/copy_from_block.json { \"function\" : \"minecraft:copy_nbt\" , \"source\" : \"block_entity\" , \"ops\" : [ { \"source\" : \"Items\" , \"target\" : \"BlockEntityTag.Items\" , \"op\" : \"replace\" } ] } This example will copy the items from the block container at -30000000 0 1602 in the Overworld to the item stack.","title":"Examples"},{"boost":2,"location":"types/item_condition_types/block_item/","text":"Block Item Item Condition Type Checks whether the item is a block item (e.g: an item that can place blocks). Type ID: eggolib:block_item Fields None. Examples \"item_condition\" : { \"type\" : \"eggolib:block_item\" }","title":"Block Item (Item Condition Type)"},{"location":"types/item_condition_types/block_item/#block_item","text":"Item Condition Type Checks whether the item is a block item (e.g: an item that can place blocks). Type ID: eggolib:block_item","title":"Block Item"},{"location":"types/item_condition_types/block_item/#fields","text":"None.","title":"Fields"},{"location":"types/item_condition_types/block_item/#examples","text":"\"item_condition\" : { \"type\" : \"eggolib:block_item\" }","title":"Examples"},{"boost":2,"location":"types/item_condition_types/enchantment/","text":"Enchantment Item Condition Type Checks whether the item is enchanted. Type ID: eggolib:enchantment Fields Field Type Default Description enchantment Identifier optional If specified, the condition will check if the item has this specific enchantment. comparison Comparison \">=\" Determines how the level of the specified enchantment is compared to the specified value. If enchantment is not present, this will determine how the count of available enchantments in the item is compared to the specified value instead. compare_to Integer 1 The specified value to compare the level of the specified enchantment to. If enchantment is not present, this will be compared to the count of available enchantments in the item instead. Examples Example #1 Example #2 \"item_condition\" : { \"type\" : \"eggolib:enchantment\" , \"comparison\" : \">=\" , \"compare_to\" : 1 } This example will check if the item has one or more enchantments. \"item_condition\" : { \"type\" : \"eggolib:enchantment\" , \"enchantment\" : \"minecraft:mending\" , \"comparison\" : \"==\" , \"compare_to\" : 1 } This example will check if the item has the Mending I enchantment.","title":"Enchantment (Item Condition Type)"},{"location":"types/item_condition_types/enchantment/#enchantment","text":"Item Condition Type Checks whether the item is enchanted. Type ID: eggolib:enchantment","title":"Enchantment"},{"location":"types/item_condition_types/enchantment/#fields","text":"Field Type Default Description enchantment Identifier optional If specified, the condition will check if the item has this specific enchantment. comparison Comparison \">=\" Determines how the level of the specified enchantment is compared to the specified value. If enchantment is not present, this will determine how the count of available enchantments in the item is compared to the specified value instead. compare_to Integer 1 The specified value to compare the level of the specified enchantment to. If enchantment is not present, this will be compared to the count of available enchantments in the item instead.","title":"Fields"},{"location":"types/item_condition_types/enchantment/#examples","text":"Example #1 Example #2 \"item_condition\" : { \"type\" : \"eggolib:enchantment\" , \"comparison\" : \">=\" , \"compare_to\" : 1 } This example will check if the item has one or more enchantments. \"item_condition\" : { \"type\" : \"eggolib:enchantment\" , \"enchantment\" : \"minecraft:mending\" , \"comparison\" : \"==\" , \"compare_to\" : 1 } This example will check if the item has the Mending I enchantment.","title":"Examples"},{"boost":2,"location":"types/item_condition_types/fuel/","text":"Fuel Item Condition Type Checks whether the item stack is considered as fuel. Type ID: eggolib:fuel Note If the comparison or compare_to fields are not present, this item condition type will check if the item stack is considered as fuel. Fields Field Type Default Description comparison Comparison optional Determines how to compare the fuel time of the item stack to the specified value. compare_to Integer optional The value to compare the fuel time of the item stack to. Examples Example #1 Example #2 \"item_condition\" : { \"type\" : \"eggolib:fuel\" } This example will check if the item stack is considered as fuel. \"item_condition\" : { \"type\" : \"eggolib:fuel\" , \"comparison\" : \">=\" , \"compare_to\" : 100 } This example will check if the item stack is considered as fuel and if its fuel time is equal or greater than 100.","title":"Fuel (Item Condition Type)"},{"location":"types/item_condition_types/fuel/#fuel","text":"Item Condition Type Checks whether the item stack is considered as fuel. Type ID: eggolib:fuel Note If the comparison or compare_to fields are not present, this item condition type will check if the item stack is considered as fuel.","title":"Fuel"},{"location":"types/item_condition_types/fuel/#fields","text":"Field Type Default Description comparison Comparison optional Determines how to compare the fuel time of the item stack to the specified value. compare_to Integer optional The value to compare the fuel time of the item stack to.","title":"Fields"},{"location":"types/item_condition_types/fuel/#examples","text":"Example #1 Example #2 \"item_condition\" : { \"type\" : \"eggolib:fuel\" } This example will check if the item stack is considered as fuel. \"item_condition\" : { \"type\" : \"eggolib:fuel\" , \"comparison\" : \">=\" , \"compare_to\" : 100 } This example will check if the item stack is considered as fuel and if its fuel time is equal or greater than 100.","title":"Examples"},{"boost":2,"location":"types/item_condition_types/tool/","text":"Tool Item Condition Type Checks whether the item is a tool or if it's an instance of a certain tool type. Type ID: eggolib:tool Fields Field Type Default Description tool_type String optional If specified, the condition will evaluate to true if the item is an instance of this tool type. Accepts one of \"axe\" , \"hoe\" , \"pickaxe\" , \"shovel\" , \"sword\" and \"shears\" . tool_types Array of Strings optional If specified, the condition will evaluate to true if the item is an instance of one of these tool types. Accepts \"axe\" , \"hoe\" , \"pickaxe\" , \"shovel\" , \"sword\" and \"shears\" . Examples Example #1 Example #2 \"item_condition\" : { \"type\" : \"eggolib:tool\" , \"tool_type\" : \"sword\" } This example will check if the item is a Sword. \"item_condition\" : { \"type\" : \"eggolib:tool\" , \"tool_types\" : [ \"axe\" , \"pickaxe\" ] } This example will check if the item is either an Axe or a Pickaxe.","title":"Tool (Item Condition Type)"},{"location":"types/item_condition_types/tool/#tool","text":"Item Condition Type Checks whether the item is a tool or if it's an instance of a certain tool type. Type ID: eggolib:tool","title":"Tool"},{"location":"types/item_condition_types/tool/#fields","text":"Field Type Default Description tool_type String optional If specified, the condition will evaluate to true if the item is an instance of this tool type. Accepts one of \"axe\" , \"hoe\" , \"pickaxe\" , \"shovel\" , \"sword\" and \"shears\" . tool_types Array of Strings optional If specified, the condition will evaluate to true if the item is an instance of one of these tool types. Accepts \"axe\" , \"hoe\" , \"pickaxe\" , \"shovel\" , \"sword\" and \"shears\" .","title":"Fields"},{"location":"types/item_condition_types/tool/#examples","text":"Example #1 Example #2 \"item_condition\" : { \"type\" : \"eggolib:tool\" , \"tool_type\" : \"sword\" } This example will check if the item is a Sword. \"item_condition\" : { \"type\" : \"eggolib:tool\" , \"tool_types\" : [ \"axe\" , \"pickaxe\" ] } This example will check if the item is either an Axe or a Pickaxe.","title":"Examples"},{"boost":2,"location":"types/meta_action_types/loop/","text":"Loop Meta Action Type Executes an action for the specified amount of iterations. Type ID: eggolib:loop Fields Field Type Default Description before_action Action Type optional If specified, this action will be executed before the loop starts. action Action Type optional If specified, this action will be executed for each iteration of the loop. after_action Action Type optional If specified, this action will be executed after the loop ends. score Scoreboard optional If specified, this value will be used as the amount of iterations for the loop. value Integer optional If specified and if score is not specified, this value will be used as the amount of iterations for the loop. Examples Example #1 Example #2 Example #3 \"entity_action\" : { \"type\" : \"eggolib:loop\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say Hello!\" }, \"value\" : 3 } This example will make the entity that invoked the action say \"Hello!\" thrice. \"entity_action\" : { \"type\" : \"eggolib:loop\" , \"action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 2 }, \"score\" : { \"name\" : \"amountOfHeals\" , \"objective\" : \"example\" } } This example will heal the entity that invoked the action depending on the score of the amountOfHeals score holder in the example scoreboard objective. If it doesn't exist, the action will simply do nothing. \"entity_action\" : { \"type\" : \"eggolib:loop\" , \"before_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"tag @s add temp\" }, \"action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 2 }, \"after_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"tag @s remove temp\" }, \"score\" : { \"name\" : \"@e[tag = temp, limit = 1]\" , \"objective\" : \"example\" } } This example will heal the entity that invoked the action depending on the score of the said entity in the example scoreboard objective.","title":"Loop (Meta Action Type)"},{"location":"types/meta_action_types/loop/#loop","text":"Meta Action Type Executes an action for the specified amount of iterations. Type ID: eggolib:loop","title":"Loop"},{"location":"types/meta_action_types/loop/#fields","text":"Field Type Default Description before_action Action Type optional If specified, this action will be executed before the loop starts. action Action Type optional If specified, this action will be executed for each iteration of the loop. after_action Action Type optional If specified, this action will be executed after the loop ends. score Scoreboard optional If specified, this value will be used as the amount of iterations for the loop. value Integer optional If specified and if score is not specified, this value will be used as the amount of iterations for the loop.","title":"Fields"},{"location":"types/meta_action_types/loop/#examples","text":"Example #1 Example #2 Example #3 \"entity_action\" : { \"type\" : \"eggolib:loop\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say Hello!\" }, \"value\" : 3 } This example will make the entity that invoked the action say \"Hello!\" thrice. \"entity_action\" : { \"type\" : \"eggolib:loop\" , \"action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 2 }, \"score\" : { \"name\" : \"amountOfHeals\" , \"objective\" : \"example\" } } This example will heal the entity that invoked the action depending on the score of the amountOfHeals score holder in the example scoreboard objective. If it doesn't exist, the action will simply do nothing. \"entity_action\" : { \"type\" : \"eggolib:loop\" , \"before_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"tag @s add temp\" }, \"action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 2 }, \"after_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"tag @s remove temp\" }, \"score\" : { \"name\" : \"@e[tag = temp, limit = 1]\" , \"objective\" : \"example\" } } This example will heal the entity that invoked the action depending on the score of the said entity in the example scoreboard objective.","title":"Examples"},{"boost":2,"location":"types/meta_condition_types/chance/","text":"Chance Meta Condition Type Generates a random value ranging from 0.0 to 1.0 and checks if it's less than the specified value. Type ID: eggolib:chance Fields Field Type Default Description chance Float The value to compare the generated random value to. Examples Example #1 \"condition\" : { \"type\" : \"eggolib:chance\" , \"chance\" : 0.5 } This example will evaluate to true 50% of the time.","title":"Chance (Meta Condition Type)"},{"location":"types/meta_condition_types/chance/#chance","text":"Meta Condition Type Generates a random value ranging from 0.0 to 1.0 and checks if it's less than the specified value. Type ID: eggolib:chance","title":"Chance"},{"location":"types/meta_condition_types/chance/#fields","text":"Field Type Default Description chance Float The value to compare the generated random value to.","title":"Fields"},{"location":"types/meta_condition_types/chance/#examples","text":"Example #1 \"condition\" : { \"type\" : \"eggolib:chance\" , \"chance\" : 0.5 } This example will evaluate to true 50% of the time.","title":"Examples"},{"boost":2,"location":"types/power_types/action_on_block_place/","text":"Action on Block Place Power Type Executes an action upon placing a block. Type ID: eggolib:action_on_block_place Fields Field Type Default Description entity_action Entity Action Type optional If specified, this action will be executed on the player upon placing a block. held_item_action Item Action Type optional If specified, this action will be executed on the item the player has used to place a block. result_item_action Item Action Type optional If specified, this action will be executed on the item that will be given to the player upon placing a block. place_to_action Block Action Type optional If specified, this action will be executed at the position of the block the player has placed. place_on_action Block Action Type optional If specified, this action will be executed on the block the player placed a block on. item_condition Item Condition Type optional If specified, only execute the specified actions if the item the player has used to place a block fulfills this condition. place_to_condition Block Condition Type optional If specified, only execute the specified actions if the old block at the position of the new block the player has placed fulfills this condition. place_on_condition Block Condition Type optional If specified, only execute the specified actions if the block the player placed a block on fulfills this condition. directions Array of Strings [\"up\", \"down\", \"north\", \"south\", \"east\", \"west\"] Determines if the specified actions should be executed if the player has placed a block at the specified side(s) of a block. hands Array of Strings [\"main_hand\", \"off_hand\"] Determines if the specified actions should be executed if the player has attempted to place a block using the specified hand(s). result_stack Item Stack optional If specified, this item will be given to the player upon placing a block. Examples Example #1 Example #2 { \"type\" : \"eggolib:action_on_block_place\" , \"entity_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me placed a Dragon Egg!\" }, \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:dragon_egg\" } } } This example will announce to all players that the player that has the power has placed a Dragon Egg if the player in question did place a Dragon Egg. { \"type\" : \"eggolib:action_on_block_place\" , \"entity_action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 2 }, \"place_to_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:air\" }, \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"tag\" : \"minecraft:wool\" } }, \"place_on_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:diamond_block\" }, \"directions\" : [ \"up\" ] } This example will heal the player that has the power if the player in question places a Wool block on top of a Diamond Block.","title":"Action on Block Place (Power Type)"},{"location":"types/power_types/action_on_block_place/#action_on_block_place","text":"Power Type Executes an action upon placing a block. Type ID: eggolib:action_on_block_place","title":"Action on Block Place"},{"location":"types/power_types/action_on_block_place/#fields","text":"Field Type Default Description entity_action Entity Action Type optional If specified, this action will be executed on the player upon placing a block. held_item_action Item Action Type optional If specified, this action will be executed on the item the player has used to place a block. result_item_action Item Action Type optional If specified, this action will be executed on the item that will be given to the player upon placing a block. place_to_action Block Action Type optional If specified, this action will be executed at the position of the block the player has placed. place_on_action Block Action Type optional If specified, this action will be executed on the block the player placed a block on. item_condition Item Condition Type optional If specified, only execute the specified actions if the item the player has used to place a block fulfills this condition. place_to_condition Block Condition Type optional If specified, only execute the specified actions if the old block at the position of the new block the player has placed fulfills this condition. place_on_condition Block Condition Type optional If specified, only execute the specified actions if the block the player placed a block on fulfills this condition. directions Array of Strings [\"up\", \"down\", \"north\", \"south\", \"east\", \"west\"] Determines if the specified actions should be executed if the player has placed a block at the specified side(s) of a block. hands Array of Strings [\"main_hand\", \"off_hand\"] Determines if the specified actions should be executed if the player has attempted to place a block using the specified hand(s). result_stack Item Stack optional If specified, this item will be given to the player upon placing a block.","title":"Fields"},{"location":"types/power_types/action_on_block_place/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:action_on_block_place\" , \"entity_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me placed a Dragon Egg!\" }, \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:dragon_egg\" } } } This example will announce to all players that the player that has the power has placed a Dragon Egg if the player in question did place a Dragon Egg. { \"type\" : \"eggolib:action_on_block_place\" , \"entity_action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 2 }, \"place_to_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:air\" }, \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"tag\" : \"minecraft:wool\" } }, \"place_on_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:diamond_block\" }, \"directions\" : [ \"up\" ] } This example will heal the player that has the power if the player in question places a Wool block on top of a Diamond Block.","title":"Examples"},{"boost":2,"location":"types/power_types/action_on_critical_hit/","text":"Action on Critical Hit Power Type Executes an action upon dealing a critical hit. Type ID: eggolib:action_on_critical_hit Note In the context of this power type, the 'actor' will be the entity that dealt the critical hit while the 'target' will be the entity that was hit. Fields Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the 'actor' and the 'target' upon the 'actor' dealing a critical hit. bientity_condition Bi-entity Condition Type optional If specified, the action will only be executed if this condition is fulfilled by either or both the 'actor' and the 'target'. damage_condition Damage Condition optional If specified, the action will only be executed if this condition is fulfilled by the damage dealt by the 'actor'. priority Integer 0 Determines the priority of the power. Powers will higher priority value will be triggered first. Examples Example #1 { \"type\" : \"eggolib:action_on_critical_hit\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say Ouch!!!\" } } } This example will execute a /say Ouch!!! command as the 'target' upon the 'actor' dealing a critical hit on the 'target'.","title":"Action on Critical Hit (Power Type)"},{"location":"types/power_types/action_on_critical_hit/#action_on_critical_hit","text":"Power Type Executes an action upon dealing a critical hit. Type ID: eggolib:action_on_critical_hit Note In the context of this power type, the 'actor' will be the entity that dealt the critical hit while the 'target' will be the entity that was hit.","title":"Action on Critical Hit"},{"location":"types/power_types/action_on_critical_hit/#fields","text":"Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the 'actor' and the 'target' upon the 'actor' dealing a critical hit. bientity_condition Bi-entity Condition Type optional If specified, the action will only be executed if this condition is fulfilled by either or both the 'actor' and the 'target'. damage_condition Damage Condition optional If specified, the action will only be executed if this condition is fulfilled by the damage dealt by the 'actor'. priority Integer 0 Determines the priority of the power. Powers will higher priority value will be triggered first.","title":"Fields"},{"location":"types/power_types/action_on_critical_hit/#examples","text":"Example #1 { \"type\" : \"eggolib:action_on_critical_hit\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say Ouch!!!\" } } } This example will execute a /say Ouch!!! command as the 'target' upon the 'actor' dealing a critical hit on the 'target'.","title":"Examples"},{"boost":2,"location":"types/power_types/action_on_item_pickup/","text":"Action on Item Pickup Power Type Executes an action upon picking up an item. Type ID: eggolib:action_on_item_pickup Note In the context of this power type, the ' actor ' entity is the entity that may have thrown the item while the ' target ' entity is the entity that picked up the item. Fields Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the ' actor ' and ' target ' entities. item_action Item Action Type optional If specified, this action will be executed on the item that was picked up. bientity_condition Bi-entity Condition Type optional If specified, the actions will only be executed if this condition is fulfilled by either or both the ' actor ' and ' target ' entities. item_condition Item Condition Type optional If specified, the actions will only be executed if this condition is fulfilled by the item about to be picked up. Examples Example #1 Example #2 Example #3 { \"type\" : \"eggolib:action_on_item_pickup\" , \"bientity_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me has picked up an item!\" } } This example will notify all players that the entity that has the power has picked up an item. { \"type\" : \"eggolib:action_on_item_pickup\" , \"item_action\" : { \"type\" : \"apoli:merge_nbt\" , \"nbt\" : \"{Enchantments: [{id: \\\"minecraft:vanishing_curse\\\", lvl: 1s}]}\" }, \"item_condition\" : { \"type\" : \"eggolib:tool\" , \"tool_types\" : [ \"pickaxe\" , \"axe\" , \"shovel\" , \"hoe\" ] } } This example will enchant the pickaxe, axe, shovel and hoe tool items with Curse of Vanishing I upon being picked up by the entity that has the power. { \"type\" : \"eggolib:action_on_item_pickup\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me has picked up someone else's item!\" } }, \"bientity_condition\" : { \"type\" : \"apoli:actor_condition\" , \"condition\" : { \"type\" : \"apoli:exists\" } } } This example will notify all players that the entity that has the power has picked up an item thrown by another entity.","title":"Action on Item Pickup (Power Type)"},{"location":"types/power_types/action_on_item_pickup/#action_on_item_pickup","text":"Power Type Executes an action upon picking up an item. Type ID: eggolib:action_on_item_pickup Note In the context of this power type, the ' actor ' entity is the entity that may have thrown the item while the ' target ' entity is the entity that picked up the item.","title":"Action on Item Pickup"},{"location":"types/power_types/action_on_item_pickup/#fields","text":"Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the ' actor ' and ' target ' entities. item_action Item Action Type optional If specified, this action will be executed on the item that was picked up. bientity_condition Bi-entity Condition Type optional If specified, the actions will only be executed if this condition is fulfilled by either or both the ' actor ' and ' target ' entities. item_condition Item Condition Type optional If specified, the actions will only be executed if this condition is fulfilled by the item about to be picked up.","title":"Fields"},{"location":"types/power_types/action_on_item_pickup/#examples","text":"Example #1 Example #2 Example #3 { \"type\" : \"eggolib:action_on_item_pickup\" , \"bientity_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me has picked up an item!\" } } This example will notify all players that the entity that has the power has picked up an item. { \"type\" : \"eggolib:action_on_item_pickup\" , \"item_action\" : { \"type\" : \"apoli:merge_nbt\" , \"nbt\" : \"{Enchantments: [{id: \\\"minecraft:vanishing_curse\\\", lvl: 1s}]}\" }, \"item_condition\" : { \"type\" : \"eggolib:tool\" , \"tool_types\" : [ \"pickaxe\" , \"axe\" , \"shovel\" , \"hoe\" ] } } This example will enchant the pickaxe, axe, shovel and hoe tool items with Curse of Vanishing I upon being picked up by the entity that has the power. { \"type\" : \"eggolib:action_on_item_pickup\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me has picked up someone else's item!\" } }, \"bientity_condition\" : { \"type\" : \"apoli:actor_condition\" , \"condition\" : { \"type\" : \"apoli:exists\" } } } This example will notify all players that the entity that has the power has picked up an item thrown by another entity.","title":"Examples"},{"boost":2,"location":"types/power_types/action_on_key_sequence/","text":"Action on Key Sequence Power Type Executes an action upon pressing certain keybinds in a certain sequence. Type ID: eggolib:action_on_key_sequence Fields Field Type Default Description success_action Entity Action Type optional If specified, this action will be executed if the player succeeded to press the specified keybinds in the specified sequence. fail_action Entity Action Type optional If specified, this action will be executed if the player failed to press the specified keybinds in the specified sequence. cooldown Integer 0 Interval of ticks this power needs to recharge before the power can be triggered again. hud_render HUD Render {\"should_render\": false} Determines how the cooldown for this power is visualized on the HUD. keys Array of Functional Keys Determines the keys to be used for completing the sequence. key_sequence Array of Keys Determines the sequence to be completed by the player. Examples Example #1 Example #2 { \"type\" : \"eggolib:action_on_key_sequence\" , \"success_action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 4 }, \"cooldown\" : 100 , \"hud_render\" : { \"should_render\" : true }, \"keys\" : [ { \"key\" : \"key.jump\" , \"continuous\" : false , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me jumped!\" } }, \"key.attack\" , \"key.use\" ], \"key_sequence\" : [ \"key.attack\" , \"key.attack\" , \"key.jump\" ] } This example will heal the player with 4 health points (or 2 hearts) upon the player pressing the key.attack and key.jump keybinds in a key.attack -> key.attack -> key.jump sequence. { \"type\" : \"eggolib:action_on_key_sequence\" , \"success_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me casted 'KONAMI CODE'!\" }, \"fail_action\" : { \"type\" : \"apoli:damage\" , \"source\" : { \"name\" : \"generic\" }, \"amount\" : 10 }, \"cooldown\" : 200 , \"hud_render\" : { \"should_render\" : true }, \"keys\" : [ { \"key\" : \"key.jump\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say UP\" } }, { \"key\" : \"key.sneak\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say DOWN\" } }, { \"key\" : \"key.left\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say LEFT\" } }, { \"key\" : \"key.right\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say RIGHT\" } }, { \"key\" : \"key.attack\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say A (Attack)\" } }, { \"key\" : \"key.use\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say B (Use)\" } } ], \"key_sequence\" : [ \"key.jump\" , \"key.jump\" , \"key.sneak\" , \"key.sneak\" , \"key.left\" , \"key.right\" , \"key.left\" , \"key.right\" , \"key.use\" , \"key.attack\" ] } This example will notify all players that the player that has the power has \"casted 'KONAMI CODE'!\" if the player in question has pressed the key.jump , key.sneak , key.left , key.right , key.attack and key.use keybinds in the classic KONAMI CODE sequence. (UP ( key.jump ) -> UP ( key.jump ) -> DOWN ( key.sneak ) -> DOWN ( key.sneak ) -> LEFT ( key.left ) -> RIGHT ( key.right ) -> LEFT ( key.left ) -> RIGHT ( key.right ) -> B ( key.use ) -> A ( key.attack ))","title":"Action on Key Sequence (Power Type)"},{"location":"types/power_types/action_on_key_sequence/#action_on_key_sequence","text":"Power Type Executes an action upon pressing certain keybinds in a certain sequence. Type ID: eggolib:action_on_key_sequence","title":"Action on Key Sequence"},{"location":"types/power_types/action_on_key_sequence/#fields","text":"Field Type Default Description success_action Entity Action Type optional If specified, this action will be executed if the player succeeded to press the specified keybinds in the specified sequence. fail_action Entity Action Type optional If specified, this action will be executed if the player failed to press the specified keybinds in the specified sequence. cooldown Integer 0 Interval of ticks this power needs to recharge before the power can be triggered again. hud_render HUD Render {\"should_render\": false} Determines how the cooldown for this power is visualized on the HUD. keys Array of Functional Keys Determines the keys to be used for completing the sequence. key_sequence Array of Keys Determines the sequence to be completed by the player.","title":"Fields"},{"location":"types/power_types/action_on_key_sequence/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:action_on_key_sequence\" , \"success_action\" : { \"type\" : \"apoli:heal\" , \"amount\" : 4 }, \"cooldown\" : 100 , \"hud_render\" : { \"should_render\" : true }, \"keys\" : [ { \"key\" : \"key.jump\" , \"continuous\" : false , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me jumped!\" } }, \"key.attack\" , \"key.use\" ], \"key_sequence\" : [ \"key.attack\" , \"key.attack\" , \"key.jump\" ] } This example will heal the player with 4 health points (or 2 hearts) upon the player pressing the key.attack and key.jump keybinds in a key.attack -> key.attack -> key.jump sequence. { \"type\" : \"eggolib:action_on_key_sequence\" , \"success_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"me casted 'KONAMI CODE'!\" }, \"fail_action\" : { \"type\" : \"apoli:damage\" , \"source\" : { \"name\" : \"generic\" }, \"amount\" : 10 }, \"cooldown\" : 200 , \"hud_render\" : { \"should_render\" : true }, \"keys\" : [ { \"key\" : \"key.jump\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say UP\" } }, { \"key\" : \"key.sneak\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say DOWN\" } }, { \"key\" : \"key.left\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say LEFT\" } }, { \"key\" : \"key.right\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say RIGHT\" } }, { \"key\" : \"key.attack\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say A (Attack)\" } }, { \"key\" : \"key.use\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"say B (Use)\" } } ], \"key_sequence\" : [ \"key.jump\" , \"key.jump\" , \"key.sneak\" , \"key.sneak\" , \"key.left\" , \"key.right\" , \"key.left\" , \"key.right\" , \"key.use\" , \"key.attack\" ] } This example will notify all players that the player that has the power has \"casted 'KONAMI CODE'!\" if the player in question has pressed the key.jump , key.sneak , key.left , key.right , key.attack and key.use keybinds in the classic KONAMI CODE sequence. (UP ( key.jump ) -> UP ( key.jump ) -> DOWN ( key.sneak ) -> DOWN ( key.sneak ) -> LEFT ( key.left ) -> RIGHT ( key.right ) -> LEFT ( key.left ) -> RIGHT ( key.right ) -> B ( key.use ) -> A ( key.attack ))","title":"Examples"},{"boost":2,"location":"types/power_types/crawling/","text":"Crawling Power Type Makes the entity that has the power crawl. Type ID: eggolib:crawling Fields None. Examples { \"type\" : \"eggolib:crawling\" }","title":"Crawling (Power Type)"},{"location":"types/power_types/crawling/#crawling","text":"Power Type Makes the entity that has the power crawl. Type ID: eggolib:crawling","title":"Crawling"},{"location":"types/power_types/crawling/#fields","text":"None.","title":"Fields"},{"location":"types/power_types/crawling/#examples","text":"{ \"type\" : \"eggolib:crawling\" }","title":"Examples"},{"boost":2,"location":"types/power_types/game_event_listener/","text":"Game Event Listener Power Type Executes an action upon listening to certain game events or vibrations. Type ID: eggolib:game_event_listener Note See Minecraft Fandom: Sculk Sensor (Vibration amplitudes) for a list of vanilla game events you can use. Note In the context of this power, the 'actor' will be the entity that emitted the game event whilst the 'target' will be the entity that has the power. Fields Field Type Default Description block_action Block Action Type optional If specified, this action will be executed at the position where the game event was emitted. bientity_action Bi-Entity Condition Type optional If specified, this action will be executed on either or both the 'actor' and the 'target' upon listening to certain game event(s). block_condition Block Condition Type optional If specified, the power will only listen to the game event if the block that emitted it fulfills this condition. bientity_condition Bi-Entity Condition Type optional If specified, the power will only listen to the game event if either or both the 'actor' that emitted it and the 'target' fulfill this condition. cooldown Positive Integer 1 Interval of ticks the power needes to recharge before the power can be triggered again. hud_render HUD Render optional If specified, determines how the cooldown of the power is visualized in the HUD. range Positive Integer 16 Determines how far the power can listen for game events. event Identifier optional If specified, the power will only listen to this game event. events Array of Identifiers optional If specified, the power will only listen to these game events. tag Identifier optional If specified, the power will only listen to the game events included in this game event tag. show_particle Boolean true Determines whether the vibration particle is spawned when a game event is accepted. Examples Example #1 Example #2 Example #3 { \"type\" : \"eggolib:game_event_listener\" , \"block_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:stone\" }, \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:bell\" }, \"range\" : 32 } This example will replace Bells that emits a vibration within a 32 blocks radius with Stone. { \"type\" : \"eggolib:game_event_listener\" , \"bientity_action\" : { \"type\" : \"apoli:invert\" , \"action\" : { \"type\" : \"eggolib:damage\" , \"source\" : { \"name\" : \"player\" }, \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : 0.25 } } }, \"bientity_condition\" : { \"type\" : \"apoli:actor_condition\" , \"condition\" : { \"type\" : \"apoli:entity_type\" , \"entity_type\" : \"minecraft:creeper\" } }, \"event\" : \"minecraft:step\" } This example will damage Creepers emitting a minecraft:step vibration (via walking) within a 16 blocks radius. { \"type\" : \"eggolib:game_event_listener\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:apply_effect\" , \"effect\" : { \"effect\" : \"minecraft:darkness\" , \"amplifier\" : 1 , \"duration\" : 100 } } }, \"bientity_condition\" : { \"type\" : \"apoli:and\" , \"conditions\" : [ { \"type\" : \"apoli:target_condition\" , \"condition\" : { \"type\" : \"apoli:exists\" } }, { \"type\" : \"eggolib:equal\" , \"inverted\" : true } ] }, \"show_particle\" : false } This example will apply the Darkness II (00:05) status effect to entities (except the entity that has the power) within a 16 blocks radius without showing the Vibration particle.","title":"Game Event Listener (Power Type)"},{"location":"types/power_types/game_event_listener/#game_event_listener","text":"Power Type Executes an action upon listening to certain game events or vibrations. Type ID: eggolib:game_event_listener Note See Minecraft Fandom: Sculk Sensor (Vibration amplitudes) for a list of vanilla game events you can use. Note In the context of this power, the 'actor' will be the entity that emitted the game event whilst the 'target' will be the entity that has the power.","title":"Game Event Listener"},{"location":"types/power_types/game_event_listener/#fields","text":"Field Type Default Description block_action Block Action Type optional If specified, this action will be executed at the position where the game event was emitted. bientity_action Bi-Entity Condition Type optional If specified, this action will be executed on either or both the 'actor' and the 'target' upon listening to certain game event(s). block_condition Block Condition Type optional If specified, the power will only listen to the game event if the block that emitted it fulfills this condition. bientity_condition Bi-Entity Condition Type optional If specified, the power will only listen to the game event if either or both the 'actor' that emitted it and the 'target' fulfill this condition. cooldown Positive Integer 1 Interval of ticks the power needes to recharge before the power can be triggered again. hud_render HUD Render optional If specified, determines how the cooldown of the power is visualized in the HUD. range Positive Integer 16 Determines how far the power can listen for game events. event Identifier optional If specified, the power will only listen to this game event. events Array of Identifiers optional If specified, the power will only listen to these game events. tag Identifier optional If specified, the power will only listen to the game events included in this game event tag. show_particle Boolean true Determines whether the vibration particle is spawned when a game event is accepted.","title":"Fields"},{"location":"types/power_types/game_event_listener/#examples","text":"Example #1 Example #2 Example #3 { \"type\" : \"eggolib:game_event_listener\" , \"block_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:stone\" }, \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:bell\" }, \"range\" : 32 } This example will replace Bells that emits a vibration within a 32 blocks radius with Stone. { \"type\" : \"eggolib:game_event_listener\" , \"bientity_action\" : { \"type\" : \"apoli:invert\" , \"action\" : { \"type\" : \"eggolib:damage\" , \"source\" : { \"name\" : \"player\" }, \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : 0.25 } } }, \"bientity_condition\" : { \"type\" : \"apoli:actor_condition\" , \"condition\" : { \"type\" : \"apoli:entity_type\" , \"entity_type\" : \"minecraft:creeper\" } }, \"event\" : \"minecraft:step\" } This example will damage Creepers emitting a minecraft:step vibration (via walking) within a 16 blocks radius. { \"type\" : \"eggolib:game_event_listener\" , \"bientity_action\" : { \"type\" : \"apoli:target_action\" , \"action\" : { \"type\" : \"apoli:apply_effect\" , \"effect\" : { \"effect\" : \"minecraft:darkness\" , \"amplifier\" : 1 , \"duration\" : 100 } } }, \"bientity_condition\" : { \"type\" : \"apoli:and\" , \"conditions\" : [ { \"type\" : \"apoli:target_condition\" , \"condition\" : { \"type\" : \"apoli:exists\" } }, { \"type\" : \"eggolib:equal\" , \"inverted\" : true } ] }, \"show_particle\" : false } This example will apply the Darkness II (00:05) status effect to entities (except the entity that has the power) within a 16 blocks radius without showing the Vibration particle.","title":"Examples"},{"boost":2,"location":"types/power_types/inventory/","text":"Inventory Power Type Provides an inventory that can be opened with the specified key, which may or may not persist on death. Type ID: eggolib:inventory Fields Field Type Default Description title String \"container.inventory\" The translation key or literal text to use as the display name for the inventory. container_type Container Type \"dropper\" Determines what type of container preset the inventory will use. drop_on_death Boolean false If set to true, the player will drop the items from the inventory on death. Items with the Curse of Vanishing enchantment will also vanish. drop_on_death_filter Item Condition Type optional If specified, only the item stack(s) that fulfill this condition will be dropped on death. recoverable Boolean true Determines if the contents of the inventory should be dropped upon losing the power. key Key optional The keybind this power is bound to. Examples Example #1 Example #2 { \"type\" : \"eggolib:inventory\" , \"container_type\" : \"chest\" , \"key\" : { \"key\" : \"key.hotbar.9\" } } This example will provide an inventory with a size similar to a single Chest that can be opened with the key.hotbar.9 keybind. { \"type\" : \"eggolib:inventory\" , \"title\" : \"Pockets\" , \"container_type\" : \"hopper\" , \"key\" : { \"key\" : \"key.use\" }, \"condition\" : { \"type\" : \"apoli:and\" , \"conditions\" : [ { \"type\" : \"apoli:equipped_item\" , \"equipment_slot\" : \"mainhand\" , \"item_condition\" : { \"type\" : \"apoli:empty\" } }, { \"type\" : \"apoli:equipped_item\" , \"equipment_slot\" : \"offhand\" , \"item_condition\" : { \"type\" : \"apoli:empty\" } } ] } } This example will provide an inventory with a size similar to a Hopper that can be opened using the key.use keybind while holding no items in the mainhand and the offhand.","title":"Inventory (Power Type)"},{"location":"types/power_types/inventory/#inventory","text":"Power Type Provides an inventory that can be opened with the specified key, which may or may not persist on death. Type ID: eggolib:inventory","title":"Inventory"},{"location":"types/power_types/inventory/#fields","text":"Field Type Default Description title String \"container.inventory\" The translation key or literal text to use as the display name for the inventory. container_type Container Type \"dropper\" Determines what type of container preset the inventory will use. drop_on_death Boolean false If set to true, the player will drop the items from the inventory on death. Items with the Curse of Vanishing enchantment will also vanish. drop_on_death_filter Item Condition Type optional If specified, only the item stack(s) that fulfill this condition will be dropped on death. recoverable Boolean true Determines if the contents of the inventory should be dropped upon losing the power. key Key optional The keybind this power is bound to.","title":"Fields"},{"location":"types/power_types/inventory/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:inventory\" , \"container_type\" : \"chest\" , \"key\" : { \"key\" : \"key.hotbar.9\" } } This example will provide an inventory with a size similar to a single Chest that can be opened with the key.hotbar.9 keybind. { \"type\" : \"eggolib:inventory\" , \"title\" : \"Pockets\" , \"container_type\" : \"hopper\" , \"key\" : { \"key\" : \"key.use\" }, \"condition\" : { \"type\" : \"apoli:and\" , \"conditions\" : [ { \"type\" : \"apoli:equipped_item\" , \"equipment_slot\" : \"mainhand\" , \"item_condition\" : { \"type\" : \"apoli:empty\" } }, { \"type\" : \"apoli:equipped_item\" , \"equipment_slot\" : \"offhand\" , \"item_condition\" : { \"type\" : \"apoli:empty\" } } ] } } This example will provide an inventory with a size similar to a Hopper that can be opened using the key.use keybind while holding no items in the mainhand and the offhand.","title":"Examples"},{"boost":2,"location":"types/power_types/invisibility/","text":"Invisibility Power Type Grants the entity that has the power invisibility, which may or may not affect their armor. Type ID: eggolib:invisibility Note In the context of this power type, the ' target ' entity is the entity that has the power whilst the ' actor ' entities are the players that can see the ' target ' entity. Fields Field Type Default Description bientity_condition Bi-entity Condition Type optional If specified, the ' target ' entity will only be invisible to the ' actor ' entities if this condition is fulfilled by either or both ' actor ' and ' target ' entities. render_armor Boolean false Determines if the armor should also be invisible. render_outline Boolean false Determines if the glowing outline should also be invisible. Examples Example #1 Example #2 { \"type\" : \"eggolib:invisibility\" , \"render_armor\" : false } This example will make the entity that has the power invisible to all entities. { \"type\" : \"eggolib:invisibility\" , \"bientity_condition\" : { \"type\" : \"apoli:actor_condition\" , \"condition\" : { \"type\" : \"apoli:power\" , \"power\" : \"*:*\" }, \"inverted\" : true }, \"render_armor\" : false } This example will make the entity that has the power invisible to entities. The entity will also be invisible to players that do not have the power.","title":"Invisibility (Power Type)"},{"location":"types/power_types/invisibility/#invisibility","text":"Power Type Grants the entity that has the power invisibility, which may or may not affect their armor. Type ID: eggolib:invisibility Note In the context of this power type, the ' target ' entity is the entity that has the power whilst the ' actor ' entities are the players that can see the ' target ' entity.","title":"Invisibility"},{"location":"types/power_types/invisibility/#fields","text":"Field Type Default Description bientity_condition Bi-entity Condition Type optional If specified, the ' target ' entity will only be invisible to the ' actor ' entities if this condition is fulfilled by either or both ' actor ' and ' target ' entities. render_armor Boolean false Determines if the armor should also be invisible. render_outline Boolean false Determines if the glowing outline should also be invisible.","title":"Fields"},{"location":"types/power_types/invisibility/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:invisibility\" , \"render_armor\" : false } This example will make the entity that has the power invisible to all entities. { \"type\" : \"eggolib:invisibility\" , \"bientity_condition\" : { \"type\" : \"apoli:actor_condition\" , \"condition\" : { \"type\" : \"apoli:power\" , \"power\" : \"*:*\" }, \"inverted\" : true }, \"render_armor\" : false } This example will make the entity that has the power invisible to entities. The entity will also be invisible to players that do not have the power.","title":"Examples"},{"boost":2,"location":"types/power_types/model_flip/","text":"Model Flip Power Type Flips the model of the entity, similar to how Dinnerbone's model is flipped. Type ID: eggolib:model_flip Fields None. Examples Example #1 Example #2 { \"type\" : \"eggolib:model_flip\" } This example will flip the model of the entity that has the power. { \"type\" : \"eggolib:model_flip\" , \"condition\" : { \"type\" : \"apoli:sneaking\" } } This example will flip the model of the entity that has the power if the entity is sneaking.","title":"Model Flip (Power Type)"},{"location":"types/power_types/model_flip/#model_flip","text":"Power Type Flips the model of the entity, similar to how Dinnerbone's model is flipped. Type ID: eggolib:model_flip","title":"Model Flip"},{"location":"types/power_types/model_flip/#fields","text":"None.","title":"Fields"},{"location":"types/power_types/model_flip/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:model_flip\" } This example will flip the model of the entity that has the power. { \"type\" : \"eggolib:model_flip\" , \"condition\" : { \"type\" : \"apoli:sneaking\" } } This example will flip the model of the entity that has the power if the entity is sneaking.","title":"Examples"},{"boost":2,"location":"types/power_types/modify_bounciness/","text":"Modify Bounciness Power Type Modifies the bounciness of the block the entity has landed on. Type ID: eggolib:modify_bounciness Note The base value for reducing the velocity of the entity upon bouncing is 0.8, which is later inverted to negative. Fields Field Type Default Description entity_action Entity Action Type optional If specified, this action will be executed on the entity upon bouncing. block_action Block Action Type optional If specified, this action will be executed on the block the entity landed on. block_condition Block Condition Type optional If specified, only blocks that fulfill this condition will have its bounciness modified. modifier Attribute Modifier optional If specified, this modifier will be applied on the value used for reducing the velocity of the entity upon bouncing. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied on the value used for reducing the velocity of the entity upon bouncing. Examples Example #1 Example #2 { \"type\" : \"eggolib:modify_bounciness\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:sponge\" } } This example will make Sponge blocks bouncy like Slime blocks. { \"type\" : \"eggolib:modify_bounciness\" , \"block_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:sand\" }, \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:gravel\" } } This example will make Gravel blocks bouncy like Slime blocks, while also replacing the Gravel block the entity has landed on with a Sand block.","title":"Modify Bounciness (Power Type)"},{"location":"types/power_types/modify_bounciness/#modify_bounciness","text":"Power Type Modifies the bounciness of the block the entity has landed on. Type ID: eggolib:modify_bounciness Note The base value for reducing the velocity of the entity upon bouncing is 0.8, which is later inverted to negative.","title":"Modify Bounciness"},{"location":"types/power_types/modify_bounciness/#fields","text":"Field Type Default Description entity_action Entity Action Type optional If specified, this action will be executed on the entity upon bouncing. block_action Block Action Type optional If specified, this action will be executed on the block the entity landed on. block_condition Block Condition Type optional If specified, only blocks that fulfill this condition will have its bounciness modified. modifier Attribute Modifier optional If specified, this modifier will be applied on the value used for reducing the velocity of the entity upon bouncing. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied on the value used for reducing the velocity of the entity upon bouncing.","title":"Fields"},{"location":"types/power_types/modify_bounciness/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:modify_bounciness\" , \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:sponge\" } } This example will make Sponge blocks bouncy like Slime blocks. { \"type\" : \"eggolib:modify_bounciness\" , \"block_action\" : { \"type\" : \"apoli:set_block\" , \"block\" : \"minecraft:sand\" }, \"block_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:gravel\" } } This example will make Gravel blocks bouncy like Slime blocks, while also replacing the Gravel block the entity has landed on with a Sand block.","title":"Examples"},{"boost":2,"location":"types/power_types/modify_breathing/","text":"Modify Breathing Power Type Modifies how the entity that has the power breathes. Type ID: eggolib:modify_breathing Note The base values for gaining and losing air is 4 and 1 respectively. Fields Field Type Default Description breathable_block_condition Block Condition Type Determines which block the entity will be able to breathe in. breathing_status_effect Identifier optional If specified, the entity will be able to maintain their breath if they have this status effect. breathing_status_effects Array of Identifiers optional If specified, the entity will be able to maintain their breath if they have one of these status effects. gain_air_modifier Attribute Modifier optional If specified, this modifier will be applied to the air gained by breathing in a breathable block. gain_air_modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the air gained by breathing in a breathable block. gain_air_interval Positive Integer 1 Determines how frequent should the entity gain air. lose_air_modifier Attribute Modifier optional If specified, this modifier will be applied to the air lost by not breathing in a breathable block. lose_air_modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the air lost by not breathing in a breathable block. lose_air_interval Positive Integer 1 Determines how frequent should the entity lose air. damage_source Damage Source optional If specified, this damage source will be used instead when dealing damage to the entity upon not being able to breathe. damage_modifier Attribute Modifier optional If specified, this modifier will be applied to the damage dealt to the entity upon not being able to breathe. damage_modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the damage dealt to the entity upon not being able to breathe. damage_interval Positive Integer 20 Determines how frequent the damage should be dealt to the entity upon not being able to breathe. particle Particle Effect optional If specified, this particle will be emitted instead upon being damaged for not being able to breathe. ignore_respiration Boolean false Determines whether the power should ignore the effects of the Respiration enchantment. priority Integer 0 Determines the priority of the power. The power with the highest priority value will be used. Examples Example #1 Example #2 { \"type\" : \"eggolib:modify_breathing\" , \"breathable_block_condition\" : { \"type\" : \"apoli:fluid\" , \"fluid_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:lava\" } } } This example will make the entity only be able to breathe in Lava. { \"type\" : \"eggolib:modify_breathing\" , \"breathable_block_condition\" : { \"type\" : \"apoli:fluid\" , \"fluid_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:water\" } }, \"breathing_status_effect\" : \"minecraft:water_breathing\" , \"lose_air_modifier\" : { \"operation\" : \"addition\" , \"value\" : 3 } } This example will make the entity only be able to breathe in Water unless they have the Water Breathing status effect, which they can use to breathe on land.","title":"Modify Breathing (Power Type)"},{"location":"types/power_types/modify_breathing/#modify_breathing","text":"Power Type Modifies how the entity that has the power breathes. Type ID: eggolib:modify_breathing Note The base values for gaining and losing air is 4 and 1 respectively.","title":"Modify Breathing"},{"location":"types/power_types/modify_breathing/#fields","text":"Field Type Default Description breathable_block_condition Block Condition Type Determines which block the entity will be able to breathe in. breathing_status_effect Identifier optional If specified, the entity will be able to maintain their breath if they have this status effect. breathing_status_effects Array of Identifiers optional If specified, the entity will be able to maintain their breath if they have one of these status effects. gain_air_modifier Attribute Modifier optional If specified, this modifier will be applied to the air gained by breathing in a breathable block. gain_air_modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the air gained by breathing in a breathable block. gain_air_interval Positive Integer 1 Determines how frequent should the entity gain air. lose_air_modifier Attribute Modifier optional If specified, this modifier will be applied to the air lost by not breathing in a breathable block. lose_air_modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the air lost by not breathing in a breathable block. lose_air_interval Positive Integer 1 Determines how frequent should the entity lose air. damage_source Damage Source optional If specified, this damage source will be used instead when dealing damage to the entity upon not being able to breathe. damage_modifier Attribute Modifier optional If specified, this modifier will be applied to the damage dealt to the entity upon not being able to breathe. damage_modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the damage dealt to the entity upon not being able to breathe. damage_interval Positive Integer 20 Determines how frequent the damage should be dealt to the entity upon not being able to breathe. particle Particle Effect optional If specified, this particle will be emitted instead upon being damaged for not being able to breathe. ignore_respiration Boolean false Determines whether the power should ignore the effects of the Respiration enchantment. priority Integer 0 Determines the priority of the power. The power with the highest priority value will be used.","title":"Fields"},{"location":"types/power_types/modify_breathing/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:modify_breathing\" , \"breathable_block_condition\" : { \"type\" : \"apoli:fluid\" , \"fluid_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:lava\" } } } This example will make the entity only be able to breathe in Lava. { \"type\" : \"eggolib:modify_breathing\" , \"breathable_block_condition\" : { \"type\" : \"apoli:fluid\" , \"fluid_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:water\" } }, \"breathing_status_effect\" : \"minecraft:water_breathing\" , \"lose_air_modifier\" : { \"operation\" : \"addition\" , \"value\" : 3 } } This example will make the entity only be able to breathe in Water unless they have the Water Breathing status effect, which they can use to breathe on land.","title":"Examples"},{"boost":2,"location":"types/power_types/modify_fov/","text":"Modify FOV Power Type Modifies the field of view of the entity that has the power. Type ID: eggolib:modify_fov Fields Field Type Default Description modifier Attribute Modifier optional If specified, this modifier will be applied to the field of view of the entity that has the power. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the field of view of the entity that has the power. affected_by_fov_effect_scale Boolean true Determines whether the field of view is affected by the \"FOV Effects\" accessibility option. Examples Example #1 Example #2 { \"type\" : \"eggolib:modify_fov\" , \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : -0.25 } } This example will reduce the field of view of the entity by 25%. { \"type\" : \"eggolib:modify_fov\" , \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : 0.75 }, \"affected_by_fov_effects_scale\" : false } This example will increase the field of view of the entity by 75%, which also won't be affected by the \"FOV Effects\" accessibility option.","title":"Modify FOV (Power Type)"},{"location":"types/power_types/modify_fov/#modify_fov","text":"Power Type Modifies the field of view of the entity that has the power. Type ID: eggolib:modify_fov","title":"Modify FOV"},{"location":"types/power_types/modify_fov/#fields","text":"Field Type Default Description modifier Attribute Modifier optional If specified, this modifier will be applied to the field of view of the entity that has the power. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the field of view of the entity that has the power. affected_by_fov_effect_scale Boolean true Determines whether the field of view is affected by the \"FOV Effects\" accessibility option.","title":"Fields"},{"location":"types/power_types/modify_fov/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:modify_fov\" , \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : -0.25 } } This example will reduce the field of view of the entity by 25%. { \"type\" : \"eggolib:modify_fov\" , \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : 0.75 }, \"affected_by_fov_effects_scale\" : false } This example will increase the field of view of the entity by 75%, which also won't be affected by the \"FOV Effects\" accessibility option.","title":"Examples"},{"boost":2,"location":"types/power_types/modify_hurt_ticks/","text":"Modify Hurt Ticks Power Type Modifies how long the entity that has the power is immune to damage upon being damaged. Type ID: eggolib:modify_hurt_ticks Note By default, an entity has a \"hurt ticks\" value of 20. The entity will only receive damage again only if either their \"hurt ticks\" value is less than 10 or if they receive a damage with a higher value than the previous. Fields Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the actor or target entities. bientity_condition Bi-entity Condition Type optional If specified, the specified action/modifier(s) will only be executed/applied if this condition is fulfilled by either or both actor or target entities. damage_condition Damage Condition Type optional If specified, the specified action/modifier(s) will only be executed/applied if this condition is fulfilled by the damage dealt to the target entity. modifier Attribute Modifier optional If specified, this modifier will be applied to the hurt ticks of the target entity. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the hurt ticks of the target entity. Examples Example #1 Example #2 { \"type\" : \"eggolib:modify_hurt_ticks\" , \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : 1 } } This example will double the hurt ticks of the entity that has the power. { \"type\" : \"eggolib:modify_hurt_ticks\" , \"damage_condition\" : { \"type\" : \"apoli:attacker\" }, \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : -0.5 } } This example will half the hurt ticks of the entity that has the power only if the entity has been attacked by another entity.","title":"Modify Hurt Ticks (Power Type)"},{"location":"types/power_types/modify_hurt_ticks/#modify_hurt_ticks","text":"Power Type Modifies how long the entity that has the power is immune to damage upon being damaged. Type ID: eggolib:modify_hurt_ticks Note By default, an entity has a \"hurt ticks\" value of 20. The entity will only receive damage again only if either their \"hurt ticks\" value is less than 10 or if they receive a damage with a higher value than the previous.","title":"Modify Hurt Ticks"},{"location":"types/power_types/modify_hurt_ticks/#fields","text":"Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the actor or target entities. bientity_condition Bi-entity Condition Type optional If specified, the specified action/modifier(s) will only be executed/applied if this condition is fulfilled by either or both actor or target entities. damage_condition Damage Condition Type optional If specified, the specified action/modifier(s) will only be executed/applied if this condition is fulfilled by the damage dealt to the target entity. modifier Attribute Modifier optional If specified, this modifier will be applied to the hurt ticks of the target entity. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the hurt ticks of the target entity.","title":"Fields"},{"location":"types/power_types/modify_hurt_ticks/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:modify_hurt_ticks\" , \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : 1 } } This example will double the hurt ticks of the entity that has the power. { \"type\" : \"eggolib:modify_hurt_ticks\" , \"damage_condition\" : { \"type\" : \"apoli:attacker\" }, \"modifier\" : { \"operation\" : \"multiply_total\" , \"value\" : -0.5 } } This example will half the hurt ticks of the entity that has the power only if the entity has been attacked by another entity.","title":"Examples"},{"boost":2,"location":"types/power_types/modify_label_render/","text":"Modify Label Render Power Type Modifies the name label of the entity that has the power. Type ID: eggolib:modify_label_render Fields Field Type Default Description before_parse_action Entity Action Type optional If specified, this action will be executed on the entity before the text is parsed. after_parse_action Entity Action Type optional If specified, this action will be executed on the entity after the text is parsed and if the parsed text is not the same as it was previously. render_mode Render Mode \"default\" Determines how the name label of the entity is rendered. text Text Component optional If specified, this text will be parsed to replace the content of the name label of the entity. tick_rate Positive Integer 20 Determines the interval at which the action(s) is/are executed and the text is parsed. priority Integer 0 Determines the priority of the power. The power with the highest value will be used. Examples Example #1 Example #2 Example #3 { \"type\" : \"eggolib:modify_label_render\" , \"render_mode\" : \"hide_partially\" } This example will render the name label of the entity semi-transparently as if the entity is sneaking. { \"type\" : \"eggolib:modify_label_render\" , \"text\" : { \"text\" : \"[REDACTED]\" , \"bold\" : true , \"color\" : \"black\" } } This example will replace the content of the name label of the entity to [REDACTED] with the color black. { \"type\" : \"eggolib:modify_label_render\" , \"text\" : [ { \"text\" : \"[\" , \"color\" : \"yellow\" }, { \"selector\" : \"@s\" , \"color\" : \"green\" , \"bold\" : true }, { \"text\" : \"]\" , \"color\" : \"yellow\" } ] } This example will replace the contents of the name label of the entity to have its name (with the use of the selector JSON text component) colored green and surround it with yellow-colored brackets","title":"Modify Label Render (Power Type)"},{"location":"types/power_types/modify_label_render/#modify_label_render","text":"Power Type Modifies the name label of the entity that has the power. Type ID: eggolib:modify_label_render","title":"Modify Label Render"},{"location":"types/power_types/modify_label_render/#fields","text":"Field Type Default Description before_parse_action Entity Action Type optional If specified, this action will be executed on the entity before the text is parsed. after_parse_action Entity Action Type optional If specified, this action will be executed on the entity after the text is parsed and if the parsed text is not the same as it was previously. render_mode Render Mode \"default\" Determines how the name label of the entity is rendered. text Text Component optional If specified, this text will be parsed to replace the content of the name label of the entity. tick_rate Positive Integer 20 Determines the interval at which the action(s) is/are executed and the text is parsed. priority Integer 0 Determines the priority of the power. The power with the highest value will be used.","title":"Fields"},{"location":"types/power_types/modify_label_render/#examples","text":"Example #1 Example #2 Example #3 { \"type\" : \"eggolib:modify_label_render\" , \"render_mode\" : \"hide_partially\" } This example will render the name label of the entity semi-transparently as if the entity is sneaking. { \"type\" : \"eggolib:modify_label_render\" , \"text\" : { \"text\" : \"[REDACTED]\" , \"bold\" : true , \"color\" : \"black\" } } This example will replace the content of the name label of the entity to [REDACTED] with the color black. { \"type\" : \"eggolib:modify_label_render\" , \"text\" : [ { \"text\" : \"[\" , \"color\" : \"yellow\" }, { \"selector\" : \"@s\" , \"color\" : \"green\" , \"bold\" : true }, { \"text\" : \"]\" , \"color\" : \"yellow\" } ] } This example will replace the contents of the name label of the entity to have its name (with the use of the selector JSON text component) colored green and surround it with yellow-colored brackets","title":"Examples"},{"boost":2,"location":"types/power_types/modify_mouse_sensitivity/","text":"Modify Mouse Sensitivity Power Type Modifies the sensitivity of the player's mouse. Type ID: eggolib:modify_mouse_sensitivity Fields Field Type Default Description modifier Attribute Modifier optional If specified, this modifier will be applied to the sensitivity of the player's mouse. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the sensitivity of the player's mouse. Examples Example #1 { \"type\" : \"eggolib:modify_mouse_sensitivity\" , \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : -0.5 } } This example will decrease the sensitivity of the player's mouse by 50%.","title":"Modify Mouse Sensitivity (Power Type)"},{"location":"types/power_types/modify_mouse_sensitivity/#modify_mouse_sensitivity","text":"Power Type Modifies the sensitivity of the player's mouse. Type ID: eggolib:modify_mouse_sensitivity","title":"Modify Mouse Sensitivity"},{"location":"types/power_types/modify_mouse_sensitivity/#fields","text":"Field Type Default Description modifier Attribute Modifier optional If specified, this modifier will be applied to the sensitivity of the player's mouse. modifiers Array of Attribute Modifiers optional If specified, these modifiers will be applied to the sensitivity of the player's mouse.","title":"Fields"},{"location":"types/power_types/modify_mouse_sensitivity/#examples","text":"Example #1 { \"type\" : \"eggolib:modify_mouse_sensitivity\" , \"modifier\" : { \"operation\" : \"multiply_total_multiplicative\" , \"value\" : -0.5 } } This example will decrease the sensitivity of the player's mouse by 50%.","title":"Examples"},{"boost":2,"location":"types/power_types/prevent_block_place/","text":"Prevent Block Place Power Type Prevents the player that has the power from placing a block. Type ID: eggolib:prevent_block_place Fields Field Type Default Description entity_action Entity Action Type optional If specified, this action will be executed on the player upon attempting to place a block. held_item_action Item Action Type optional If specified, this action will be executed on the item the player has used to place a block. result_item_action Item Action Type optional If specified, this action will be executed on the item that will be given to the player upon placing a block. place_to_action Block Action Type optional If specified, this action will be executed at the position of the block the player has attempted to place. place_on_action Block Action Type optional If specified, this action will be executed on the block the player attempted to place a block on. item_condition Item Condition Type optional If specified, only execute the specified actions if the item the player has used to place a block fulfills this condition. place_to_condition Block Condition Type optional If specified, only execute the specified actions if the old block at the position of the new block the player has attempted to place fulfills this condition. place_on_condition Block Condition Type optional If specified, only execute the specified actions if the block the player has attempted to place a block on fulfills this condition. directions Array of Strings [\"up\", \"down\", \"north\", \"south\", \"east\", \"west\"] Determines if the specified actions should be executed if the player has attempted to place a block at the specified side(s) of a block. hands Array of Strings [\"main_hand\", \"off_hand\"] Determines if the specified actions should be executed if the player has attempted to place a block using the specified hand(s). result_stack Item Stack optional If specified, this item will be given to the player upon attempting to place a block. Examples Example #1 Example #2 { \"type\" : \"eggolib:prevent_block_place\" , \"place_to_condition\" : { \"type\" : \"apoli:fluid\" , \"fluid_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:water\" } } } This example will prevent the player that has the power from placing a block if there's a Water fluid at where the block is supposed to be placed to. { \"type\" : \"eggolib:prevent_block_place\" , \"entity_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"title @s actionbar {\\\"text\\\": \\\"Can't place a block there!\\\", \\\"color\\\": \\\"red\\\"}\" }, \"place_on_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:farmland\" }, \"directions\" : [ \"up\" ] } This example will prevent the player that has the power from placing a block on top of a Farmland block.","title":"Prevent Block Place (Power Type)"},{"location":"types/power_types/prevent_block_place/#prevent_block_place","text":"Power Type Prevents the player that has the power from placing a block. Type ID: eggolib:prevent_block_place","title":"Prevent Block Place"},{"location":"types/power_types/prevent_block_place/#fields","text":"Field Type Default Description entity_action Entity Action Type optional If specified, this action will be executed on the player upon attempting to place a block. held_item_action Item Action Type optional If specified, this action will be executed on the item the player has used to place a block. result_item_action Item Action Type optional If specified, this action will be executed on the item that will be given to the player upon placing a block. place_to_action Block Action Type optional If specified, this action will be executed at the position of the block the player has attempted to place. place_on_action Block Action Type optional If specified, this action will be executed on the block the player attempted to place a block on. item_condition Item Condition Type optional If specified, only execute the specified actions if the item the player has used to place a block fulfills this condition. place_to_condition Block Condition Type optional If specified, only execute the specified actions if the old block at the position of the new block the player has attempted to place fulfills this condition. place_on_condition Block Condition Type optional If specified, only execute the specified actions if the block the player has attempted to place a block on fulfills this condition. directions Array of Strings [\"up\", \"down\", \"north\", \"south\", \"east\", \"west\"] Determines if the specified actions should be executed if the player has attempted to place a block at the specified side(s) of a block. hands Array of Strings [\"main_hand\", \"off_hand\"] Determines if the specified actions should be executed if the player has attempted to place a block using the specified hand(s). result_stack Item Stack optional If specified, this item will be given to the player upon attempting to place a block.","title":"Fields"},{"location":"types/power_types/prevent_block_place/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:prevent_block_place\" , \"place_to_condition\" : { \"type\" : \"apoli:fluid\" , \"fluid_condition\" : { \"type\" : \"apoli:in_tag\" , \"tag\" : \"minecraft:water\" } } } This example will prevent the player that has the power from placing a block if there's a Water fluid at where the block is supposed to be placed to. { \"type\" : \"eggolib:prevent_block_place\" , \"entity_action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"title @s actionbar {\\\"text\\\": \\\"Can't place a block there!\\\", \\\"color\\\": \\\"red\\\"}\" }, \"place_on_condition\" : { \"type\" : \"apoli:block\" , \"block\" : \"minecraft:farmland\" }, \"directions\" : [ \"up\" ] } This example will prevent the player that has the power from placing a block on top of a Farmland block.","title":"Examples"},{"boost":2,"location":"types/power_types/prevent_critical_hit/","text":"Prevent Critical Hit Power Type Prevents the player from dealing critical hits. Type ID: eggolib:prevent_critical_hit Note In the context of this power type, the 'actor' will be the entity that dealt the critical hit whilst the 'target' will be the entity that was hit. Fields Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the 'actor' and 'target' upon the power preventing critical hits. bientity_condition Bi-entity Condition Type optional If specified, the power will only prevent critical hits if this condition is fulfilled by either or both the 'actor' and the 'target'. damage_condition Damage Condition Type optional If specified, the power will only prevent critical hits if this condition is fulfilled by the damage dealt by the 'actor'. priority Integer 0 Determines the priority of the power. Powers with higher priority value will be triggered first. Examples Example #1 Example #2 { \"type\" : \"eggolib:prevent_critical_hit\" , \"bientity_action\" : { \"type\" : \"apoli:actor_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"title @s actionbar {\\\"text\\\": \\\"Cannot deal critical hits!\\\", \\\"color\\\": \\\"red\\\"}\" } } } This example will prevent the player from dealing critical hits. { \"type\" : \"eggolib:prevent_critical_hit\" , \"bientity_condition\" : { \"type\" : \"apoli:target_condition\" , \"condition\" : { \"type\" : \"eggolib:has_tag\" , \"tag\" : \"excluded\" }, \"inverted\" : true } } This example will prevent the player from dealing critical hits to entities that have the excluded tag added via the /tag command","title":"Prevent Critical Hit (Power Type)"},{"location":"types/power_types/prevent_critical_hit/#prevent_critical_hit","text":"Power Type Prevents the player from dealing critical hits. Type ID: eggolib:prevent_critical_hit Note In the context of this power type, the 'actor' will be the entity that dealt the critical hit whilst the 'target' will be the entity that was hit.","title":"Prevent Critical Hit"},{"location":"types/power_types/prevent_critical_hit/#fields","text":"Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the 'actor' and 'target' upon the power preventing critical hits. bientity_condition Bi-entity Condition Type optional If specified, the power will only prevent critical hits if this condition is fulfilled by either or both the 'actor' and the 'target'. damage_condition Damage Condition Type optional If specified, the power will only prevent critical hits if this condition is fulfilled by the damage dealt by the 'actor'. priority Integer 0 Determines the priority of the power. Powers with higher priority value will be triggered first.","title":"Fields"},{"location":"types/power_types/prevent_critical_hit/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:prevent_critical_hit\" , \"bientity_action\" : { \"type\" : \"apoli:actor_action\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"title @s actionbar {\\\"text\\\": \\\"Cannot deal critical hits!\\\", \\\"color\\\": \\\"red\\\"}\" } } } This example will prevent the player from dealing critical hits. { \"type\" : \"eggolib:prevent_critical_hit\" , \"bientity_condition\" : { \"type\" : \"apoli:target_condition\" , \"condition\" : { \"type\" : \"eggolib:has_tag\" , \"tag\" : \"excluded\" }, \"inverted\" : true } } This example will prevent the player from dealing critical hits to entities that have the excluded tag added via the /tag command","title":"Examples"},{"boost":2,"location":"types/power_types/prevent_item_pickup/","text":"Prevent Item Pickup Power Type Prevents the entity that has the power from picking up an item. Type ID: eggolib:prevent_item_pickup Note In the context of this power type, the ' actor ' entity is the entity that may have thrown the item while the ' target ' entity is the entity that has attempted to pick up an item. Fields Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the ' actor ' and ' target ' entities upon the ' target ' entity being prevented from picking up an item. item_action Item Action Type optional If specified, this action will be executed on the item that was attempted to be picked up. bientity_condition Bi-entity Condition Type optional If specified, only prevent the item from being picked up and execute the actions if this condition is fulfilled by either or both the ' actor ' and ' target ' entities. item_condition Item Condition Type optional If specified, only items that fulfills this condition will be prevented from being picked up. Examples Example #1 Example #2 { \"type\" : \"eggolib:prevent_item_pickup\" , \"item_condition\" : { \"type\" : \"eggolib:block_item\" } } This example will prevent the entity that has the power from picking up any block items. { \"type\" : \"eggolib:prevent_item_pickup\" , \"bientity_condition\" : { \"type\" : \"eggolib:has_matching_tag\" , \"inverted\" : true }, \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:diamond\" } } } This example will prevent the entity that has the power from picking up a Diamond item if that said item is thrown by an entity that doesn't have a matching tag with the entity that has the power.","title":"Prevent Item Pickup (Power Type)"},{"location":"types/power_types/prevent_item_pickup/#prevent_item_pickup","text":"Power Type Prevents the entity that has the power from picking up an item. Type ID: eggolib:prevent_item_pickup Note In the context of this power type, the ' actor ' entity is the entity that may have thrown the item while the ' target ' entity is the entity that has attempted to pick up an item.","title":"Prevent Item Pickup"},{"location":"types/power_types/prevent_item_pickup/#fields","text":"Field Type Default Description bientity_action Bi-entity Action Type optional If specified, this action will be executed on either or both the ' actor ' and ' target ' entities upon the ' target ' entity being prevented from picking up an item. item_action Item Action Type optional If specified, this action will be executed on the item that was attempted to be picked up. bientity_condition Bi-entity Condition Type optional If specified, only prevent the item from being picked up and execute the actions if this condition is fulfilled by either or both the ' actor ' and ' target ' entities. item_condition Item Condition Type optional If specified, only items that fulfills this condition will be prevented from being picked up.","title":"Fields"},{"location":"types/power_types/prevent_item_pickup/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:prevent_item_pickup\" , \"item_condition\" : { \"type\" : \"eggolib:block_item\" } } This example will prevent the entity that has the power from picking up any block items. { \"type\" : \"eggolib:prevent_item_pickup\" , \"bientity_condition\" : { \"type\" : \"eggolib:has_matching_tag\" , \"inverted\" : true }, \"item_condition\" : { \"type\" : \"apoli:ingredient\" , \"ingredient\" : { \"item\" : \"minecraft:diamond\" } } } This example will prevent the entity that has the power from picking up a Diamond item if that said item is thrown by an entity that doesn't have a matching tag with the entity that has the power.","title":"Examples"},{"boost":2,"location":"types/power_types/prevent_key_use/","text":"Prevent Key Use Power Type Prevents the entity from pressing certain keybinds. Type ID: eggolib:prevent_key_use Note This power type will only work for players. Fields Field Type Default Description key Functional Key optional If specified, this key will be prevented from being pressed. keys Array of Functional Keys optional If specified, these keys will be prevented from being pressed. Examples Example #1 Example #2 { \"type\" : \"eggolib:prevent_key_use\" , \"key\" : \"key.inventory\" } This example will prevent the entity that has the power from pressing the key.inventory keybind, therefore preventing the entity from accessing their inventory. { \"type\" : \"eggolib:prevent_key_use\" , \"keys\" : [ \"key.hotbar.1\" , { \"key\" : \"key.jump\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"title @s actionbar {\\\"text\\\": \\\"You cannot jump!\\\", \\\"color\\\": \\\"red\\\"}\" } } ] } This example will prevent the entity from pressing the key.hotbar.1 keybind and the key.jump keybind with a \"You cannot jump!\" red-colored message.","title":"Prevent Key Use (Power Type)"},{"location":"types/power_types/prevent_key_use/#prevent_key_use","text":"Power Type Prevents the entity from pressing certain keybinds. Type ID: eggolib:prevent_key_use Note This power type will only work for players.","title":"Prevent Key Use"},{"location":"types/power_types/prevent_key_use/#fields","text":"Field Type Default Description key Functional Key optional If specified, this key will be prevented from being pressed. keys Array of Functional Keys optional If specified, these keys will be prevented from being pressed.","title":"Fields"},{"location":"types/power_types/prevent_key_use/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:prevent_key_use\" , \"key\" : \"key.inventory\" } This example will prevent the entity that has the power from pressing the key.inventory keybind, therefore preventing the entity from accessing their inventory. { \"type\" : \"eggolib:prevent_key_use\" , \"keys\" : [ \"key.hotbar.1\" , { \"key\" : \"key.jump\" , \"action\" : { \"type\" : \"apoli:execute_command\" , \"command\" : \"title @s actionbar {\\\"text\\\": \\\"You cannot jump!\\\", \\\"color\\\": \\\"red\\\"}\" } } ] } This example will prevent the entity from pressing the key.hotbar.1 keybind and the key.jump keybind with a \"You cannot jump!\" red-colored message.","title":"Examples"},{"boost":2,"location":"types/power_types/starting_equipment/","text":"Starting Equipment Power Type Provides the entity with the specified items when the power is granted. Type ID: eggolib:starting_equipment Fields Field Type Default Description stack Generalized Positioned Item Stack optional If specified, this item stack will be given to the entity. stacks Array of Generalized Positioned Item Stack optional If specified, these item stacks will be given to the entity. Examples Example #1 Example #2 { \"type\" : \"eggolib:starting_equipment\" , \"stack\" : { \"item\" : \"minecraft:glass\" , \"slot\" : \"armor.head\" } } This example will provide a Glass block on the entity's head. { \"type\" : \"eggolib:starting_equipment\" , \"stacks\" : [ { \"item\" : \"minecraft:shield\" , \"slot\" : \"weapon.offhand\" }, { \"item\" : \"minecraft:iron_sword\" , \"slot\" : \"weapon.mainhand\" } ] } This example will provide a Shield and an Iron Sword to the entity in its offhand and mainhand equipment slots respectively.","title":"Starting Equipment (Power Type)"},{"location":"types/power_types/starting_equipment/#starting_equipment","text":"Power Type Provides the entity with the specified items when the power is granted. Type ID: eggolib:starting_equipment","title":"Starting Equipment"},{"location":"types/power_types/starting_equipment/#fields","text":"Field Type Default Description stack Generalized Positioned Item Stack optional If specified, this item stack will be given to the entity. stacks Array of Generalized Positioned Item Stack optional If specified, these item stacks will be given to the entity.","title":"Fields"},{"location":"types/power_types/starting_equipment/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:starting_equipment\" , \"stack\" : { \"item\" : \"minecraft:glass\" , \"slot\" : \"armor.head\" } } This example will provide a Glass block on the entity's head. { \"type\" : \"eggolib:starting_equipment\" , \"stacks\" : [ { \"item\" : \"minecraft:shield\" , \"slot\" : \"weapon.offhand\" }, { \"item\" : \"minecraft:iron_sword\" , \"slot\" : \"weapon.mainhand\" } ] } This example will provide a Shield and an Iron Sword to the entity in its offhand and mainhand equipment slots respectively.","title":"Examples"},{"boost":2,"location":"types/power_types/stat/","text":"Stat Power Type Tracks the effective value of the specified statistic; essentially works the same as the Resource (Power Type) . Type ID: eggolib:stat Fields Field Type Default Description stat Stat The statistic to keep track the value of. on_change_action Entity Action Type optional If specified, this action will be executed on the entity if the stored value is changed. min_action Entity Action Type optional If specified, this action will be executed once the minimum value is reached. max_action Entity Action Type optional If specified, this action will be executed once the maximum value is reached. hud_render HUD Render optional Determines how the stored value is visualized in the HUD. min Integer 0 The minimum value that is allowed to be stored in the power max Integer 2147483647 The maximum value that is allowed to be stored in the power. start_value Integer The value of the min field The stored starting value upon gaining the power. Examples Example #1 Example #2 { \"type\" : \"eggolib:stat\" , \"stat\" : { \"type\" : \"custom\" , \"id\" : \"minecraft:damage_dealt\" }, \"max\" : 100 , \"hud_render\" : { \"should_render\" : true } } This example will keep track of the effective value of the minecraft.custom:minecraft.damage_dealt statistic of the player, with a maximum value of 100. { \"type\" : \"eggolib:stat\" , \"stat\" : { \"type\" : \"mined\" , \"id\" : \"minecraft:sand\" } } This example will keep track of the effective value of the minecraft.mined:minecraft.sand statistic of the player.","title":"Stat (Power Type)"},{"location":"types/power_types/stat/#stat","text":"Power Type Tracks the effective value of the specified statistic; essentially works the same as the Resource (Power Type) . Type ID: eggolib:stat","title":"Stat"},{"location":"types/power_types/stat/#fields","text":"Field Type Default Description stat Stat The statistic to keep track the value of. on_change_action Entity Action Type optional If specified, this action will be executed on the entity if the stored value is changed. min_action Entity Action Type optional If specified, this action will be executed once the minimum value is reached. max_action Entity Action Type optional If specified, this action will be executed once the maximum value is reached. hud_render HUD Render optional Determines how the stored value is visualized in the HUD. min Integer 0 The minimum value that is allowed to be stored in the power max Integer 2147483647 The maximum value that is allowed to be stored in the power. start_value Integer The value of the min field The stored starting value upon gaining the power.","title":"Fields"},{"location":"types/power_types/stat/#examples","text":"Example #1 Example #2 { \"type\" : \"eggolib:stat\" , \"stat\" : { \"type\" : \"custom\" , \"id\" : \"minecraft:damage_dealt\" }, \"max\" : 100 , \"hud_render\" : { \"should_render\" : true } } This example will keep track of the effective value of the minecraft.custom:minecraft.damage_dealt statistic of the player, with a maximum value of 100. { \"type\" : \"eggolib:stat\" , \"stat\" : { \"type\" : \"mined\" , \"id\" : \"minecraft:sand\" } } This example will keep track of the effective value of the minecraft.mined:minecraft.sand statistic of the player.","title":"Examples"}]}